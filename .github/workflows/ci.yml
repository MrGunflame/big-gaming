name: CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  merge_group:

env:
  RUST_BACKTRACE: full
  MIRIFLAGS: -Zmiri-disable-isolation -Zmiri-backtrace=full
  nightly: nightly-2023-08-12

jobs:
  fmt:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - run: rustup update stable --no-self-update && rustup default stable
    - run: rustup component add rustfmt
    - run: cargo fmt --all --check

  stable:
    strategy:
      matrix:
        os:
        - ubuntu-latest
        - windows-latest
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index
          ~/.cargo/registry/cache
          ~/.cargo/git/db
          target/
        key: ${{ runner.os }}-stable
    - run: rustup update stable --no-self-update && rustup default stable
    - run: sudo apt-get update; sudo apt-get install --no-install-recommends libasound2-dev libudev-dev libwayland-dev libxkbcommon-dev
      if: runner.os == 'linux'
    - run: cargo test --workspace

  docs:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index
          ~/.cargo/registry/cache
          ~/.cargo/git/db
          target/
        key: ${{ runner.os }}-docs
    - run: rustup update stable --no-self-update && rustup default stable
    - run: sudo apt-get update; sudo apt-get install --no-install-recommends libasound2-dev libudev-dev libwayland-dev libxkbcommon-dev
    - run: cargo doc --no-deps --all-features

  per_feature:
    strategy:
      matrix:
        os:
        - ubuntu-latest
        - windows-latest
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index
          ~/.cargo/registry/cache
          ~/.cargo/git/db
          target/
        key: ${{ runner.os }}-per_feature
    - uses: taiki-e/install-action@v2
      with:
        tool: cargo-hack
    - run: rustup update stable --no-self-update && rustup default stable
    - run: sudo apt-get update; sudo apt-get install --no-install-recommends libasound2-dev libudev-dev libwayland-dev libxkbcommon-dev
      if: runner.os == 'linux'
    - run: cargo hack test --workspace --feature-powerset
