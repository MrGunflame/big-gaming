<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1270" onload="init(evt)" viewBox="0 0 1200 1270" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1270" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1253.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1253.00"> </text><svg id="frames" x="10" width="1180" total_samples="2944"><g><title>TaskPool_(0) (1 samples, 0.03%)</title><rect x="0.0000%" y="1205" width="0.0340%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1215.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="0.0000%" y="1189" width="0.0340%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1199.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="0.0000%" y="1173" width="0.0340%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1183.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1 samples, 0.03%)</title><rect x="0.0000%" y="1157" width="0.0340%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1167.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.03%)</title><rect x="0.0000%" y="1141" width="0.0340%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.03%)</title><rect x="0.0000%" y="1125" width="0.0340%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1135.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.03%)</title><rect x="0.0000%" y="1109" width="0.0340%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1119.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (1 samples, 0.03%)</title><rect x="0.0000%" y="1093" width="0.0340%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1103.50"></text></g><g><title>std::sys::unix::thread::guard::current (1 samples, 0.03%)</title><rect x="0.0000%" y="1077" width="0.0340%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1087.50"></text></g><g><title>pthread_getattr_np (1 samples, 0.03%)</title><rect x="0.0000%" y="1061" width="0.0340%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1071.50"></text></g><g><title>malloc (1 samples, 0.03%)</title><rect x="0.0000%" y="1045" width="0.0340%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1055.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="0.0000%" y="1029" width="0.0340%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1039.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="0.0000%" y="1013" width="0.0340%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1023.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="0.0000%" y="997" width="0.0340%" height="15" fill="rgb(206,188,39)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1007.50"></text></g><g><title>__mmap (1 samples, 0.03%)</title><rect x="0.0000%" y="981" width="0.0340%" height="15" fill="rgb(217,207,13)" fg:x="0" fg:w="1"/><text x="0.2500%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.0000%" y="965" width="0.0340%" height="15" fill="rgb(231,73,38)" fg:x="0" fg:w="1"/><text x="0.2500%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.0000%" y="949" width="0.0340%" height="15" fill="rgb(225,20,46)" fg:x="0" fg:w="1"/><text x="0.2500%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.0000%" y="933" width="0.0340%" height="15" fill="rgb(210,31,41)" fg:x="0" fg:w="1"/><text x="0.2500%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.0000%" y="917" width="0.0340%" height="15" fill="rgb(221,200,47)" fg:x="0" fg:w="1"/><text x="0.2500%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.0000%" y="901" width="0.0340%" height="15" fill="rgb(226,26,5)" fg:x="0" fg:w="1"/><text x="0.2500%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.0000%" y="885" width="0.0340%" height="15" fill="rgb(249,33,26)" fg:x="0" fg:w="1"/><text x="0.2500%" y="895.50"></text></g><g><title>TaskPool_(1) (1 samples, 0.03%)</title><rect x="0.0340%" y="1205" width="0.0340%" height="15" fill="rgb(235,183,28)" fg:x="1" fg:w="1"/><text x="0.2840%" y="1215.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.0340%" y="1189" width="0.0340%" height="15" fill="rgb(221,5,38)" fg:x="1" fg:w="1"/><text x="0.2840%" y="1199.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.0340%" y="1173" width="0.0340%" height="15" fill="rgb(247,18,42)" fg:x="1" fg:w="1"/><text x="0.2840%" y="1183.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.0340%" y="1157" width="0.0340%" height="15" fill="rgb(241,131,45)" fg:x="1" fg:w="1"/><text x="0.2840%" y="1167.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.0340%" y="1141" width="0.0340%" height="15" fill="rgb(249,31,29)" fg:x="1" fg:w="1"/><text x="0.2840%" y="1151.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.0340%" y="1125" width="0.0340%" height="15" fill="rgb(225,111,53)" fg:x="1" fg:w="1"/><text x="0.2840%" y="1135.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.0340%" y="1109" width="0.0340%" height="15" fill="rgb(238,160,17)" fg:x="1" fg:w="1"/><text x="0.2840%" y="1119.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.0340%" y="1093" width="0.0340%" height="15" fill="rgb(214,148,48)" fg:x="1" fg:w="1"/><text x="0.2840%" y="1103.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.0340%" y="1077" width="0.0340%" height="15" fill="rgb(232,36,49)" fg:x="1" fg:w="1"/><text x="0.2840%" y="1087.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.0340%" y="1061" width="0.0340%" height="15" fill="rgb(209,103,24)" fg:x="1" fg:w="1"/><text x="0.2840%" y="1071.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.0340%" y="1045" width="0.0340%" height="15" fill="rgb(229,88,8)" fg:x="1" fg:w="1"/><text x="0.2840%" y="1055.50"></text></g><g><title>TaskPool_(10) (1 samples, 0.03%)</title><rect x="0.0679%" y="1205" width="0.0340%" height="15" fill="rgb(213,181,19)" fg:x="2" fg:w="1"/><text x="0.3179%" y="1215.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="0.0679%" y="1189" width="0.0340%" height="15" fill="rgb(254,191,54)" fg:x="2" fg:w="1"/><text x="0.3179%" y="1199.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="0.0679%" y="1173" width="0.0340%" height="15" fill="rgb(241,83,37)" fg:x="2" fg:w="1"/><text x="0.3179%" y="1183.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1 samples, 0.03%)</title><rect x="0.0679%" y="1157" width="0.0340%" height="15" fill="rgb(233,36,39)" fg:x="2" fg:w="1"/><text x="0.3179%" y="1167.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.03%)</title><rect x="0.0679%" y="1141" width="0.0340%" height="15" fill="rgb(226,3,54)" fg:x="2" fg:w="1"/><text x="0.3179%" y="1151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.03%)</title><rect x="0.0679%" y="1125" width="0.0340%" height="15" fill="rgb(245,192,40)" fg:x="2" fg:w="1"/><text x="0.3179%" y="1135.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.03%)</title><rect x="0.0679%" y="1109" width="0.0340%" height="15" fill="rgb(238,167,29)" fg:x="2" fg:w="1"/><text x="0.3179%" y="1119.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (1 samples, 0.03%)</title><rect x="0.0679%" y="1093" width="0.0340%" height="15" fill="rgb(232,182,51)" fg:x="2" fg:w="1"/><text x="0.3179%" y="1103.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.03%)</title><rect x="0.0679%" y="1077" width="0.0340%" height="15" fill="rgb(231,60,39)" fg:x="2" fg:w="1"/><text x="0.3179%" y="1087.50"></text></g><g><title>std::panicking::try (1 samples, 0.03%)</title><rect x="0.0679%" y="1061" width="0.0340%" height="15" fill="rgb(208,69,12)" fg:x="2" fg:w="1"/><text x="0.3179%" y="1071.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.03%)</title><rect x="0.0679%" y="1045" width="0.0340%" height="15" fill="rgb(235,93,37)" fg:x="2" fg:w="1"/><text x="0.3179%" y="1055.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.03%)</title><rect x="0.0679%" y="1029" width="0.0340%" height="15" fill="rgb(213,116,39)" fg:x="2" fg:w="1"/><text x="0.3179%" y="1039.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="0.0679%" y="1013" width="0.0340%" height="15" fill="rgb(222,207,29)" fg:x="2" fg:w="1"/><text x="0.3179%" y="1023.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.03%)</title><rect x="0.0679%" y="997" width="0.0340%" height="15" fill="rgb(206,96,30)" fg:x="2" fg:w="1"/><text x="0.3179%" y="1007.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="0.0679%" y="981" width="0.0340%" height="15" fill="rgb(218,138,4)" fg:x="2" fg:w="1"/><text x="0.3179%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.03%)</title><rect x="0.0679%" y="965" width="0.0340%" height="15" fill="rgb(250,191,14)" fg:x="2" fg:w="1"/><text x="0.3179%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.03%)</title><rect x="0.0679%" y="949" width="0.0340%" height="15" fill="rgb(239,60,40)" fg:x="2" fg:w="1"/><text x="0.3179%" y="959.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="0.0679%" y="933" width="0.0340%" height="15" fill="rgb(206,27,48)" fg:x="2" fg:w="1"/><text x="0.3179%" y="943.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.03%)</title><rect x="0.0679%" y="917" width="0.0340%" height="15" fill="rgb(225,35,8)" fg:x="2" fg:w="1"/><text x="0.3179%" y="927.50"></text></g><g><title>std::panicking::try (1 samples, 0.03%)</title><rect x="0.0679%" y="901" width="0.0340%" height="15" fill="rgb(250,213,24)" fg:x="2" fg:w="1"/><text x="0.3179%" y="911.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.03%)</title><rect x="0.0679%" y="885" width="0.0340%" height="15" fill="rgb(247,123,22)" fg:x="2" fg:w="1"/><text x="0.3179%" y="895.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="0.0679%" y="869" width="0.0340%" height="15" fill="rgb(231,138,38)" fg:x="2" fg:w="1"/><text x="0.3179%" y="879.50"></text></g><g><title>futures_lite::future::block_on (1 samples, 0.03%)</title><rect x="0.0679%" y="853" width="0.0340%" height="15" fill="rgb(231,145,46)" fg:x="2" fg:w="1"/><text x="0.3179%" y="863.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.03%)</title><rect x="0.0679%" y="837" width="0.0340%" height="15" fill="rgb(251,118,11)" fg:x="2" fg:w="1"/><text x="0.3179%" y="847.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.03%)</title><rect x="0.0679%" y="821" width="0.0340%" height="15" fill="rgb(217,147,25)" fg:x="2" fg:w="1"/><text x="0.3179%" y="831.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (1 samples, 0.03%)</title><rect x="0.0679%" y="805" width="0.0340%" height="15" fill="rgb(247,81,37)" fg:x="2" fg:w="1"/><text x="0.3179%" y="815.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (1 samples, 0.03%)</title><rect x="0.0679%" y="789" width="0.0340%" height="15" fill="rgb(209,12,38)" fg:x="2" fg:w="1"/><text x="0.3179%" y="799.50"></text></g><g><title>TaskPool_(11) (1 samples, 0.03%)</title><rect x="0.1019%" y="1205" width="0.0340%" height="15" fill="rgb(227,1,9)" fg:x="3" fg:w="1"/><text x="0.3519%" y="1215.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="0.1019%" y="1189" width="0.0340%" height="15" fill="rgb(248,47,43)" fg:x="3" fg:w="1"/><text x="0.3519%" y="1199.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="0.1019%" y="1173" width="0.0340%" height="15" fill="rgb(221,10,30)" fg:x="3" fg:w="1"/><text x="0.3519%" y="1183.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1 samples, 0.03%)</title><rect x="0.1019%" y="1157" width="0.0340%" height="15" fill="rgb(210,229,1)" fg:x="3" fg:w="1"/><text x="0.3519%" y="1167.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.03%)</title><rect x="0.1019%" y="1141" width="0.0340%" height="15" fill="rgb(222,148,37)" fg:x="3" fg:w="1"/><text x="0.3519%" y="1151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.03%)</title><rect x="0.1019%" y="1125" width="0.0340%" height="15" fill="rgb(234,67,33)" fg:x="3" fg:w="1"/><text x="0.3519%" y="1135.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.03%)</title><rect x="0.1019%" y="1109" width="0.0340%" height="15" fill="rgb(247,98,35)" fg:x="3" fg:w="1"/><text x="0.3519%" y="1119.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (1 samples, 0.03%)</title><rect x="0.1019%" y="1093" width="0.0340%" height="15" fill="rgb(247,138,52)" fg:x="3" fg:w="1"/><text x="0.3519%" y="1103.50"></text></g><g><title>std::sys::unix::thread::guard::current (1 samples, 0.03%)</title><rect x="0.1019%" y="1077" width="0.0340%" height="15" fill="rgb(213,79,30)" fg:x="3" fg:w="1"/><text x="0.3519%" y="1087.50"></text></g><g><title>pthread_getattr_np (1 samples, 0.03%)</title><rect x="0.1019%" y="1061" width="0.0340%" height="15" fill="rgb(246,177,23)" fg:x="3" fg:w="1"/><text x="0.3519%" y="1071.50"></text></g><g><title>pthread_getaffinity_np (1 samples, 0.03%)</title><rect x="0.1019%" y="1045" width="0.0340%" height="15" fill="rgb(230,62,27)" fg:x="3" fg:w="1"/><text x="0.3519%" y="1055.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.1019%" y="1029" width="0.0340%" height="15" fill="rgb(216,154,8)" fg:x="3" fg:w="1"/><text x="0.3519%" y="1039.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.1019%" y="1013" width="0.0340%" height="15" fill="rgb(244,35,45)" fg:x="3" fg:w="1"/><text x="0.3519%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.1019%" y="997" width="0.0340%" height="15" fill="rgb(251,115,12)" fg:x="3" fg:w="1"/><text x="0.3519%" y="1007.50"></text></g><g><title>TaskPool_(12) (1 samples, 0.03%)</title><rect x="0.1359%" y="1205" width="0.0340%" height="15" fill="rgb(240,54,50)" fg:x="4" fg:w="1"/><text x="0.3859%" y="1215.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="0.1359%" y="1189" width="0.0340%" height="15" fill="rgb(233,84,52)" fg:x="4" fg:w="1"/><text x="0.3859%" y="1199.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="0.1359%" y="1173" width="0.0340%" height="15" fill="rgb(207,117,47)" fg:x="4" fg:w="1"/><text x="0.3859%" y="1183.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1 samples, 0.03%)</title><rect x="0.1359%" y="1157" width="0.0340%" height="15" fill="rgb(249,43,39)" fg:x="4" fg:w="1"/><text x="0.3859%" y="1167.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.03%)</title><rect x="0.1359%" y="1141" width="0.0340%" height="15" fill="rgb(209,38,44)" fg:x="4" fg:w="1"/><text x="0.3859%" y="1151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.03%)</title><rect x="0.1359%" y="1125" width="0.0340%" height="15" fill="rgb(236,212,23)" fg:x="4" fg:w="1"/><text x="0.3859%" y="1135.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.03%)</title><rect x="0.1359%" y="1109" width="0.0340%" height="15" fill="rgb(242,79,21)" fg:x="4" fg:w="1"/><text x="0.3859%" y="1119.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (1 samples, 0.03%)</title><rect x="0.1359%" y="1093" width="0.0340%" height="15" fill="rgb(211,96,35)" fg:x="4" fg:w="1"/><text x="0.3859%" y="1103.50"></text></g><g><title>std::sys::unix::thread::Thread::set_name (1 samples, 0.03%)</title><rect x="0.1359%" y="1077" width="0.0340%" height="15" fill="rgb(253,215,40)" fg:x="4" fg:w="1"/><text x="0.3859%" y="1087.50"></text></g><g><title>pthread_setname_np (1 samples, 0.03%)</title><rect x="0.1359%" y="1061" width="0.0340%" height="15" fill="rgb(211,81,21)" fg:x="4" fg:w="1"/><text x="0.3859%" y="1071.50"></text></g><g><title>prctl (1 samples, 0.03%)</title><rect x="0.1359%" y="1045" width="0.0340%" height="15" fill="rgb(208,190,38)" fg:x="4" fg:w="1"/><text x="0.3859%" y="1055.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.1359%" y="1029" width="0.0340%" height="15" fill="rgb(235,213,38)" fg:x="4" fg:w="1"/><text x="0.3859%" y="1039.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.1359%" y="1013" width="0.0340%" height="15" fill="rgb(237,122,38)" fg:x="4" fg:w="1"/><text x="0.3859%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.1359%" y="997" width="0.0340%" height="15" fill="rgb(244,218,35)" fg:x="4" fg:w="1"/><text x="0.3859%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.1359%" y="981" width="0.0340%" height="15" fill="rgb(240,68,47)" fg:x="4" fg:w="1"/><text x="0.3859%" y="991.50"></text></g><g><title>TaskPool_(13) (1 samples, 0.03%)</title><rect x="0.1698%" y="1205" width="0.0340%" height="15" fill="rgb(210,16,53)" fg:x="5" fg:w="1"/><text x="0.4198%" y="1215.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="0.1698%" y="1189" width="0.0340%" height="15" fill="rgb(235,124,12)" fg:x="5" fg:w="1"/><text x="0.4198%" y="1199.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="0.1698%" y="1173" width="0.0340%" height="15" fill="rgb(224,169,11)" fg:x="5" fg:w="1"/><text x="0.4198%" y="1183.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1 samples, 0.03%)</title><rect x="0.1698%" y="1157" width="0.0340%" height="15" fill="rgb(250,166,2)" fg:x="5" fg:w="1"/><text x="0.4198%" y="1167.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.03%)</title><rect x="0.1698%" y="1141" width="0.0340%" height="15" fill="rgb(242,216,29)" fg:x="5" fg:w="1"/><text x="0.4198%" y="1151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.03%)</title><rect x="0.1698%" y="1125" width="0.0340%" height="15" fill="rgb(230,116,27)" fg:x="5" fg:w="1"/><text x="0.4198%" y="1135.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.03%)</title><rect x="0.1698%" y="1109" width="0.0340%" height="15" fill="rgb(228,99,48)" fg:x="5" fg:w="1"/><text x="0.4198%" y="1119.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (1 samples, 0.03%)</title><rect x="0.1698%" y="1093" width="0.0340%" height="15" fill="rgb(253,11,6)" fg:x="5" fg:w="1"/><text x="0.4198%" y="1103.50"></text></g><g><title>std::sys::unix::thread::guard::current (1 samples, 0.03%)</title><rect x="0.1698%" y="1077" width="0.0340%" height="15" fill="rgb(247,143,39)" fg:x="5" fg:w="1"/><text x="0.4198%" y="1087.50"></text></g><g><title>pthread_getattr_np (1 samples, 0.03%)</title><rect x="0.1698%" y="1061" width="0.0340%" height="15" fill="rgb(236,97,10)" fg:x="5" fg:w="1"/><text x="0.4198%" y="1071.50"></text></g><g><title>malloc (1 samples, 0.03%)</title><rect x="0.1698%" y="1045" width="0.0340%" height="15" fill="rgb(233,208,19)" fg:x="5" fg:w="1"/><text x="0.4198%" y="1055.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="0.1698%" y="1029" width="0.0340%" height="15" fill="rgb(216,164,2)" fg:x="5" fg:w="1"/><text x="0.4198%" y="1039.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="0.1698%" y="1013" width="0.0340%" height="15" fill="rgb(220,129,5)" fg:x="5" fg:w="1"/><text x="0.4198%" y="1023.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="0.1698%" y="997" width="0.0340%" height="15" fill="rgb(242,17,10)" fg:x="5" fg:w="1"/><text x="0.4198%" y="1007.50"></text></g><g><title>__mmap (1 samples, 0.03%)</title><rect x="0.1698%" y="981" width="0.0340%" height="15" fill="rgb(242,107,0)" fg:x="5" fg:w="1"/><text x="0.4198%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.1698%" y="965" width="0.0340%" height="15" fill="rgb(251,28,31)" fg:x="5" fg:w="1"/><text x="0.4198%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.1698%" y="949" width="0.0340%" height="15" fill="rgb(233,223,10)" fg:x="5" fg:w="1"/><text x="0.4198%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.1698%" y="933" width="0.0340%" height="15" fill="rgb(215,21,27)" fg:x="5" fg:w="1"/><text x="0.4198%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.1698%" y="917" width="0.0340%" height="15" fill="rgb(232,23,21)" fg:x="5" fg:w="1"/><text x="0.4198%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.1698%" y="901" width="0.0340%" height="15" fill="rgb(244,5,23)" fg:x="5" fg:w="1"/><text x="0.4198%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.1698%" y="885" width="0.0340%" height="15" fill="rgb(226,81,46)" fg:x="5" fg:w="1"/><text x="0.4198%" y="895.50"></text></g><g><title>TaskPool_(14) (1 samples, 0.03%)</title><rect x="0.2038%" y="1205" width="0.0340%" height="15" fill="rgb(247,70,30)" fg:x="6" fg:w="1"/><text x="0.4538%" y="1215.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="0.2038%" y="1189" width="0.0340%" height="15" fill="rgb(212,68,19)" fg:x="6" fg:w="1"/><text x="0.4538%" y="1199.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="0.2038%" y="1173" width="0.0340%" height="15" fill="rgb(240,187,13)" fg:x="6" fg:w="1"/><text x="0.4538%" y="1183.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1 samples, 0.03%)</title><rect x="0.2038%" y="1157" width="0.0340%" height="15" fill="rgb(223,113,26)" fg:x="6" fg:w="1"/><text x="0.4538%" y="1167.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.03%)</title><rect x="0.2038%" y="1141" width="0.0340%" height="15" fill="rgb(206,192,2)" fg:x="6" fg:w="1"/><text x="0.4538%" y="1151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.03%)</title><rect x="0.2038%" y="1125" width="0.0340%" height="15" fill="rgb(241,108,4)" fg:x="6" fg:w="1"/><text x="0.4538%" y="1135.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.03%)</title><rect x="0.2038%" y="1109" width="0.0340%" height="15" fill="rgb(247,173,49)" fg:x="6" fg:w="1"/><text x="0.4538%" y="1119.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (1 samples, 0.03%)</title><rect x="0.2038%" y="1093" width="0.0340%" height="15" fill="rgb(224,114,35)" fg:x="6" fg:w="1"/><text x="0.4538%" y="1103.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.03%)</title><rect x="0.2038%" y="1077" width="0.0340%" height="15" fill="rgb(245,159,27)" fg:x="6" fg:w="1"/><text x="0.4538%" y="1087.50"></text></g><g><title>std::panicking::try (1 samples, 0.03%)</title><rect x="0.2038%" y="1061" width="0.0340%" height="15" fill="rgb(245,172,44)" fg:x="6" fg:w="1"/><text x="0.4538%" y="1071.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.03%)</title><rect x="0.2038%" y="1045" width="0.0340%" height="15" fill="rgb(236,23,11)" fg:x="6" fg:w="1"/><text x="0.4538%" y="1055.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.03%)</title><rect x="0.2038%" y="1029" width="0.0340%" height="15" fill="rgb(205,117,38)" fg:x="6" fg:w="1"/><text x="0.4538%" y="1039.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="0.2038%" y="1013" width="0.0340%" height="15" fill="rgb(237,72,25)" fg:x="6" fg:w="1"/><text x="0.4538%" y="1023.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.03%)</title><rect x="0.2038%" y="997" width="0.0340%" height="15" fill="rgb(244,70,9)" fg:x="6" fg:w="1"/><text x="0.4538%" y="1007.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="0.2038%" y="981" width="0.0340%" height="15" fill="rgb(217,125,39)" fg:x="6" fg:w="1"/><text x="0.4538%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.03%)</title><rect x="0.2038%" y="965" width="0.0340%" height="15" fill="rgb(235,36,10)" fg:x="6" fg:w="1"/><text x="0.4538%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.03%)</title><rect x="0.2038%" y="949" width="0.0340%" height="15" fill="rgb(251,123,47)" fg:x="6" fg:w="1"/><text x="0.4538%" y="959.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="0.2038%" y="933" width="0.0340%" height="15" fill="rgb(221,13,13)" fg:x="6" fg:w="1"/><text x="0.4538%" y="943.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.03%)</title><rect x="0.2038%" y="917" width="0.0340%" height="15" fill="rgb(238,131,9)" fg:x="6" fg:w="1"/><text x="0.4538%" y="927.50"></text></g><g><title>std::panicking::try (1 samples, 0.03%)</title><rect x="0.2038%" y="901" width="0.0340%" height="15" fill="rgb(211,50,8)" fg:x="6" fg:w="1"/><text x="0.4538%" y="911.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.03%)</title><rect x="0.2038%" y="885" width="0.0340%" height="15" fill="rgb(245,182,24)" fg:x="6" fg:w="1"/><text x="0.4538%" y="895.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="0.2038%" y="869" width="0.0340%" height="15" fill="rgb(242,14,37)" fg:x="6" fg:w="1"/><text x="0.4538%" y="879.50"></text></g><g><title>futures_lite::future::block_on (1 samples, 0.03%)</title><rect x="0.2038%" y="853" width="0.0340%" height="15" fill="rgb(246,228,12)" fg:x="6" fg:w="1"/><text x="0.4538%" y="863.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.03%)</title><rect x="0.2038%" y="837" width="0.0340%" height="15" fill="rgb(213,55,15)" fg:x="6" fg:w="1"/><text x="0.4538%" y="847.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.03%)</title><rect x="0.2038%" y="821" width="0.0340%" height="15" fill="rgb(209,9,3)" fg:x="6" fg:w="1"/><text x="0.4538%" y="831.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (1 samples, 0.03%)</title><rect x="0.2038%" y="805" width="0.0340%" height="15" fill="rgb(230,59,30)" fg:x="6" fg:w="1"/><text x="0.4538%" y="815.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (1 samples, 0.03%)</title><rect x="0.2038%" y="789" width="0.0340%" height="15" fill="rgb(209,121,21)" fg:x="6" fg:w="1"/><text x="0.4538%" y="799.50"></text></g><g><title>async_executor::Runner::new (1 samples, 0.03%)</title><rect x="0.2038%" y="773" width="0.0340%" height="15" fill="rgb(220,109,13)" fg:x="6" fg:w="1"/><text x="0.4538%" y="783.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::bounded (1 samples, 0.03%)</title><rect x="0.2038%" y="757" width="0.0340%" height="15" fill="rgb(232,18,1)" fg:x="6" fg:w="1"/><text x="0.4538%" y="767.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="0.2038%" y="741" width="0.0340%" height="15" fill="rgb(215,41,42)" fg:x="6" fg:w="1"/><text x="0.4538%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.03%)</title><rect x="0.2038%" y="725" width="0.0340%" height="15" fill="rgb(224,123,36)" fg:x="6" fg:w="1"/><text x="0.4538%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="0.2038%" y="709" width="0.0340%" height="15" fill="rgb(240,125,3)" fg:x="6" fg:w="1"/><text x="0.4538%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="0.2038%" y="693" width="0.0340%" height="15" fill="rgb(205,98,50)" fg:x="6" fg:w="1"/><text x="0.4538%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.03%)</title><rect x="0.2038%" y="677" width="0.0340%" height="15" fill="rgb(205,185,37)" fg:x="6" fg:w="1"/><text x="0.4538%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.03%)</title><rect x="0.2038%" y="661" width="0.0340%" height="15" fill="rgb(238,207,15)" fg:x="6" fg:w="1"/><text x="0.4538%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.03%)</title><rect x="0.2038%" y="645" width="0.0340%" height="15" fill="rgb(213,199,42)" fg:x="6" fg:w="1"/><text x="0.4538%" y="655.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.03%)</title><rect x="0.2038%" y="629" width="0.0340%" height="15" fill="rgb(235,201,11)" fg:x="6" fg:w="1"/><text x="0.4538%" y="639.50"></text></g><g><title>malloc (1 samples, 0.03%)</title><rect x="0.2038%" y="613" width="0.0340%" height="15" fill="rgb(207,46,11)" fg:x="6" fg:w="1"/><text x="0.4538%" y="623.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="0.2038%" y="597" width="0.0340%" height="15" fill="rgb(241,35,35)" fg:x="6" fg:w="1"/><text x="0.4538%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.2038%" y="581" width="0.0340%" height="15" fill="rgb(243,32,47)" fg:x="6" fg:w="1"/><text x="0.4538%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.2038%" y="565" width="0.0340%" height="15" fill="rgb(247,202,23)" fg:x="6" fg:w="1"/><text x="0.4538%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.2038%" y="549" width="0.0340%" height="15" fill="rgb(219,102,11)" fg:x="6" fg:w="1"/><text x="0.4538%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.2038%" y="533" width="0.0340%" height="15" fill="rgb(243,110,44)" fg:x="6" fg:w="1"/><text x="0.4538%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.2038%" y="517" width="0.0340%" height="15" fill="rgb(222,74,54)" fg:x="6" fg:w="1"/><text x="0.4538%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.2038%" y="501" width="0.0340%" height="15" fill="rgb(216,99,12)" fg:x="6" fg:w="1"/><text x="0.4538%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.2038%" y="485" width="0.0340%" height="15" fill="rgb(226,22,26)" fg:x="6" fg:w="1"/><text x="0.4538%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.2038%" y="469" width="0.0340%" height="15" fill="rgb(217,163,10)" fg:x="6" fg:w="1"/><text x="0.4538%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.2038%" y="453" width="0.0340%" height="15" fill="rgb(213,25,53)" fg:x="6" fg:w="1"/><text x="0.4538%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.2038%" y="437" width="0.0340%" height="15" fill="rgb(252,105,26)" fg:x="6" fg:w="1"/><text x="0.4538%" y="447.50"></text></g><g><title>TaskPool_(15) (1 samples, 0.03%)</title><rect x="0.2378%" y="1205" width="0.0340%" height="15" fill="rgb(220,39,43)" fg:x="7" fg:w="1"/><text x="0.4878%" y="1215.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.2378%" y="1189" width="0.0340%" height="15" fill="rgb(229,68,48)" fg:x="7" fg:w="1"/><text x="0.4878%" y="1199.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.2378%" y="1173" width="0.0340%" height="15" fill="rgb(252,8,32)" fg:x="7" fg:w="1"/><text x="0.4878%" y="1183.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.2378%" y="1157" width="0.0340%" height="15" fill="rgb(223,20,43)" fg:x="7" fg:w="1"/><text x="0.4878%" y="1167.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.2378%" y="1141" width="0.0340%" height="15" fill="rgb(229,81,49)" fg:x="7" fg:w="1"/><text x="0.4878%" y="1151.50"></text></g><g><title>TaskPool_(16) (1 samples, 0.03%)</title><rect x="0.2717%" y="1205" width="0.0340%" height="15" fill="rgb(236,28,36)" fg:x="8" fg:w="1"/><text x="0.5217%" y="1215.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="0.2717%" y="1189" width="0.0340%" height="15" fill="rgb(249,185,26)" fg:x="8" fg:w="1"/><text x="0.5217%" y="1199.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="0.2717%" y="1173" width="0.0340%" height="15" fill="rgb(249,174,33)" fg:x="8" fg:w="1"/><text x="0.5217%" y="1183.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1 samples, 0.03%)</title><rect x="0.2717%" y="1157" width="0.0340%" height="15" fill="rgb(233,201,37)" fg:x="8" fg:w="1"/><text x="0.5217%" y="1167.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.03%)</title><rect x="0.2717%" y="1141" width="0.0340%" height="15" fill="rgb(221,78,26)" fg:x="8" fg:w="1"/><text x="0.5217%" y="1151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.03%)</title><rect x="0.2717%" y="1125" width="0.0340%" height="15" fill="rgb(250,127,30)" fg:x="8" fg:w="1"/><text x="0.5217%" y="1135.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.03%)</title><rect x="0.2717%" y="1109" width="0.0340%" height="15" fill="rgb(230,49,44)" fg:x="8" fg:w="1"/><text x="0.5217%" y="1119.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (1 samples, 0.03%)</title><rect x="0.2717%" y="1093" width="0.0340%" height="15" fill="rgb(229,67,23)" fg:x="8" fg:w="1"/><text x="0.5217%" y="1103.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.03%)</title><rect x="0.2717%" y="1077" width="0.0340%" height="15" fill="rgb(249,83,47)" fg:x="8" fg:w="1"/><text x="0.5217%" y="1087.50"></text></g><g><title>std::panicking::try (1 samples, 0.03%)</title><rect x="0.2717%" y="1061" width="0.0340%" height="15" fill="rgb(215,43,3)" fg:x="8" fg:w="1"/><text x="0.5217%" y="1071.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.03%)</title><rect x="0.2717%" y="1045" width="0.0340%" height="15" fill="rgb(238,154,13)" fg:x="8" fg:w="1"/><text x="0.5217%" y="1055.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.03%)</title><rect x="0.2717%" y="1029" width="0.0340%" height="15" fill="rgb(219,56,2)" fg:x="8" fg:w="1"/><text x="0.5217%" y="1039.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="0.2717%" y="1013" width="0.0340%" height="15" fill="rgb(233,0,4)" fg:x="8" fg:w="1"/><text x="0.5217%" y="1023.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.03%)</title><rect x="0.2717%" y="997" width="0.0340%" height="15" fill="rgb(235,30,7)" fg:x="8" fg:w="1"/><text x="0.5217%" y="1007.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="0.2717%" y="981" width="0.0340%" height="15" fill="rgb(250,79,13)" fg:x="8" fg:w="1"/><text x="0.5217%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.03%)</title><rect x="0.2717%" y="965" width="0.0340%" height="15" fill="rgb(211,146,34)" fg:x="8" fg:w="1"/><text x="0.5217%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.03%)</title><rect x="0.2717%" y="949" width="0.0340%" height="15" fill="rgb(228,22,38)" fg:x="8" fg:w="1"/><text x="0.5217%" y="959.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="0.2717%" y="933" width="0.0340%" height="15" fill="rgb(235,168,5)" fg:x="8" fg:w="1"/><text x="0.5217%" y="943.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.03%)</title><rect x="0.2717%" y="917" width="0.0340%" height="15" fill="rgb(221,155,16)" fg:x="8" fg:w="1"/><text x="0.5217%" y="927.50"></text></g><g><title>std::panicking::try (1 samples, 0.03%)</title><rect x="0.2717%" y="901" width="0.0340%" height="15" fill="rgb(215,215,53)" fg:x="8" fg:w="1"/><text x="0.5217%" y="911.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.03%)</title><rect x="0.2717%" y="885" width="0.0340%" height="15" fill="rgb(223,4,10)" fg:x="8" fg:w="1"/><text x="0.5217%" y="895.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="0.2717%" y="869" width="0.0340%" height="15" fill="rgb(234,103,6)" fg:x="8" fg:w="1"/><text x="0.5217%" y="879.50"></text></g><g><title>futures_lite::future::block_on (1 samples, 0.03%)</title><rect x="0.2717%" y="853" width="0.0340%" height="15" fill="rgb(227,97,0)" fg:x="8" fg:w="1"/><text x="0.5217%" y="863.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.03%)</title><rect x="0.2717%" y="837" width="0.0340%" height="15" fill="rgb(234,150,53)" fg:x="8" fg:w="1"/><text x="0.5217%" y="847.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.03%)</title><rect x="0.2717%" y="821" width="0.0340%" height="15" fill="rgb(228,201,54)" fg:x="8" fg:w="1"/><text x="0.5217%" y="831.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (1 samples, 0.03%)</title><rect x="0.2717%" y="805" width="0.0340%" height="15" fill="rgb(222,22,37)" fg:x="8" fg:w="1"/><text x="0.5217%" y="815.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (1 samples, 0.03%)</title><rect x="0.2717%" y="789" width="0.0340%" height="15" fill="rgb(237,53,32)" fg:x="8" fg:w="1"/><text x="0.5217%" y="799.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (1 samples, 0.03%)</title><rect x="0.2717%" y="773" width="0.0340%" height="15" fill="rgb(233,25,53)" fg:x="8" fg:w="1"/><text x="0.5217%" y="783.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="0.2717%" y="757" width="0.0340%" height="15" fill="rgb(210,40,34)" fg:x="8" fg:w="1"/><text x="0.5217%" y="767.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (1 samples, 0.03%)</title><rect x="0.2717%" y="741" width="0.0340%" height="15" fill="rgb(241,220,44)" fg:x="8" fg:w="1"/><text x="0.5217%" y="751.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (1 samples, 0.03%)</title><rect x="0.2717%" y="725" width="0.0340%" height="15" fill="rgb(235,28,35)" fg:x="8" fg:w="1"/><text x="0.5217%" y="735.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.03%)</title><rect x="0.2717%" y="709" width="0.0340%" height="15" fill="rgb(210,56,17)" fg:x="8" fg:w="1"/><text x="0.5217%" y="719.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="0.2717%" y="693" width="0.0340%" height="15" fill="rgb(224,130,29)" fg:x="8" fg:w="1"/><text x="0.5217%" y="703.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="0.2717%" y="677" width="0.0340%" height="15" fill="rgb(235,212,8)" fg:x="8" fg:w="1"/><text x="0.5217%" y="687.50"></text></g><g><title>async_executor::steal (1 samples, 0.03%)</title><rect x="0.2717%" y="661" width="0.0340%" height="15" fill="rgb(223,33,50)" fg:x="8" fg:w="1"/><text x="0.5217%" y="671.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::len (1 samples, 0.03%)</title><rect x="0.2717%" y="645" width="0.0340%" height="15" fill="rgb(219,149,13)" fg:x="8" fg:w="1"/><text x="0.5217%" y="655.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::len (1 samples, 0.03%)</title><rect x="0.2717%" y="629" width="0.0340%" height="15" fill="rgb(250,156,29)" fg:x="8" fg:w="1"/><text x="0.5217%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.03%)</title><rect x="0.2717%" y="613" width="0.0340%" height="15" fill="rgb(216,193,19)" fg:x="8" fg:w="1"/><text x="0.5217%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.03%)</title><rect x="0.2717%" y="597" width="0.0340%" height="15" fill="rgb(216,135,14)" fg:x="8" fg:w="1"/><text x="0.5217%" y="607.50"></text></g><g><title>TaskPool_(17) (1 samples, 0.03%)</title><rect x="0.3057%" y="1205" width="0.0340%" height="15" fill="rgb(241,47,5)" fg:x="9" fg:w="1"/><text x="0.5557%" y="1215.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="0.3057%" y="1189" width="0.0340%" height="15" fill="rgb(233,42,35)" fg:x="9" fg:w="1"/><text x="0.5557%" y="1199.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="0.3057%" y="1173" width="0.0340%" height="15" fill="rgb(231,13,6)" fg:x="9" fg:w="1"/><text x="0.5557%" y="1183.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1 samples, 0.03%)</title><rect x="0.3057%" y="1157" width="0.0340%" height="15" fill="rgb(207,181,40)" fg:x="9" fg:w="1"/><text x="0.5557%" y="1167.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.03%)</title><rect x="0.3057%" y="1141" width="0.0340%" height="15" fill="rgb(254,173,49)" fg:x="9" fg:w="1"/><text x="0.5557%" y="1151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.03%)</title><rect x="0.3057%" y="1125" width="0.0340%" height="15" fill="rgb(221,1,38)" fg:x="9" fg:w="1"/><text x="0.5557%" y="1135.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.03%)</title><rect x="0.3057%" y="1109" width="0.0340%" height="15" fill="rgb(206,124,46)" fg:x="9" fg:w="1"/><text x="0.5557%" y="1119.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (1 samples, 0.03%)</title><rect x="0.3057%" y="1093" width="0.0340%" height="15" fill="rgb(249,21,11)" fg:x="9" fg:w="1"/><text x="0.5557%" y="1103.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.03%)</title><rect x="0.3057%" y="1077" width="0.0340%" height="15" fill="rgb(222,201,40)" fg:x="9" fg:w="1"/><text x="0.5557%" y="1087.50"></text></g><g><title>std::panicking::try (1 samples, 0.03%)</title><rect x="0.3057%" y="1061" width="0.0340%" height="15" fill="rgb(235,61,29)" fg:x="9" fg:w="1"/><text x="0.5557%" y="1071.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.03%)</title><rect x="0.3057%" y="1045" width="0.0340%" height="15" fill="rgb(219,207,3)" fg:x="9" fg:w="1"/><text x="0.5557%" y="1055.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.03%)</title><rect x="0.3057%" y="1029" width="0.0340%" height="15" fill="rgb(222,56,46)" fg:x="9" fg:w="1"/><text x="0.5557%" y="1039.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="0.3057%" y="1013" width="0.0340%" height="15" fill="rgb(239,76,54)" fg:x="9" fg:w="1"/><text x="0.5557%" y="1023.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.03%)</title><rect x="0.3057%" y="997" width="0.0340%" height="15" fill="rgb(231,124,27)" fg:x="9" fg:w="1"/><text x="0.5557%" y="1007.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="0.3057%" y="981" width="0.0340%" height="15" fill="rgb(249,195,6)" fg:x="9" fg:w="1"/><text x="0.5557%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.03%)</title><rect x="0.3057%" y="965" width="0.0340%" height="15" fill="rgb(237,174,47)" fg:x="9" fg:w="1"/><text x="0.5557%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.03%)</title><rect x="0.3057%" y="949" width="0.0340%" height="15" fill="rgb(206,201,31)" fg:x="9" fg:w="1"/><text x="0.5557%" y="959.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="0.3057%" y="933" width="0.0340%" height="15" fill="rgb(231,57,52)" fg:x="9" fg:w="1"/><text x="0.5557%" y="943.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.03%)</title><rect x="0.3057%" y="917" width="0.0340%" height="15" fill="rgb(248,177,22)" fg:x="9" fg:w="1"/><text x="0.5557%" y="927.50"></text></g><g><title>std::panicking::try (1 samples, 0.03%)</title><rect x="0.3057%" y="901" width="0.0340%" height="15" fill="rgb(215,211,37)" fg:x="9" fg:w="1"/><text x="0.5557%" y="911.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.03%)</title><rect x="0.3057%" y="885" width="0.0340%" height="15" fill="rgb(241,128,51)" fg:x="9" fg:w="1"/><text x="0.5557%" y="895.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="0.3057%" y="869" width="0.0340%" height="15" fill="rgb(227,165,31)" fg:x="9" fg:w="1"/><text x="0.5557%" y="879.50"></text></g><g><title>futures_lite::future::block_on (1 samples, 0.03%)</title><rect x="0.3057%" y="853" width="0.0340%" height="15" fill="rgb(228,167,24)" fg:x="9" fg:w="1"/><text x="0.5557%" y="863.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.03%)</title><rect x="0.3057%" y="837" width="0.0340%" height="15" fill="rgb(228,143,12)" fg:x="9" fg:w="1"/><text x="0.5557%" y="847.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.03%)</title><rect x="0.3057%" y="821" width="0.0340%" height="15" fill="rgb(249,149,8)" fg:x="9" fg:w="1"/><text x="0.5557%" y="831.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (1 samples, 0.03%)</title><rect x="0.3057%" y="805" width="0.0340%" height="15" fill="rgb(243,35,44)" fg:x="9" fg:w="1"/><text x="0.5557%" y="815.50"></text></g><g><title>parking::Inner::park (1 samples, 0.03%)</title><rect x="0.3057%" y="789" width="0.0340%" height="15" fill="rgb(246,89,9)" fg:x="9" fg:w="1"/><text x="0.5557%" y="799.50"></text></g><g><title>std::sync::condvar::Condvar::wait (1 samples, 0.03%)</title><rect x="0.3057%" y="773" width="0.0340%" height="15" fill="rgb(233,213,13)" fg:x="9" fg:w="1"/><text x="0.5557%" y="783.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait (1 samples, 0.03%)</title><rect x="0.3057%" y="757" width="0.0340%" height="15" fill="rgb(233,141,41)" fg:x="9" fg:w="1"/><text x="0.5557%" y="767.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait_optional_timeout (1 samples, 0.03%)</title><rect x="0.3057%" y="741" width="0.0340%" height="15" fill="rgb(239,167,4)" fg:x="9" fg:w="1"/><text x="0.5557%" y="751.50"></text></g><g><title>std::sys::unix::futex::futex_wait (1 samples, 0.03%)</title><rect x="0.3057%" y="725" width="0.0340%" height="15" fill="rgb(209,217,16)" fg:x="9" fg:w="1"/><text x="0.5557%" y="735.50"></text></g><g><title>syscall (1 samples, 0.03%)</title><rect x="0.3057%" y="709" width="0.0340%" height="15" fill="rgb(219,88,35)" fg:x="9" fg:w="1"/><text x="0.5557%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.3057%" y="693" width="0.0340%" height="15" fill="rgb(220,193,23)" fg:x="9" fg:w="1"/><text x="0.5557%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.3057%" y="677" width="0.0340%" height="15" fill="rgb(230,90,52)" fg:x="9" fg:w="1"/><text x="0.5557%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.3057%" y="661" width="0.0340%" height="15" fill="rgb(252,106,19)" fg:x="9" fg:w="1"/><text x="0.5557%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.3057%" y="645" width="0.0340%" height="15" fill="rgb(206,74,20)" fg:x="9" fg:w="1"/><text x="0.5557%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.3057%" y="629" width="0.0340%" height="15" fill="rgb(230,138,44)" fg:x="9" fg:w="1"/><text x="0.5557%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.3057%" y="613" width="0.0340%" height="15" fill="rgb(235,182,43)" fg:x="9" fg:w="1"/><text x="0.5557%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.3057%" y="597" width="0.0340%" height="15" fill="rgb(242,16,51)" fg:x="9" fg:w="1"/><text x="0.5557%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.3057%" y="581" width="0.0340%" height="15" fill="rgb(248,9,4)" fg:x="9" fg:w="1"/><text x="0.5557%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.3057%" y="565" width="0.0340%" height="15" fill="rgb(210,31,22)" fg:x="9" fg:w="1"/><text x="0.5557%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.3057%" y="549" width="0.0340%" height="15" fill="rgb(239,54,39)" fg:x="9" fg:w="1"/><text x="0.5557%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.3057%" y="533" width="0.0340%" height="15" fill="rgb(230,99,41)" fg:x="9" fg:w="1"/><text x="0.5557%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.3057%" y="517" width="0.0340%" height="15" fill="rgb(253,106,12)" fg:x="9" fg:w="1"/><text x="0.5557%" y="527.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.03%)</title><rect x="0.3397%" y="1077" width="0.0340%" height="15" fill="rgb(213,46,41)" fg:x="10" fg:w="1"/><text x="0.5897%" y="1087.50"></text></g><g><title>std::panicking::try (1 samples, 0.03%)</title><rect x="0.3397%" y="1061" width="0.0340%" height="15" fill="rgb(215,133,35)" fg:x="10" fg:w="1"/><text x="0.5897%" y="1071.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.03%)</title><rect x="0.3397%" y="1045" width="0.0340%" height="15" fill="rgb(213,28,5)" fg:x="10" fg:w="1"/><text x="0.5897%" y="1055.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.03%)</title><rect x="0.3397%" y="1029" width="0.0340%" height="15" fill="rgb(215,77,49)" fg:x="10" fg:w="1"/><text x="0.5897%" y="1039.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="0.3397%" y="1013" width="0.0340%" height="15" fill="rgb(248,100,22)" fg:x="10" fg:w="1"/><text x="0.5897%" y="1023.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.03%)</title><rect x="0.3397%" y="997" width="0.0340%" height="15" fill="rgb(208,67,9)" fg:x="10" fg:w="1"/><text x="0.5897%" y="1007.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="0.3397%" y="981" width="0.0340%" height="15" fill="rgb(219,133,21)" fg:x="10" fg:w="1"/><text x="0.5897%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.03%)</title><rect x="0.3397%" y="965" width="0.0340%" height="15" fill="rgb(246,46,29)" fg:x="10" fg:w="1"/><text x="0.5897%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.03%)</title><rect x="0.3397%" y="949" width="0.0340%" height="15" fill="rgb(246,185,52)" fg:x="10" fg:w="1"/><text x="0.5897%" y="959.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="0.3397%" y="933" width="0.0340%" height="15" fill="rgb(252,136,11)" fg:x="10" fg:w="1"/><text x="0.5897%" y="943.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.03%)</title><rect x="0.3397%" y="917" width="0.0340%" height="15" fill="rgb(219,138,53)" fg:x="10" fg:w="1"/><text x="0.5897%" y="927.50"></text></g><g><title>std::panicking::try (1 samples, 0.03%)</title><rect x="0.3397%" y="901" width="0.0340%" height="15" fill="rgb(211,51,23)" fg:x="10" fg:w="1"/><text x="0.5897%" y="911.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.03%)</title><rect x="0.3397%" y="885" width="0.0340%" height="15" fill="rgb(247,221,28)" fg:x="10" fg:w="1"/><text x="0.5897%" y="895.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="0.3397%" y="869" width="0.0340%" height="15" fill="rgb(251,222,45)" fg:x="10" fg:w="1"/><text x="0.5897%" y="879.50"></text></g><g><title>futures_lite::future::block_on (1 samples, 0.03%)</title><rect x="0.3397%" y="853" width="0.0340%" height="15" fill="rgb(217,162,53)" fg:x="10" fg:w="1"/><text x="0.5897%" y="863.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.03%)</title><rect x="0.3397%" y="837" width="0.0340%" height="15" fill="rgb(229,93,14)" fg:x="10" fg:w="1"/><text x="0.5897%" y="847.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.03%)</title><rect x="0.3397%" y="821" width="0.0340%" height="15" fill="rgb(209,67,49)" fg:x="10" fg:w="1"/><text x="0.5897%" y="831.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (1 samples, 0.03%)</title><rect x="0.3397%" y="805" width="0.0340%" height="15" fill="rgb(213,87,29)" fg:x="10" fg:w="1"/><text x="0.5897%" y="815.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (1 samples, 0.03%)</title><rect x="0.3397%" y="789" width="0.0340%" height="15" fill="rgb(205,151,52)" fg:x="10" fg:w="1"/><text x="0.5897%" y="799.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (1 samples, 0.03%)</title><rect x="0.3397%" y="773" width="0.0340%" height="15" fill="rgb(253,215,39)" fg:x="10" fg:w="1"/><text x="0.5897%" y="783.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (1 samples, 0.03%)</title><rect x="0.3397%" y="757" width="0.0340%" height="15" fill="rgb(221,220,41)" fg:x="10" fg:w="1"/><text x="0.5897%" y="767.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.03%)</title><rect x="0.3397%" y="741" width="0.0340%" height="15" fill="rgb(218,133,21)" fg:x="10" fg:w="1"/><text x="0.5897%" y="751.50"></text></g><g><title>async_channel::Recv&lt;T&gt;::run_with_strategy (1 samples, 0.03%)</title><rect x="0.3397%" y="725" width="0.0340%" height="15" fill="rgb(221,193,43)" fg:x="10" fg:w="1"/><text x="0.5897%" y="735.50"></text></g><g><title>event_listener::Event::listen (1 samples, 0.03%)</title><rect x="0.3397%" y="709" width="0.0340%" height="15" fill="rgb(240,128,52)" fg:x="10" fg:w="1"/><text x="0.5897%" y="719.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="0.3397%" y="693" width="0.0340%" height="15" fill="rgb(253,114,12)" fg:x="10" fg:w="1"/><text x="0.5897%" y="703.50"></text></g><g><title>TaskPool_(18) (2 samples, 0.07%)</title><rect x="0.3397%" y="1205" width="0.0679%" height="15" fill="rgb(215,223,47)" fg:x="10" fg:w="2"/><text x="0.5897%" y="1215.50"></text></g><g><title>[libc.so.6] (2 samples, 0.07%)</title><rect x="0.3397%" y="1189" width="0.0679%" height="15" fill="rgb(248,225,23)" fg:x="10" fg:w="2"/><text x="0.5897%" y="1199.50"></text></g><g><title>[libc.so.6] (2 samples, 0.07%)</title><rect x="0.3397%" y="1173" width="0.0679%" height="15" fill="rgb(250,108,0)" fg:x="10" fg:w="2"/><text x="0.5897%" y="1183.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (2 samples, 0.07%)</title><rect x="0.3397%" y="1157" width="0.0679%" height="15" fill="rgb(228,208,7)" fg:x="10" fg:w="2"/><text x="0.5897%" y="1167.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (2 samples, 0.07%)</title><rect x="0.3397%" y="1141" width="0.0679%" height="15" fill="rgb(244,45,10)" fg:x="10" fg:w="2"/><text x="0.5897%" y="1151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (2 samples, 0.07%)</title><rect x="0.3397%" y="1125" width="0.0679%" height="15" fill="rgb(207,125,25)" fg:x="10" fg:w="2"/><text x="0.5897%" y="1135.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (2 samples, 0.07%)</title><rect x="0.3397%" y="1109" width="0.0679%" height="15" fill="rgb(210,195,18)" fg:x="10" fg:w="2"/><text x="0.5897%" y="1119.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (2 samples, 0.07%)</title><rect x="0.3397%" y="1093" width="0.0679%" height="15" fill="rgb(249,80,12)" fg:x="10" fg:w="2"/><text x="0.5897%" y="1103.50"></text></g><g><title>std::sys::unix::thread::Thread::set_name (1 samples, 0.03%)</title><rect x="0.3736%" y="1077" width="0.0340%" height="15" fill="rgb(221,65,9)" fg:x="11" fg:w="1"/><text x="0.6236%" y="1087.50"></text></g><g><title>pthread_setname_np (1 samples, 0.03%)</title><rect x="0.3736%" y="1061" width="0.0340%" height="15" fill="rgb(235,49,36)" fg:x="11" fg:w="1"/><text x="0.6236%" y="1071.50"></text></g><g><title>prctl (1 samples, 0.03%)</title><rect x="0.3736%" y="1045" width="0.0340%" height="15" fill="rgb(225,32,20)" fg:x="11" fg:w="1"/><text x="0.6236%" y="1055.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.3736%" y="1029" width="0.0340%" height="15" fill="rgb(215,141,46)" fg:x="11" fg:w="1"/><text x="0.6236%" y="1039.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.3736%" y="1013" width="0.0340%" height="15" fill="rgb(250,160,47)" fg:x="11" fg:w="1"/><text x="0.6236%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.3736%" y="997" width="0.0340%" height="15" fill="rgb(216,222,40)" fg:x="11" fg:w="1"/><text x="0.6236%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.3736%" y="981" width="0.0340%" height="15" fill="rgb(234,217,39)" fg:x="11" fg:w="1"/><text x="0.6236%" y="991.50"></text></g><g><title>TaskPool_(19) (1 samples, 0.03%)</title><rect x="0.4076%" y="1205" width="0.0340%" height="15" fill="rgb(207,178,40)" fg:x="12" fg:w="1"/><text x="0.6576%" y="1215.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="0.4076%" y="1189" width="0.0340%" height="15" fill="rgb(221,136,13)" fg:x="12" fg:w="1"/><text x="0.6576%" y="1199.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="0.4076%" y="1173" width="0.0340%" height="15" fill="rgb(249,199,10)" fg:x="12" fg:w="1"/><text x="0.6576%" y="1183.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1 samples, 0.03%)</title><rect x="0.4076%" y="1157" width="0.0340%" height="15" fill="rgb(249,222,13)" fg:x="12" fg:w="1"/><text x="0.6576%" y="1167.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.03%)</title><rect x="0.4076%" y="1141" width="0.0340%" height="15" fill="rgb(244,185,38)" fg:x="12" fg:w="1"/><text x="0.6576%" y="1151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.03%)</title><rect x="0.4076%" y="1125" width="0.0340%" height="15" fill="rgb(236,202,9)" fg:x="12" fg:w="1"/><text x="0.6576%" y="1135.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.03%)</title><rect x="0.4076%" y="1109" width="0.0340%" height="15" fill="rgb(250,229,37)" fg:x="12" fg:w="1"/><text x="0.6576%" y="1119.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (1 samples, 0.03%)</title><rect x="0.4076%" y="1093" width="0.0340%" height="15" fill="rgb(206,174,23)" fg:x="12" fg:w="1"/><text x="0.6576%" y="1103.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.03%)</title><rect x="0.4076%" y="1077" width="0.0340%" height="15" fill="rgb(211,33,43)" fg:x="12" fg:w="1"/><text x="0.6576%" y="1087.50"></text></g><g><title>std::panicking::try (1 samples, 0.03%)</title><rect x="0.4076%" y="1061" width="0.0340%" height="15" fill="rgb(245,58,50)" fg:x="12" fg:w="1"/><text x="0.6576%" y="1071.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.03%)</title><rect x="0.4076%" y="1045" width="0.0340%" height="15" fill="rgb(244,68,36)" fg:x="12" fg:w="1"/><text x="0.6576%" y="1055.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.03%)</title><rect x="0.4076%" y="1029" width="0.0340%" height="15" fill="rgb(232,229,15)" fg:x="12" fg:w="1"/><text x="0.6576%" y="1039.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="0.4076%" y="1013" width="0.0340%" height="15" fill="rgb(254,30,23)" fg:x="12" fg:w="1"/><text x="0.6576%" y="1023.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.03%)</title><rect x="0.4076%" y="997" width="0.0340%" height="15" fill="rgb(235,160,14)" fg:x="12" fg:w="1"/><text x="0.6576%" y="1007.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="0.4076%" y="981" width="0.0340%" height="15" fill="rgb(212,155,44)" fg:x="12" fg:w="1"/><text x="0.6576%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.03%)</title><rect x="0.4076%" y="965" width="0.0340%" height="15" fill="rgb(226,2,50)" fg:x="12" fg:w="1"/><text x="0.6576%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.03%)</title><rect x="0.4076%" y="949" width="0.0340%" height="15" fill="rgb(234,177,6)" fg:x="12" fg:w="1"/><text x="0.6576%" y="959.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="0.4076%" y="933" width="0.0340%" height="15" fill="rgb(217,24,9)" fg:x="12" fg:w="1"/><text x="0.6576%" y="943.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.03%)</title><rect x="0.4076%" y="917" width="0.0340%" height="15" fill="rgb(220,13,46)" fg:x="12" fg:w="1"/><text x="0.6576%" y="927.50"></text></g><g><title>std::panicking::try (1 samples, 0.03%)</title><rect x="0.4076%" y="901" width="0.0340%" height="15" fill="rgb(239,221,27)" fg:x="12" fg:w="1"/><text x="0.6576%" y="911.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.03%)</title><rect x="0.4076%" y="885" width="0.0340%" height="15" fill="rgb(222,198,25)" fg:x="12" fg:w="1"/><text x="0.6576%" y="895.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="0.4076%" y="869" width="0.0340%" height="15" fill="rgb(211,99,13)" fg:x="12" fg:w="1"/><text x="0.6576%" y="879.50"></text></g><g><title>futures_lite::future::block_on (1 samples, 0.03%)</title><rect x="0.4076%" y="853" width="0.0340%" height="15" fill="rgb(232,111,31)" fg:x="12" fg:w="1"/><text x="0.6576%" y="863.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.03%)</title><rect x="0.4076%" y="837" width="0.0340%" height="15" fill="rgb(245,82,37)" fg:x="12" fg:w="1"/><text x="0.6576%" y="847.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.03%)</title><rect x="0.4076%" y="821" width="0.0340%" height="15" fill="rgb(227,149,46)" fg:x="12" fg:w="1"/><text x="0.6576%" y="831.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (1 samples, 0.03%)</title><rect x="0.4076%" y="805" width="0.0340%" height="15" fill="rgb(218,36,50)" fg:x="12" fg:w="1"/><text x="0.6576%" y="815.50"></text></g><g><title>parking::Inner::park (1 samples, 0.03%)</title><rect x="0.4076%" y="789" width="0.0340%" height="15" fill="rgb(226,80,48)" fg:x="12" fg:w="1"/><text x="0.6576%" y="799.50"></text></g><g><title>std::sync::condvar::Condvar::wait (1 samples, 0.03%)</title><rect x="0.4076%" y="773" width="0.0340%" height="15" fill="rgb(238,224,15)" fg:x="12" fg:w="1"/><text x="0.6576%" y="783.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait (1 samples, 0.03%)</title><rect x="0.4076%" y="757" width="0.0340%" height="15" fill="rgb(241,136,10)" fg:x="12" fg:w="1"/><text x="0.6576%" y="767.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait_optional_timeout (1 samples, 0.03%)</title><rect x="0.4076%" y="741" width="0.0340%" height="15" fill="rgb(208,32,45)" fg:x="12" fg:w="1"/><text x="0.6576%" y="751.50"></text></g><g><title>std::sys::unix::futex::futex_wait (1 samples, 0.03%)</title><rect x="0.4076%" y="725" width="0.0340%" height="15" fill="rgb(207,135,9)" fg:x="12" fg:w="1"/><text x="0.6576%" y="735.50"></text></g><g><title>syscall (1 samples, 0.03%)</title><rect x="0.4076%" y="709" width="0.0340%" height="15" fill="rgb(206,86,44)" fg:x="12" fg:w="1"/><text x="0.6576%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.4076%" y="693" width="0.0340%" height="15" fill="rgb(245,177,15)" fg:x="12" fg:w="1"/><text x="0.6576%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.4076%" y="677" width="0.0340%" height="15" fill="rgb(206,64,50)" fg:x="12" fg:w="1"/><text x="0.6576%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.4076%" y="661" width="0.0340%" height="15" fill="rgb(234,36,40)" fg:x="12" fg:w="1"/><text x="0.6576%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.4076%" y="645" width="0.0340%" height="15" fill="rgb(213,64,8)" fg:x="12" fg:w="1"/><text x="0.6576%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.4076%" y="629" width="0.0340%" height="15" fill="rgb(210,75,36)" fg:x="12" fg:w="1"/><text x="0.6576%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.4076%" y="613" width="0.0340%" height="15" fill="rgb(229,88,21)" fg:x="12" fg:w="1"/><text x="0.6576%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.4076%" y="597" width="0.0340%" height="15" fill="rgb(252,204,47)" fg:x="12" fg:w="1"/><text x="0.6576%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.4076%" y="581" width="0.0340%" height="15" fill="rgb(208,77,27)" fg:x="12" fg:w="1"/><text x="0.6576%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.4076%" y="565" width="0.0340%" height="15" fill="rgb(221,76,26)" fg:x="12" fg:w="1"/><text x="0.6576%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.4076%" y="549" width="0.0340%" height="15" fill="rgb(225,139,18)" fg:x="12" fg:w="1"/><text x="0.6576%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.4076%" y="533" width="0.0340%" height="15" fill="rgb(230,137,11)" fg:x="12" fg:w="1"/><text x="0.6576%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.4076%" y="517" width="0.0340%" height="15" fill="rgb(212,28,1)" fg:x="12" fg:w="1"/><text x="0.6576%" y="527.50"></text></g><g><title>TaskPool_(2) (1 samples, 0.03%)</title><rect x="0.4416%" y="1205" width="0.0340%" height="15" fill="rgb(248,164,17)" fg:x="13" fg:w="1"/><text x="0.6916%" y="1215.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="0.4416%" y="1189" width="0.0340%" height="15" fill="rgb(222,171,42)" fg:x="13" fg:w="1"/><text x="0.6916%" y="1199.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="0.4416%" y="1173" width="0.0340%" height="15" fill="rgb(243,84,45)" fg:x="13" fg:w="1"/><text x="0.6916%" y="1183.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1 samples, 0.03%)</title><rect x="0.4416%" y="1157" width="0.0340%" height="15" fill="rgb(252,49,23)" fg:x="13" fg:w="1"/><text x="0.6916%" y="1167.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.03%)</title><rect x="0.4416%" y="1141" width="0.0340%" height="15" fill="rgb(215,19,7)" fg:x="13" fg:w="1"/><text x="0.6916%" y="1151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.03%)</title><rect x="0.4416%" y="1125" width="0.0340%" height="15" fill="rgb(238,81,41)" fg:x="13" fg:w="1"/><text x="0.6916%" y="1135.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.03%)</title><rect x="0.4416%" y="1109" width="0.0340%" height="15" fill="rgb(210,199,37)" fg:x="13" fg:w="1"/><text x="0.6916%" y="1119.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (1 samples, 0.03%)</title><rect x="0.4416%" y="1093" width="0.0340%" height="15" fill="rgb(244,192,49)" fg:x="13" fg:w="1"/><text x="0.6916%" y="1103.50"></text></g><g><title>std::sys::unix::thread::guard::current (1 samples, 0.03%)</title><rect x="0.4416%" y="1077" width="0.0340%" height="15" fill="rgb(226,211,11)" fg:x="13" fg:w="1"/><text x="0.6916%" y="1087.50"></text></g><g><title>pthread_getattr_np (1 samples, 0.03%)</title><rect x="0.4416%" y="1061" width="0.0340%" height="15" fill="rgb(236,162,54)" fg:x="13" fg:w="1"/><text x="0.6916%" y="1071.50"></text></g><g><title>pthread_getaffinity_np (1 samples, 0.03%)</title><rect x="0.4416%" y="1045" width="0.0340%" height="15" fill="rgb(220,229,9)" fg:x="13" fg:w="1"/><text x="0.6916%" y="1055.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.4416%" y="1029" width="0.0340%" height="15" fill="rgb(250,87,22)" fg:x="13" fg:w="1"/><text x="0.6916%" y="1039.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.4416%" y="1013" width="0.0340%" height="15" fill="rgb(239,43,17)" fg:x="13" fg:w="1"/><text x="0.6916%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.4416%" y="997" width="0.0340%" height="15" fill="rgb(231,177,25)" fg:x="13" fg:w="1"/><text x="0.6916%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.4416%" y="981" width="0.0340%" height="15" fill="rgb(219,179,1)" fg:x="13" fg:w="1"/><text x="0.6916%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.4416%" y="965" width="0.0340%" height="15" fill="rgb(238,219,53)" fg:x="13" fg:w="1"/><text x="0.6916%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.4416%" y="949" width="0.0340%" height="15" fill="rgb(232,167,36)" fg:x="13" fg:w="1"/><text x="0.6916%" y="959.50"></text></g><g><title>TaskPool_(20) (1 samples, 0.03%)</title><rect x="0.4755%" y="1205" width="0.0340%" height="15" fill="rgb(244,19,51)" fg:x="14" fg:w="1"/><text x="0.7255%" y="1215.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="0.4755%" y="1189" width="0.0340%" height="15" fill="rgb(224,6,22)" fg:x="14" fg:w="1"/><text x="0.7255%" y="1199.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="0.4755%" y="1173" width="0.0340%" height="15" fill="rgb(224,145,5)" fg:x="14" fg:w="1"/><text x="0.7255%" y="1183.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1 samples, 0.03%)</title><rect x="0.4755%" y="1157" width="0.0340%" height="15" fill="rgb(234,130,49)" fg:x="14" fg:w="1"/><text x="0.7255%" y="1167.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.03%)</title><rect x="0.4755%" y="1141" width="0.0340%" height="15" fill="rgb(254,6,2)" fg:x="14" fg:w="1"/><text x="0.7255%" y="1151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.03%)</title><rect x="0.4755%" y="1125" width="0.0340%" height="15" fill="rgb(208,96,46)" fg:x="14" fg:w="1"/><text x="0.7255%" y="1135.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.03%)</title><rect x="0.4755%" y="1109" width="0.0340%" height="15" fill="rgb(239,3,39)" fg:x="14" fg:w="1"/><text x="0.7255%" y="1119.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (1 samples, 0.03%)</title><rect x="0.4755%" y="1093" width="0.0340%" height="15" fill="rgb(233,210,1)" fg:x="14" fg:w="1"/><text x="0.7255%" y="1103.50"></text></g><g><title>std::sys::unix::thread::Thread::set_name (1 samples, 0.03%)</title><rect x="0.4755%" y="1077" width="0.0340%" height="15" fill="rgb(244,137,37)" fg:x="14" fg:w="1"/><text x="0.7255%" y="1087.50"></text></g><g><title>pthread_setname_np (1 samples, 0.03%)</title><rect x="0.4755%" y="1061" width="0.0340%" height="15" fill="rgb(240,136,2)" fg:x="14" fg:w="1"/><text x="0.7255%" y="1071.50"></text></g><g><title>prctl (1 samples, 0.03%)</title><rect x="0.4755%" y="1045" width="0.0340%" height="15" fill="rgb(239,18,37)" fg:x="14" fg:w="1"/><text x="0.7255%" y="1055.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.4755%" y="1029" width="0.0340%" height="15" fill="rgb(218,185,22)" fg:x="14" fg:w="1"/><text x="0.7255%" y="1039.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.4755%" y="1013" width="0.0340%" height="15" fill="rgb(225,218,4)" fg:x="14" fg:w="1"/><text x="0.7255%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.4755%" y="997" width="0.0340%" height="15" fill="rgb(230,182,32)" fg:x="14" fg:w="1"/><text x="0.7255%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.4755%" y="981" width="0.0340%" height="15" fill="rgb(242,56,43)" fg:x="14" fg:w="1"/><text x="0.7255%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.4755%" y="965" width="0.0340%" height="15" fill="rgb(233,99,24)" fg:x="14" fg:w="1"/><text x="0.7255%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.4755%" y="949" width="0.0340%" height="15" fill="rgb(234,209,42)" fg:x="14" fg:w="1"/><text x="0.7255%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.4755%" y="933" width="0.0340%" height="15" fill="rgb(227,7,12)" fg:x="14" fg:w="1"/><text x="0.7255%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.4755%" y="917" width="0.0340%" height="15" fill="rgb(245,203,43)" fg:x="14" fg:w="1"/><text x="0.7255%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.4755%" y="901" width="0.0340%" height="15" fill="rgb(238,205,33)" fg:x="14" fg:w="1"/><text x="0.7255%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.4755%" y="885" width="0.0340%" height="15" fill="rgb(231,56,7)" fg:x="14" fg:w="1"/><text x="0.7255%" y="895.50"></text></g><g><title>TaskPool_(21) (1 samples, 0.03%)</title><rect x="0.5095%" y="1205" width="0.0340%" height="15" fill="rgb(244,186,29)" fg:x="15" fg:w="1"/><text x="0.7595%" y="1215.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="0.5095%" y="1189" width="0.0340%" height="15" fill="rgb(234,111,31)" fg:x="15" fg:w="1"/><text x="0.7595%" y="1199.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="0.5095%" y="1173" width="0.0340%" height="15" fill="rgb(241,149,10)" fg:x="15" fg:w="1"/><text x="0.7595%" y="1183.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1 samples, 0.03%)</title><rect x="0.5095%" y="1157" width="0.0340%" height="15" fill="rgb(249,206,44)" fg:x="15" fg:w="1"/><text x="0.7595%" y="1167.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.03%)</title><rect x="0.5095%" y="1141" width="0.0340%" height="15" fill="rgb(251,153,30)" fg:x="15" fg:w="1"/><text x="0.7595%" y="1151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.03%)</title><rect x="0.5095%" y="1125" width="0.0340%" height="15" fill="rgb(239,152,38)" fg:x="15" fg:w="1"/><text x="0.7595%" y="1135.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.03%)</title><rect x="0.5095%" y="1109" width="0.0340%" height="15" fill="rgb(249,139,47)" fg:x="15" fg:w="1"/><text x="0.7595%" y="1119.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (1 samples, 0.03%)</title><rect x="0.5095%" y="1093" width="0.0340%" height="15" fill="rgb(244,64,35)" fg:x="15" fg:w="1"/><text x="0.7595%" y="1103.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.03%)</title><rect x="0.5095%" y="1077" width="0.0340%" height="15" fill="rgb(216,46,15)" fg:x="15" fg:w="1"/><text x="0.7595%" y="1087.50"></text></g><g><title>std::panicking::try (1 samples, 0.03%)</title><rect x="0.5095%" y="1061" width="0.0340%" height="15" fill="rgb(250,74,19)" fg:x="15" fg:w="1"/><text x="0.7595%" y="1071.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.03%)</title><rect x="0.5095%" y="1045" width="0.0340%" height="15" fill="rgb(249,42,33)" fg:x="15" fg:w="1"/><text x="0.7595%" y="1055.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.03%)</title><rect x="0.5095%" y="1029" width="0.0340%" height="15" fill="rgb(242,149,17)" fg:x="15" fg:w="1"/><text x="0.7595%" y="1039.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="0.5095%" y="1013" width="0.0340%" height="15" fill="rgb(244,29,21)" fg:x="15" fg:w="1"/><text x="0.7595%" y="1023.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.03%)</title><rect x="0.5095%" y="997" width="0.0340%" height="15" fill="rgb(220,130,37)" fg:x="15" fg:w="1"/><text x="0.7595%" y="1007.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="0.5095%" y="981" width="0.0340%" height="15" fill="rgb(211,67,2)" fg:x="15" fg:w="1"/><text x="0.7595%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.03%)</title><rect x="0.5095%" y="965" width="0.0340%" height="15" fill="rgb(235,68,52)" fg:x="15" fg:w="1"/><text x="0.7595%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.03%)</title><rect x="0.5095%" y="949" width="0.0340%" height="15" fill="rgb(246,142,3)" fg:x="15" fg:w="1"/><text x="0.7595%" y="959.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="0.5095%" y="933" width="0.0340%" height="15" fill="rgb(241,25,7)" fg:x="15" fg:w="1"/><text x="0.7595%" y="943.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.03%)</title><rect x="0.5095%" y="917" width="0.0340%" height="15" fill="rgb(242,119,39)" fg:x="15" fg:w="1"/><text x="0.7595%" y="927.50"></text></g><g><title>std::panicking::try (1 samples, 0.03%)</title><rect x="0.5095%" y="901" width="0.0340%" height="15" fill="rgb(241,98,45)" fg:x="15" fg:w="1"/><text x="0.7595%" y="911.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.03%)</title><rect x="0.5095%" y="885" width="0.0340%" height="15" fill="rgb(254,28,30)" fg:x="15" fg:w="1"/><text x="0.7595%" y="895.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="0.5095%" y="869" width="0.0340%" height="15" fill="rgb(241,142,54)" fg:x="15" fg:w="1"/><text x="0.7595%" y="879.50"></text></g><g><title>futures_lite::future::block_on (1 samples, 0.03%)</title><rect x="0.5095%" y="853" width="0.0340%" height="15" fill="rgb(222,85,15)" fg:x="15" fg:w="1"/><text x="0.7595%" y="863.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.03%)</title><rect x="0.5095%" y="837" width="0.0340%" height="15" fill="rgb(210,85,47)" fg:x="15" fg:w="1"/><text x="0.7595%" y="847.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.03%)</title><rect x="0.5095%" y="821" width="0.0340%" height="15" fill="rgb(224,206,25)" fg:x="15" fg:w="1"/><text x="0.7595%" y="831.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (1 samples, 0.03%)</title><rect x="0.5095%" y="805" width="0.0340%" height="15" fill="rgb(243,201,19)" fg:x="15" fg:w="1"/><text x="0.7595%" y="815.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (1 samples, 0.03%)</title><rect x="0.5095%" y="789" width="0.0340%" height="15" fill="rgb(236,59,4)" fg:x="15" fg:w="1"/><text x="0.7595%" y="799.50"></text></g><g><title>async_executor::Runner::new (1 samples, 0.03%)</title><rect x="0.5095%" y="773" width="0.0340%" height="15" fill="rgb(254,179,45)" fg:x="15" fg:w="1"/><text x="0.7595%" y="783.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="0.5095%" y="757" width="0.0340%" height="15" fill="rgb(226,14,10)" fg:x="15" fg:w="1"/><text x="0.7595%" y="767.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="0.5095%" y="741" width="0.0340%" height="15" fill="rgb(244,27,41)" fg:x="15" fg:w="1"/><text x="0.7595%" y="751.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.03%)</title><rect x="0.5095%" y="725" width="0.0340%" height="15" fill="rgb(235,35,32)" fg:x="15" fg:w="1"/><text x="0.7595%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.03%)</title><rect x="0.5095%" y="709" width="0.0340%" height="15" fill="rgb(218,68,31)" fg:x="15" fg:w="1"/><text x="0.7595%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.03%)</title><rect x="0.5095%" y="693" width="0.0340%" height="15" fill="rgb(207,120,37)" fg:x="15" fg:w="1"/><text x="0.7595%" y="703.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.03%)</title><rect x="0.5095%" y="677" width="0.0340%" height="15" fill="rgb(227,98,0)" fg:x="15" fg:w="1"/><text x="0.7595%" y="687.50"></text></g><g><title>malloc (1 samples, 0.03%)</title><rect x="0.5095%" y="661" width="0.0340%" height="15" fill="rgb(207,7,3)" fg:x="15" fg:w="1"/><text x="0.7595%" y="671.50"></text></g><g><title>TaskPool_(22) (1 samples, 0.03%)</title><rect x="0.5435%" y="1205" width="0.0340%" height="15" fill="rgb(206,98,19)" fg:x="16" fg:w="1"/><text x="0.7935%" y="1215.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="0.5435%" y="1189" width="0.0340%" height="15" fill="rgb(217,5,26)" fg:x="16" fg:w="1"/><text x="0.7935%" y="1199.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="0.5435%" y="1173" width="0.0340%" height="15" fill="rgb(235,190,38)" fg:x="16" fg:w="1"/><text x="0.7935%" y="1183.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1 samples, 0.03%)</title><rect x="0.5435%" y="1157" width="0.0340%" height="15" fill="rgb(247,86,24)" fg:x="16" fg:w="1"/><text x="0.7935%" y="1167.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.03%)</title><rect x="0.5435%" y="1141" width="0.0340%" height="15" fill="rgb(205,101,16)" fg:x="16" fg:w="1"/><text x="0.7935%" y="1151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.03%)</title><rect x="0.5435%" y="1125" width="0.0340%" height="15" fill="rgb(246,168,33)" fg:x="16" fg:w="1"/><text x="0.7935%" y="1135.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.03%)</title><rect x="0.5435%" y="1109" width="0.0340%" height="15" fill="rgb(231,114,1)" fg:x="16" fg:w="1"/><text x="0.7935%" y="1119.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (1 samples, 0.03%)</title><rect x="0.5435%" y="1093" width="0.0340%" height="15" fill="rgb(207,184,53)" fg:x="16" fg:w="1"/><text x="0.7935%" y="1103.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.03%)</title><rect x="0.5435%" y="1077" width="0.0340%" height="15" fill="rgb(224,95,51)" fg:x="16" fg:w="1"/><text x="0.7935%" y="1087.50"></text></g><g><title>std::panicking::try (1 samples, 0.03%)</title><rect x="0.5435%" y="1061" width="0.0340%" height="15" fill="rgb(212,188,45)" fg:x="16" fg:w="1"/><text x="0.7935%" y="1071.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.03%)</title><rect x="0.5435%" y="1045" width="0.0340%" height="15" fill="rgb(223,154,38)" fg:x="16" fg:w="1"/><text x="0.7935%" y="1055.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.03%)</title><rect x="0.5435%" y="1029" width="0.0340%" height="15" fill="rgb(251,22,52)" fg:x="16" fg:w="1"/><text x="0.7935%" y="1039.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="0.5435%" y="1013" width="0.0340%" height="15" fill="rgb(229,209,22)" fg:x="16" fg:w="1"/><text x="0.7935%" y="1023.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.03%)</title><rect x="0.5435%" y="997" width="0.0340%" height="15" fill="rgb(234,138,34)" fg:x="16" fg:w="1"/><text x="0.7935%" y="1007.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="0.5435%" y="981" width="0.0340%" height="15" fill="rgb(212,95,11)" fg:x="16" fg:w="1"/><text x="0.7935%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.03%)</title><rect x="0.5435%" y="965" width="0.0340%" height="15" fill="rgb(240,179,47)" fg:x="16" fg:w="1"/><text x="0.7935%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.03%)</title><rect x="0.5435%" y="949" width="0.0340%" height="15" fill="rgb(240,163,11)" fg:x="16" fg:w="1"/><text x="0.7935%" y="959.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="0.5435%" y="933" width="0.0340%" height="15" fill="rgb(236,37,12)" fg:x="16" fg:w="1"/><text x="0.7935%" y="943.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.03%)</title><rect x="0.5435%" y="917" width="0.0340%" height="15" fill="rgb(232,164,16)" fg:x="16" fg:w="1"/><text x="0.7935%" y="927.50"></text></g><g><title>std::panicking::try (1 samples, 0.03%)</title><rect x="0.5435%" y="901" width="0.0340%" height="15" fill="rgb(244,205,15)" fg:x="16" fg:w="1"/><text x="0.7935%" y="911.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.03%)</title><rect x="0.5435%" y="885" width="0.0340%" height="15" fill="rgb(223,117,47)" fg:x="16" fg:w="1"/><text x="0.7935%" y="895.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="0.5435%" y="869" width="0.0340%" height="15" fill="rgb(244,107,35)" fg:x="16" fg:w="1"/><text x="0.7935%" y="879.50"></text></g><g><title>futures_lite::future::block_on (1 samples, 0.03%)</title><rect x="0.5435%" y="853" width="0.0340%" height="15" fill="rgb(205,140,8)" fg:x="16" fg:w="1"/><text x="0.7935%" y="863.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.03%)</title><rect x="0.5435%" y="837" width="0.0340%" height="15" fill="rgb(228,84,46)" fg:x="16" fg:w="1"/><text x="0.7935%" y="847.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.03%)</title><rect x="0.5435%" y="821" width="0.0340%" height="15" fill="rgb(254,188,9)" fg:x="16" fg:w="1"/><text x="0.7935%" y="831.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (1 samples, 0.03%)</title><rect x="0.5435%" y="805" width="0.0340%" height="15" fill="rgb(206,112,54)" fg:x="16" fg:w="1"/><text x="0.7935%" y="815.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (1 samples, 0.03%)</title><rect x="0.5435%" y="789" width="0.0340%" height="15" fill="rgb(216,84,49)" fg:x="16" fg:w="1"/><text x="0.7935%" y="799.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (1 samples, 0.03%)</title><rect x="0.5435%" y="773" width="0.0340%" height="15" fill="rgb(214,194,35)" fg:x="16" fg:w="1"/><text x="0.7935%" y="783.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="0.5435%" y="757" width="0.0340%" height="15" fill="rgb(249,28,3)" fg:x="16" fg:w="1"/><text x="0.7935%" y="767.50"></text></g><g><title>async_executor::Runner::runnable (1 samples, 0.03%)</title><rect x="0.5435%" y="741" width="0.0340%" height="15" fill="rgb(222,56,52)" fg:x="16" fg:w="1"/><text x="0.7935%" y="751.50"></text></g><g><title>TaskPool_(23) (1 samples, 0.03%)</title><rect x="0.5774%" y="1205" width="0.0340%" height="15" fill="rgb(245,217,50)" fg:x="17" fg:w="1"/><text x="0.8274%" y="1215.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="0.5774%" y="1189" width="0.0340%" height="15" fill="rgb(213,201,24)" fg:x="17" fg:w="1"/><text x="0.8274%" y="1199.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="0.5774%" y="1173" width="0.0340%" height="15" fill="rgb(248,116,28)" fg:x="17" fg:w="1"/><text x="0.8274%" y="1183.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1 samples, 0.03%)</title><rect x="0.5774%" y="1157" width="0.0340%" height="15" fill="rgb(219,72,43)" fg:x="17" fg:w="1"/><text x="0.8274%" y="1167.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.03%)</title><rect x="0.5774%" y="1141" width="0.0340%" height="15" fill="rgb(209,138,14)" fg:x="17" fg:w="1"/><text x="0.8274%" y="1151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.03%)</title><rect x="0.5774%" y="1125" width="0.0340%" height="15" fill="rgb(222,18,33)" fg:x="17" fg:w="1"/><text x="0.8274%" y="1135.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.03%)</title><rect x="0.5774%" y="1109" width="0.0340%" height="15" fill="rgb(213,199,7)" fg:x="17" fg:w="1"/><text x="0.8274%" y="1119.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (1 samples, 0.03%)</title><rect x="0.5774%" y="1093" width="0.0340%" height="15" fill="rgb(250,110,10)" fg:x="17" fg:w="1"/><text x="0.8274%" y="1103.50"></text></g><g><title>std::sys::unix::thread::Thread::set_name (1 samples, 0.03%)</title><rect x="0.5774%" y="1077" width="0.0340%" height="15" fill="rgb(248,123,6)" fg:x="17" fg:w="1"/><text x="0.8274%" y="1087.50"></text></g><g><title>pthread_setname_np (1 samples, 0.03%)</title><rect x="0.5774%" y="1061" width="0.0340%" height="15" fill="rgb(206,91,31)" fg:x="17" fg:w="1"/><text x="0.8274%" y="1071.50"></text></g><g><title>prctl (1 samples, 0.03%)</title><rect x="0.5774%" y="1045" width="0.0340%" height="15" fill="rgb(211,154,13)" fg:x="17" fg:w="1"/><text x="0.8274%" y="1055.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.5774%" y="1029" width="0.0340%" height="15" fill="rgb(225,148,7)" fg:x="17" fg:w="1"/><text x="0.8274%" y="1039.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.5774%" y="1013" width="0.0340%" height="15" fill="rgb(220,160,43)" fg:x="17" fg:w="1"/><text x="0.8274%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.5774%" y="997" width="0.0340%" height="15" fill="rgb(213,52,39)" fg:x="17" fg:w="1"/><text x="0.8274%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.5774%" y="981" width="0.0340%" height="15" fill="rgb(243,137,7)" fg:x="17" fg:w="1"/><text x="0.8274%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.5774%" y="965" width="0.0340%" height="15" fill="rgb(230,79,13)" fg:x="17" fg:w="1"/><text x="0.8274%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.5774%" y="949" width="0.0340%" height="15" fill="rgb(247,105,23)" fg:x="17" fg:w="1"/><text x="0.8274%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.5774%" y="933" width="0.0340%" height="15" fill="rgb(223,179,41)" fg:x="17" fg:w="1"/><text x="0.8274%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.5774%" y="917" width="0.0340%" height="15" fill="rgb(218,9,34)" fg:x="17" fg:w="1"/><text x="0.8274%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.5774%" y="901" width="0.0340%" height="15" fill="rgb(222,106,8)" fg:x="17" fg:w="1"/><text x="0.8274%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.5774%" y="885" width="0.0340%" height="15" fill="rgb(211,220,0)" fg:x="17" fg:w="1"/><text x="0.8274%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.5774%" y="869" width="0.0340%" height="15" fill="rgb(229,52,16)" fg:x="17" fg:w="1"/><text x="0.8274%" y="879.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (1 samples, 0.03%)</title><rect x="0.6114%" y="645" width="0.0340%" height="15" fill="rgb(212,155,18)" fg:x="18" fg:w="1"/><text x="0.8614%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.03%)</title><rect x="0.6114%" y="629" width="0.0340%" height="15" fill="rgb(242,21,14)" fg:x="18" fg:w="1"/><text x="0.8614%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.03%)</title><rect x="0.6114%" y="613" width="0.0340%" height="15" fill="rgb(222,19,48)" fg:x="18" fg:w="1"/><text x="0.8614%" y="623.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (2 samples, 0.07%)</title><rect x="0.6114%" y="661" width="0.0679%" height="15" fill="rgb(232,45,27)" fg:x="18" fg:w="2"/><text x="0.8614%" y="671.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (1 samples, 0.03%)</title><rect x="0.6454%" y="645" width="0.0340%" height="15" fill="rgb(249,103,42)" fg:x="19" fg:w="1"/><text x="0.8954%" y="655.50"></text></g><g><title>cfree (1 samples, 0.03%)</title><rect x="0.6454%" y="629" width="0.0340%" height="15" fill="rgb(246,81,33)" fg:x="19" fg:w="1"/><text x="0.8954%" y="639.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="0.6454%" y="613" width="0.0340%" height="15" fill="rgb(252,33,42)" fg:x="19" fg:w="1"/><text x="0.8954%" y="623.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (3 samples, 0.10%)</title><rect x="0.6114%" y="677" width="0.1019%" height="15" fill="rgb(209,212,41)" fg:x="18" fg:w="3"/><text x="0.8614%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="0.6793%" y="661" width="0.0340%" height="15" fill="rgb(207,154,6)" fg:x="20" fg:w="1"/><text x="0.9293%" y="671.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="0.6793%" y="645" width="0.0340%" height="15" fill="rgb(223,64,47)" fg:x="20" fg:w="1"/><text x="0.9293%" y="655.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read_unlock (1 samples, 0.03%)</title><rect x="0.6793%" y="629" width="0.0340%" height="15" fill="rgb(211,161,38)" fg:x="20" fg:w="1"/><text x="0.9293%" y="639.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (1 samples, 0.03%)</title><rect x="0.7133%" y="613" width="0.0340%" height="15" fill="rgb(219,138,40)" fg:x="21" fg:w="1"/><text x="0.9633%" y="623.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::notify_one (1 samples, 0.03%)</title><rect x="0.7133%" y="597" width="0.0340%" height="15" fill="rgb(241,228,46)" fg:x="21" fg:w="1"/><text x="0.9633%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_add (1 samples, 0.03%)</title><rect x="0.7133%" y="581" width="0.0340%" height="15" fill="rgb(223,209,38)" fg:x="21" fg:w="1"/><text x="0.9633%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.03%)</title><rect x="0.7133%" y="565" width="0.0340%" height="15" fill="rgb(236,164,45)" fg:x="21" fg:w="1"/><text x="0.9633%" y="575.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (5 samples, 0.17%)</title><rect x="0.6114%" y="741" width="0.1698%" height="15" fill="rgb(231,15,5)" fg:x="18" fg:w="5"/><text x="0.8614%" y="751.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (5 samples, 0.17%)</title><rect x="0.6114%" y="725" width="0.1698%" height="15" fill="rgb(252,35,15)" fg:x="18" fg:w="5"/><text x="0.8614%" y="735.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (5 samples, 0.17%)</title><rect x="0.6114%" y="709" width="0.1698%" height="15" fill="rgb(248,181,18)" fg:x="18" fg:w="5"/><text x="0.8614%" y="719.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (5 samples, 0.17%)</title><rect x="0.6114%" y="693" width="0.1698%" height="15" fill="rgb(233,39,42)" fg:x="18" fg:w="5"/><text x="0.8614%" y="703.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (2 samples, 0.07%)</title><rect x="0.7133%" y="677" width="0.0679%" height="15" fill="rgb(238,110,33)" fg:x="21" fg:w="2"/><text x="0.9633%" y="687.50"></text></g><g><title>futures_lite::future::block_on::parker_and_waker::{{closure}} (2 samples, 0.07%)</title><rect x="0.7133%" y="661" width="0.0679%" height="15" fill="rgb(233,195,10)" fg:x="21" fg:w="2"/><text x="0.9633%" y="671.50"></text></g><g><title>parking::Unparker::unpark (2 samples, 0.07%)</title><rect x="0.7133%" y="645" width="0.0679%" height="15" fill="rgb(254,105,3)" fg:x="21" fg:w="2"/><text x="0.9633%" y="655.50"></text></g><g><title>parking::Inner::unpark (2 samples, 0.07%)</title><rect x="0.7133%" y="629" width="0.0679%" height="15" fill="rgb(221,225,9)" fg:x="21" fg:w="2"/><text x="0.9633%" y="639.50"></text></g><g><title>syscall (1 samples, 0.03%)</title><rect x="0.7473%" y="613" width="0.0340%" height="15" fill="rgb(224,227,45)" fg:x="22" fg:w="1"/><text x="0.9973%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.7473%" y="597" width="0.0340%" height="15" fill="rgb(229,198,43)" fg:x="22" fg:w="1"/><text x="0.9973%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.7473%" y="581" width="0.0340%" height="15" fill="rgb(206,209,35)" fg:x="22" fg:w="1"/><text x="0.9973%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.7473%" y="565" width="0.0340%" height="15" fill="rgb(245,195,53)" fg:x="22" fg:w="1"/><text x="0.9973%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.7473%" y="549" width="0.0340%" height="15" fill="rgb(240,92,26)" fg:x="22" fg:w="1"/><text x="0.9973%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.7473%" y="533" width="0.0340%" height="15" fill="rgb(207,40,23)" fg:x="22" fg:w="1"/><text x="0.9973%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.7473%" y="517" width="0.0340%" height="15" fill="rgb(223,111,35)" fg:x="22" fg:w="1"/><text x="0.9973%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.7473%" y="501" width="0.0340%" height="15" fill="rgb(229,147,28)" fg:x="22" fg:w="1"/><text x="0.9973%" y="511.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::signal_dependents (1 samples, 0.03%)</title><rect x="0.7812%" y="677" width="0.0340%" height="15" fill="rgb(211,29,28)" fg:x="23" fg:w="1"/><text x="1.0312%" y="687.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor as bevy_ecs::schedule::executor::SystemExecutor&gt;::run::{{closure}}::{{closure}} (3 samples, 0.10%)</title><rect x="0.7812%" y="693" width="0.1019%" height="15" fill="rgb(228,72,33)" fg:x="23" fg:w="3"/><text x="1.0312%" y="703.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::spawn_system_tasks (2 samples, 0.07%)</title><rect x="0.8152%" y="677" width="0.0679%" height="15" fill="rgb(205,214,31)" fg:x="24" fg:w="2"/><text x="1.0652%" y="687.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::spawn_system_task (1 samples, 0.03%)</title><rect x="0.8492%" y="661" width="0.0340%" height="15" fill="rgb(224,111,15)" fg:x="25" fg:w="1"/><text x="1.0992%" y="671.50"></text></g><g><title>bevy_tasks::task_pool::Scope&lt;T&gt;::spawn (1 samples, 0.03%)</title><rect x="0.8492%" y="645" width="0.0340%" height="15" fill="rgb(253,21,26)" fg:x="25" fg:w="1"/><text x="1.0992%" y="655.50"></text></g><g><title>async_executor::Executor::spawn (1 samples, 0.03%)</title><rect x="0.8492%" y="629" width="0.0340%" height="15" fill="rgb(245,139,43)" fg:x="25" fg:w="1"/><text x="1.0992%" y="639.50"></text></g><g><title>async_task::runnable::spawn_unchecked (1 samples, 0.03%)</title><rect x="0.8492%" y="613" width="0.0340%" height="15" fill="rgb(252,170,7)" fg:x="25" fg:w="1"/><text x="1.0992%" y="623.50"></text></g><g><title>async_task::runnable::Builder&lt;M&gt;::spawn_unchecked (1 samples, 0.03%)</title><rect x="0.8492%" y="597" width="0.0340%" height="15" fill="rgb(231,118,14)" fg:x="25" fg:w="1"/><text x="1.0992%" y="607.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::allocate (1 samples, 0.03%)</title><rect x="0.8492%" y="581" width="0.0340%" height="15" fill="rgb(238,83,0)" fg:x="25" fg:w="1"/><text x="1.0992%" y="591.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.03%)</title><rect x="0.8492%" y="565" width="0.0340%" height="15" fill="rgb(221,39,39)" fg:x="25" fg:w="1"/><text x="1.0992%" y="575.50"></text></g><g><title>malloc (1 samples, 0.03%)</title><rect x="0.8492%" y="549" width="0.0340%" height="15" fill="rgb(222,119,46)" fg:x="25" fg:w="1"/><text x="1.0992%" y="559.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="0.8492%" y="533" width="0.0340%" height="15" fill="rgb(222,165,49)" fg:x="25" fg:w="1"/><text x="1.0992%" y="543.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (1 samples, 0.03%)</title><rect x="0.8832%" y="677" width="0.0340%" height="15" fill="rgb(219,113,52)" fg:x="26" fg:w="1"/><text x="1.1332%" y="687.50"></text></g><g><title>event_listener::Event::notify_additional (1 samples, 0.03%)</title><rect x="0.8832%" y="661" width="0.0340%" height="15" fill="rgb(214,7,15)" fg:x="26" fg:w="1"/><text x="1.1332%" y="671.50"></text></g><g><title>event_listener::List::notify_additional (1 samples, 0.03%)</title><rect x="0.8832%" y="645" width="0.0340%" height="15" fill="rgb(235,32,4)" fg:x="26" fg:w="1"/><text x="1.1332%" y="655.50"></text></g><g><title>core::task::wake::Waker::wake (1 samples, 0.03%)</title><rect x="0.8832%" y="629" width="0.0340%" height="15" fill="rgb(238,90,54)" fg:x="26" fg:w="1"/><text x="1.1332%" y="639.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::wake (1 samples, 0.03%)</title><rect x="0.8832%" y="613" width="0.0340%" height="15" fill="rgb(213,208,19)" fg:x="26" fg:w="1"/><text x="1.1332%" y="623.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::wake_by_ref (1 samples, 0.03%)</title><rect x="0.8832%" y="597" width="0.0340%" height="15" fill="rgb(233,156,4)" fg:x="26" fg:w="1"/><text x="1.1332%" y="607.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (1 samples, 0.03%)</title><rect x="0.8832%" y="581" width="0.0340%" height="15" fill="rgb(207,194,5)" fg:x="26" fg:w="1"/><text x="1.1332%" y="591.50"></text></g><g><title>futures_lite::future::block_on::parker_and_waker::{{closure}} (1 samples, 0.03%)</title><rect x="0.8832%" y="565" width="0.0340%" height="15" fill="rgb(206,111,30)" fg:x="26" fg:w="1"/><text x="1.1332%" y="575.50"></text></g><g><title>parking::Unparker::unpark (1 samples, 0.03%)</title><rect x="0.8832%" y="549" width="0.0340%" height="15" fill="rgb(243,70,54)" fg:x="26" fg:w="1"/><text x="1.1332%" y="559.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.03%)</title><rect x="0.8832%" y="533" width="0.0340%" height="15" fill="rgb(242,28,8)" fg:x="26" fg:w="1"/><text x="1.1332%" y="543.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::inner (1 samples, 0.03%)</title><rect x="0.8832%" y="517" width="0.0340%" height="15" fill="rgb(219,106,18)" fg:x="26" fg:w="1"/><text x="1.1332%" y="527.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.03%)</title><rect x="0.8832%" y="501" width="0.0340%" height="15" fill="rgb(244,222,10)" fg:x="26" fg:w="1"/><text x="1.1332%" y="511.50"></text></g><g><title>&lt;(P0,) as bevy_ecs::system::system_param::SystemParam&gt;::get_param (1 samples, 0.03%)</title><rect x="0.9511%" y="565" width="0.0340%" height="15" fill="rgb(236,179,52)" fg:x="28" fg:w="1"/><text x="1.2011%" y="575.50"></text></g><g><title>&lt;bevy_ecs::change_detection::ResMut&lt;T&gt; as bevy_ecs::system::system_param::SystemParam&gt;::get_param (1 samples, 0.03%)</title><rect x="0.9511%" y="549" width="0.0340%" height="15" fill="rgb(213,23,39)" fg:x="28" fg:w="1"/><text x="1.2011%" y="559.50"></text></g><g><title>bevy_ecs::world::unsafe_world_cell::UnsafeWorldCell::get_resource_mut_by_id (1 samples, 0.03%)</title><rect x="0.9511%" y="533" width="0.0340%" height="15" fill="rgb(238,48,10)" fg:x="28" fg:w="1"/><text x="1.2011%" y="543.50"></text></g><g><title>bevy_ecs::storage::resource::Resources&lt;_&gt;::get (1 samples, 0.03%)</title><rect x="0.9511%" y="517" width="0.0340%" height="15" fill="rgb(251,196,23)" fg:x="28" fg:w="1"/><text x="1.2011%" y="527.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get (1 samples, 0.03%)</title><rect x="0.9511%" y="501" width="0.0340%" height="15" fill="rgb(250,152,24)" fg:x="28" fg:w="1"/><text x="1.2011%" y="511.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get (1 samples, 0.03%)</title><rect x="0.9511%" y="485" width="0.0340%" height="15" fill="rgb(209,150,17)" fg:x="28" fg:w="1"/><text x="1.2011%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.03%)</title><rect x="0.9511%" y="469" width="0.0340%" height="15" fill="rgb(234,202,34)" fg:x="28" fg:w="1"/><text x="1.2011%" y="479.50"></text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (1 samples, 0.03%)</title><rect x="0.9851%" y="485" width="0.0340%" height="15" fill="rgb(253,148,53)" fg:x="29" fg:w="1"/><text x="1.2351%" y="495.50"></text></g><g><title>wgpu::Device::create_buffer (1 samples, 0.03%)</title><rect x="0.9851%" y="469" width="0.0340%" height="15" fill="rgb(218,129,16)" fg:x="29" fg:w="1"/><text x="1.2351%" y="479.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_create_buffer (1 samples, 0.03%)</title><rect x="0.9851%" y="453" width="0.0340%" height="15" fill="rgb(216,85,19)" fg:x="29" fg:w="1"/><text x="1.2351%" y="463.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::device_create_buffer (1 samples, 0.03%)</title><rect x="0.9851%" y="437" width="0.0340%" height="15" fill="rgb(235,228,7)" fg:x="29" fg:w="1"/><text x="1.2351%" y="447.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (1 samples, 0.03%)</title><rect x="0.9851%" y="421" width="0.0340%" height="15" fill="rgb(245,175,0)" fg:x="29" fg:w="1"/><text x="1.2351%" y="431.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_buffer (1 samples, 0.03%)</title><rect x="0.9851%" y="405" width="0.0340%" height="15" fill="rgb(208,168,36)" fg:x="29" fg:w="1"/><text x="1.2351%" y="415.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_buffer (1 samples, 0.03%)</title><rect x="0.9851%" y="389" width="0.0340%" height="15" fill="rgb(246,171,24)" fg:x="29" fg:w="1"/><text x="1.2351%" y="399.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.03%)</title><rect x="0.9851%" y="373" width="0.0340%" height="15" fill="rgb(215,142,24)" fg:x="29" fg:w="1"/><text x="1.2351%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (1 samples, 0.03%)</title><rect x="1.0190%" y="485" width="0.0340%" height="15" fill="rgb(250,187,7)" fg:x="30" fg:w="1"/><text x="1.2690%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;[game_render::pbr::RenderNode]&gt; (1 samples, 0.03%)</title><rect x="1.0190%" y="469" width="0.0340%" height="15" fill="rgb(228,66,33)" fg:x="30" fg:w="1"/><text x="1.2690%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;game_render::pbr::RenderNode&gt; (1 samples, 0.03%)</title><rect x="1.0190%" y="453" width="0.0340%" height="15" fill="rgb(234,215,21)" fg:x="30" fg:w="1"/><text x="1.2690%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::Buffer&gt; (1 samples, 0.03%)</title><rect x="1.0190%" y="437" width="0.0340%" height="15" fill="rgb(222,191,20)" fg:x="30" fg:w="1"/><text x="1.2690%" y="447.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::buffer_drop (1 samples, 0.03%)</title><rect x="1.0190%" y="421" width="0.0340%" height="15" fill="rgb(245,79,54)" fg:x="30" fg:w="1"/><text x="1.2690%" y="431.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_drop (1 samples, 0.03%)</title><rect x="1.0190%" y="405" width="0.0340%" height="15" fill="rgb(240,10,37)" fg:x="30" fg:w="1"/><text x="1.2690%" y="415.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::read (1 samples, 0.03%)</title><rect x="1.0190%" y="389" width="0.0340%" height="15" fill="rgb(214,192,32)" fg:x="30" fg:w="1"/><text x="1.2690%" y="399.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (1 samples, 0.03%)</title><rect x="1.0190%" y="373" width="0.0340%" height="15" fill="rgb(209,36,54)" fg:x="30" fg:w="1"/><text x="1.2690%" y="383.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (1 samples, 0.03%)</title><rect x="1.0190%" y="357" width="0.0340%" height="15" fill="rgb(220,10,11)" fg:x="30" fg:w="1"/><text x="1.2690%" y="367.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::lock_shared_slow (1 samples, 0.03%)</title><rect x="1.0190%" y="341" width="0.0340%" height="15" fill="rgb(221,106,17)" fg:x="30" fg:w="1"/><text x="1.2690%" y="351.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::lock_common (1 samples, 0.03%)</title><rect x="1.0190%" y="325" width="0.0340%" height="15" fill="rgb(251,142,44)" fg:x="30" fg:w="1"/><text x="1.2690%" y="335.50"></text></g><g><title>parking_lot_core::parking_lot::park (1 samples, 0.03%)</title><rect x="1.0190%" y="309" width="0.0340%" height="15" fill="rgb(238,13,15)" fg:x="30" fg:w="1"/><text x="1.2690%" y="319.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (1 samples, 0.03%)</title><rect x="1.0190%" y="293" width="0.0340%" height="15" fill="rgb(208,107,27)" fg:x="30" fg:w="1"/><text x="1.2690%" y="303.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.03%)</title><rect x="1.0190%" y="277" width="0.0340%" height="15" fill="rgb(205,136,37)" fg:x="30" fg:w="1"/><text x="1.2690%" y="287.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data::THREAD_DATA::__getit (1 samples, 0.03%)</title><rect x="1.0190%" y="261" width="0.0340%" height="15" fill="rgb(250,205,27)" fg:x="30" fg:w="1"/><text x="1.2690%" y="271.50"></text></g><g><title>std::sys::common::thread_local::fast_local::Key&lt;T&gt;::get (1 samples, 0.03%)</title><rect x="1.0190%" y="245" width="0.0340%" height="15" fill="rgb(210,80,43)" fg:x="30" fg:w="1"/><text x="1.2690%" y="255.50"></text></g><g><title>std::sys::common::thread_local::fast_local::Key&lt;T&gt;::try_initialize (1 samples, 0.03%)</title><rect x="1.0190%" y="229" width="0.0340%" height="15" fill="rgb(247,160,36)" fg:x="30" fg:w="1"/><text x="1.2690%" y="239.50"></text></g><g><title>std::sys::common::thread_local::lazy::LazyKeyInner&lt;T&gt;::initialize (1 samples, 0.03%)</title><rect x="1.0190%" y="213" width="0.0340%" height="15" fill="rgb(234,13,49)" fg:x="30" fg:w="1"/><text x="1.2690%" y="223.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data::THREAD_DATA::__getit::{{closure}} (1 samples, 0.03%)</title><rect x="1.0190%" y="197" width="0.0340%" height="15" fill="rgb(234,122,0)" fg:x="30" fg:w="1"/><text x="1.2690%" y="207.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data::THREAD_DATA::__init (1 samples, 0.03%)</title><rect x="1.0190%" y="181" width="0.0340%" height="15" fill="rgb(207,146,38)" fg:x="30" fg:w="1"/><text x="1.2690%" y="191.50"></text></g><g><title>parking_lot_core::parking_lot::ThreadData::new (1 samples, 0.03%)</title><rect x="1.0190%" y="165" width="0.0340%" height="15" fill="rgb(207,177,25)" fg:x="30" fg:w="1"/><text x="1.2690%" y="175.50"></text></g><g><title>parking_lot_core::parking_lot::grow_hashtable (1 samples, 0.03%)</title><rect x="1.0190%" y="149" width="0.0340%" height="15" fill="rgb(211,178,42)" fg:x="30" fg:w="1"/><text x="1.2690%" y="159.50"></text></g><g><title>parking_lot_core::parking_lot::get_hashtable (1 samples, 0.03%)</title><rect x="1.0190%" y="133" width="0.0340%" height="15" fill="rgb(230,69,54)" fg:x="30" fg:w="1"/><text x="1.2690%" y="143.50"></text></g><g><title>parking_lot_core::parking_lot::create_hashtable (1 samples, 0.03%)</title><rect x="1.0190%" y="117" width="0.0340%" height="15" fill="rgb(214,135,41)" fg:x="30" fg:w="1"/><text x="1.2690%" y="127.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_create_bind_group (1 samples, 0.03%)</title><rect x="1.0530%" y="469" width="0.0340%" height="15" fill="rgb(237,67,25)" fg:x="31" fg:w="1"/><text x="1.3030%" y="479.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::device_create_bind_group (1 samples, 0.03%)</title><rect x="1.0530%" y="453" width="0.0340%" height="15" fill="rgb(222,189,50)" fg:x="31" fg:w="1"/><text x="1.3030%" y="463.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (15 samples, 0.51%)</title><rect x="0.6114%" y="789" width="0.5095%" height="15" fill="rgb(245,148,34)" fg:x="18" fg:w="15"/><text x="0.8614%" y="799.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (15 samples, 0.51%)</title><rect x="0.6114%" y="773" width="0.5095%" height="15" fill="rgb(222,29,6)" fg:x="18" fg:w="15"/><text x="0.8614%" y="783.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (15 samples, 0.51%)</title><rect x="0.6114%" y="757" width="0.5095%" height="15" fill="rgb(221,189,43)" fg:x="18" fg:w="15"/><text x="0.8614%" y="767.50"></text></g><g><title>async_task::runnable::Runnable&lt;M&gt;::run (10 samples, 0.34%)</title><rect x="0.7812%" y="741" width="0.3397%" height="15" fill="rgb(207,36,27)" fg:x="23" fg:w="10"/><text x="1.0312%" y="751.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::run (10 samples, 0.34%)</title><rect x="0.7812%" y="725" width="0.3397%" height="15" fill="rgb(217,90,24)" fg:x="23" fg:w="10"/><text x="1.0312%" y="735.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (10 samples, 0.34%)</title><rect x="0.7812%" y="709" width="0.3397%" height="15" fill="rgb(224,66,35)" fg:x="23" fg:w="10"/><text x="1.0312%" y="719.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::spawn_system_task::{{closure}} (7 samples, 0.24%)</title><rect x="0.8832%" y="693" width="0.2378%" height="15" fill="rgb(221,13,50)" fg:x="26" fg:w="7"/><text x="1.1332%" y="703.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 0.20%)</title><rect x="0.9171%" y="677" width="0.2038%" height="15" fill="rgb(236,68,49)" fg:x="27" fg:w="6"/><text x="1.1671%" y="687.50"></text></g><g><title>std::panicking::try (6 samples, 0.20%)</title><rect x="0.9171%" y="661" width="0.2038%" height="15" fill="rgb(229,146,28)" fg:x="27" fg:w="6"/><text x="1.1671%" y="671.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 0.20%)</title><rect x="0.9171%" y="645" width="0.2038%" height="15" fill="rgb(225,31,38)" fg:x="27" fg:w="6"/><text x="1.1671%" y="655.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6 samples, 0.20%)</title><rect x="0.9171%" y="629" width="0.2038%" height="15" fill="rgb(250,208,3)" fg:x="27" fg:w="6"/><text x="1.1671%" y="639.50"></text></g><g><title>core::ops::function::FnOnce::call_once (6 samples, 0.20%)</title><rect x="0.9171%" y="613" width="0.2038%" height="15" fill="rgb(246,54,23)" fg:x="27" fg:w="6"/><text x="1.1671%" y="623.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::spawn_system_task::{{closure}}::{{closure}} (6 samples, 0.20%)</title><rect x="0.9171%" y="597" width="0.2038%" height="15" fill="rgb(243,76,11)" fg:x="27" fg:w="6"/><text x="1.1671%" y="607.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (6 samples, 0.20%)</title><rect x="0.9171%" y="581" width="0.2038%" height="15" fill="rgb(245,21,50)" fg:x="27" fg:w="6"/><text x="1.1671%" y="591.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;fn(F0,F1,F2,F3,F4,F5,F6,F7,F8,F9) .&gt; Out&gt;&gt;::run (4 samples, 0.14%)</title><rect x="0.9851%" y="565" width="0.1359%" height="15" fill="rgb(228,9,43)" fg:x="29" fg:w="4"/><text x="1.2351%" y="575.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;fn(F0,F1,F2,F3,F4,F5,F6,F7,F8,F9) .&gt; Out&gt;&gt;::run::call_inner (4 samples, 0.14%)</title><rect x="0.9851%" y="549" width="0.1359%" height="15" fill="rgb(208,100,47)" fg:x="29" fg:w="4"/><text x="1.2351%" y="559.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (4 samples, 0.14%)</title><rect x="0.9851%" y="533" width="0.1359%" height="15" fill="rgb(232,26,8)" fg:x="29" fg:w="4"/><text x="1.2351%" y="543.50"></text></g><g><title>core::ops::function::FnMut::call_mut (4 samples, 0.14%)</title><rect x="0.9851%" y="517" width="0.1359%" height="15" fill="rgb(216,166,38)" fg:x="29" fg:w="4"/><text x="1.2351%" y="527.50"></text></g><g><title>game_render::pbr::prepare_materials (4 samples, 0.14%)</title><rect x="0.9851%" y="501" width="0.1359%" height="15" fill="rgb(251,202,51)" fg:x="29" fg:w="4"/><text x="1.2351%" y="511.50"></text></g><g><title>wgpu::Device::create_bind_group (2 samples, 0.07%)</title><rect x="1.0530%" y="485" width="0.0679%" height="15" fill="rgb(254,216,34)" fg:x="31" fg:w="2"/><text x="1.3030%" y="495.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.03%)</title><rect x="1.0870%" y="469" width="0.0340%" height="15" fill="rgb(251,32,27)" fg:x="32" fg:w="1"/><text x="1.3370%" y="479.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::inner (1 samples, 0.03%)</title><rect x="1.0870%" y="453" width="0.0340%" height="15" fill="rgb(208,127,28)" fg:x="32" fg:w="1"/><text x="1.3370%" y="463.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.03%)</title><rect x="1.0870%" y="437" width="0.0340%" height="15" fill="rgb(224,137,22)" fg:x="32" fg:w="1"/><text x="1.3370%" y="447.50"></text></g><g><title>[libc.so.6] (16 samples, 0.54%)</title><rect x="0.6114%" y="1189" width="0.5435%" height="15" fill="rgb(254,70,32)" fg:x="18" fg:w="16"/><text x="0.8614%" y="1199.50"></text></g><g><title>[libc.so.6] (16 samples, 0.54%)</title><rect x="0.6114%" y="1173" width="0.5435%" height="15" fill="rgb(229,75,37)" fg:x="18" fg:w="16"/><text x="0.8614%" y="1183.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (16 samples, 0.54%)</title><rect x="0.6114%" y="1157" width="0.5435%" height="15" fill="rgb(252,64,23)" fg:x="18" fg:w="16"/><text x="0.8614%" y="1167.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (16 samples, 0.54%)</title><rect x="0.6114%" y="1141" width="0.5435%" height="15" fill="rgb(232,162,48)" fg:x="18" fg:w="16"/><text x="0.8614%" y="1151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (16 samples, 0.54%)</title><rect x="0.6114%" y="1125" width="0.5435%" height="15" fill="rgb(246,160,12)" fg:x="18" fg:w="16"/><text x="0.8614%" y="1135.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (16 samples, 0.54%)</title><rect x="0.6114%" y="1109" width="0.5435%" height="15" fill="rgb(247,166,0)" fg:x="18" fg:w="16"/><text x="0.8614%" y="1119.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (16 samples, 0.54%)</title><rect x="0.6114%" y="1093" width="0.5435%" height="15" fill="rgb(249,219,21)" fg:x="18" fg:w="16"/><text x="0.8614%" y="1103.50"></text></g><g><title>std::panic::catch_unwind (16 samples, 0.54%)</title><rect x="0.6114%" y="1077" width="0.5435%" height="15" fill="rgb(205,209,3)" fg:x="18" fg:w="16"/><text x="0.8614%" y="1087.50"></text></g><g><title>std::panicking::try (16 samples, 0.54%)</title><rect x="0.6114%" y="1061" width="0.5435%" height="15" fill="rgb(243,44,1)" fg:x="18" fg:w="16"/><text x="0.8614%" y="1071.50"></text></g><g><title>std::panicking::try::do_call (16 samples, 0.54%)</title><rect x="0.6114%" y="1045" width="0.5435%" height="15" fill="rgb(206,159,16)" fg:x="18" fg:w="16"/><text x="0.8614%" y="1055.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (16 samples, 0.54%)</title><rect x="0.6114%" y="1029" width="0.5435%" height="15" fill="rgb(244,77,30)" fg:x="18" fg:w="16"/><text x="0.8614%" y="1039.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (16 samples, 0.54%)</title><rect x="0.6114%" y="1013" width="0.5435%" height="15" fill="rgb(218,69,12)" fg:x="18" fg:w="16"/><text x="0.8614%" y="1023.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (16 samples, 0.54%)</title><rect x="0.6114%" y="997" width="0.5435%" height="15" fill="rgb(212,87,7)" fg:x="18" fg:w="16"/><text x="0.8614%" y="1007.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (16 samples, 0.54%)</title><rect x="0.6114%" y="981" width="0.5435%" height="15" fill="rgb(245,114,25)" fg:x="18" fg:w="16"/><text x="0.8614%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (16 samples, 0.54%)</title><rect x="0.6114%" y="965" width="0.5435%" height="15" fill="rgb(210,61,42)" fg:x="18" fg:w="16"/><text x="0.8614%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (16 samples, 0.54%)</title><rect x="0.6114%" y="949" width="0.5435%" height="15" fill="rgb(211,52,33)" fg:x="18" fg:w="16"/><text x="0.8614%" y="959.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}}::{{closure}} (16 samples, 0.54%)</title><rect x="0.6114%" y="933" width="0.5435%" height="15" fill="rgb(234,58,33)" fg:x="18" fg:w="16"/><text x="0.8614%" y="943.50"></text></g><g><title>std::panic::catch_unwind (16 samples, 0.54%)</title><rect x="0.6114%" y="917" width="0.5435%" height="15" fill="rgb(220,115,36)" fg:x="18" fg:w="16"/><text x="0.8614%" y="927.50"></text></g><g><title>std::panicking::try (16 samples, 0.54%)</title><rect x="0.6114%" y="901" width="0.5435%" height="15" fill="rgb(243,153,54)" fg:x="18" fg:w="16"/><text x="0.8614%" y="911.50"></text></g><g><title>std::panicking::try::do_call (16 samples, 0.54%)</title><rect x="0.6114%" y="885" width="0.5435%" height="15" fill="rgb(251,47,18)" fg:x="18" fg:w="16"/><text x="0.8614%" y="895.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}}::{{closure}}::{{closure}} (16 samples, 0.54%)</title><rect x="0.6114%" y="869" width="0.5435%" height="15" fill="rgb(242,102,42)" fg:x="18" fg:w="16"/><text x="0.8614%" y="879.50"></text></g><g><title>futures_lite::future::block_on (16 samples, 0.54%)</title><rect x="0.6114%" y="853" width="0.5435%" height="15" fill="rgb(234,31,38)" fg:x="18" fg:w="16"/><text x="0.8614%" y="863.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (16 samples, 0.54%)</title><rect x="0.6114%" y="837" width="0.5435%" height="15" fill="rgb(221,117,51)" fg:x="18" fg:w="16"/><text x="0.8614%" y="847.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (16 samples, 0.54%)</title><rect x="0.6114%" y="821" width="0.5435%" height="15" fill="rgb(212,20,18)" fg:x="18" fg:w="16"/><text x="0.8614%" y="831.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (16 samples, 0.54%)</title><rect x="0.6114%" y="805" width="0.5435%" height="15" fill="rgb(245,133,36)" fg:x="18" fg:w="16"/><text x="0.8614%" y="815.50"></text></g><g><title>parking::Inner::park (1 samples, 0.03%)</title><rect x="1.1209%" y="789" width="0.0340%" height="15" fill="rgb(212,6,19)" fg:x="33" fg:w="1"/><text x="1.3709%" y="799.50"></text></g><g><title>std::sync::condvar::Condvar::wait (1 samples, 0.03%)</title><rect x="1.1209%" y="773" width="0.0340%" height="15" fill="rgb(218,1,36)" fg:x="33" fg:w="1"/><text x="1.3709%" y="783.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait (1 samples, 0.03%)</title><rect x="1.1209%" y="757" width="0.0340%" height="15" fill="rgb(246,84,54)" fg:x="33" fg:w="1"/><text x="1.3709%" y="767.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait_optional_timeout (1 samples, 0.03%)</title><rect x="1.1209%" y="741" width="0.0340%" height="15" fill="rgb(242,110,6)" fg:x="33" fg:w="1"/><text x="1.3709%" y="751.50"></text></g><g><title>std::sys::unix::futex::futex_wait (1 samples, 0.03%)</title><rect x="1.1209%" y="725" width="0.0340%" height="15" fill="rgb(214,47,5)" fg:x="33" fg:w="1"/><text x="1.3709%" y="735.50"></text></g><g><title>syscall (1 samples, 0.03%)</title><rect x="1.1209%" y="709" width="0.0340%" height="15" fill="rgb(218,159,25)" fg:x="33" fg:w="1"/><text x="1.3709%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="1.1209%" y="693" width="0.0340%" height="15" fill="rgb(215,211,28)" fg:x="33" fg:w="1"/><text x="1.3709%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="1.1209%" y="677" width="0.0340%" height="15" fill="rgb(238,59,32)" fg:x="33" fg:w="1"/><text x="1.3709%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="1.1209%" y="661" width="0.0340%" height="15" fill="rgb(226,82,3)" fg:x="33" fg:w="1"/><text x="1.3709%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="1.1209%" y="645" width="0.0340%" height="15" fill="rgb(240,164,32)" fg:x="33" fg:w="1"/><text x="1.3709%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="1.1209%" y="629" width="0.0340%" height="15" fill="rgb(232,46,7)" fg:x="33" fg:w="1"/><text x="1.3709%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="1.1209%" y="613" width="0.0340%" height="15" fill="rgb(229,129,53)" fg:x="33" fg:w="1"/><text x="1.3709%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="1.1209%" y="597" width="0.0340%" height="15" fill="rgb(234,188,29)" fg:x="33" fg:w="1"/><text x="1.3709%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="1.1209%" y="581" width="0.0340%" height="15" fill="rgb(246,141,4)" fg:x="33" fg:w="1"/><text x="1.3709%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="1.1209%" y="565" width="0.0340%" height="15" fill="rgb(229,23,39)" fg:x="33" fg:w="1"/><text x="1.3709%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="1.1209%" y="549" width="0.0340%" height="15" fill="rgb(206,12,3)" fg:x="33" fg:w="1"/><text x="1.3709%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="1.1209%" y="533" width="0.0340%" height="15" fill="rgb(252,226,20)" fg:x="33" fg:w="1"/><text x="1.3709%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="1.1209%" y="517" width="0.0340%" height="15" fill="rgb(216,123,35)" fg:x="33" fg:w="1"/><text x="1.3709%" y="527.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (1 samples, 0.03%)</title><rect x="1.1549%" y="1173" width="0.0340%" height="15" fill="rgb(212,68,40)" fg:x="34" fg:w="1"/><text x="1.4049%" y="1183.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;fn(F0,F1,F2,F3,F4,F5,F6,F7,F8,F9) .&gt; Out&gt;&gt;::run (1 samples, 0.03%)</title><rect x="1.1549%" y="1157" width="0.0340%" height="15" fill="rgb(254,125,32)" fg:x="34" fg:w="1"/><text x="1.4049%" y="1167.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;fn(F0,F1,F2,F3,F4,F5,F6,F7,F8,F9) .&gt; Out&gt;&gt;::run::call_inner (1 samples, 0.03%)</title><rect x="1.1549%" y="1141" width="0.0340%" height="15" fill="rgb(253,97,22)" fg:x="34" fg:w="1"/><text x="1.4049%" y="1151.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.03%)</title><rect x="1.1549%" y="1125" width="0.0340%" height="15" fill="rgb(241,101,14)" fg:x="34" fg:w="1"/><text x="1.4049%" y="1135.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1 samples, 0.03%)</title><rect x="1.1549%" y="1109" width="0.0340%" height="15" fill="rgb(238,103,29)" fg:x="34" fg:w="1"/><text x="1.4049%" y="1119.50"></text></g><g><title>game_render::pbr::prepare_materials (1 samples, 0.03%)</title><rect x="1.1549%" y="1093" width="0.0340%" height="15" fill="rgb(233,195,47)" fg:x="34" fg:w="1"/><text x="1.4049%" y="1103.50"></text></g><g><title>wgpu::Device::create_texture (1 samples, 0.03%)</title><rect x="1.1549%" y="1077" width="0.0340%" height="15" fill="rgb(246,218,30)" fg:x="34" fg:w="1"/><text x="1.4049%" y="1087.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_create_texture (1 samples, 0.03%)</title><rect x="1.1549%" y="1061" width="0.0340%" height="15" fill="rgb(219,145,47)" fg:x="34" fg:w="1"/><text x="1.4049%" y="1071.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::device_create_texture (1 samples, 0.03%)</title><rect x="1.1549%" y="1045" width="0.0340%" height="15" fill="rgb(243,12,26)" fg:x="34" fg:w="1"/><text x="1.4049%" y="1055.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_texture (1 samples, 0.03%)</title><rect x="1.1549%" y="1029" width="0.0340%" height="15" fill="rgb(214,87,16)" fg:x="34" fg:w="1"/><text x="1.4049%" y="1039.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_texture (1 samples, 0.03%)</title><rect x="1.1549%" y="1013" width="0.0340%" height="15" fill="rgb(208,99,42)" fg:x="34" fg:w="1"/><text x="1.4049%" y="1023.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_texture (1 samples, 0.03%)</title><rect x="1.1549%" y="997" width="0.0340%" height="15" fill="rgb(253,99,2)" fg:x="34" fg:w="1"/><text x="1.4049%" y="1007.50"></text></g><g><title>ash::device::Device::create_image (1 samples, 0.03%)</title><rect x="1.1549%" y="981" width="0.0340%" height="15" fill="rgb(220,168,23)" fg:x="34" fg:w="1"/><text x="1.4049%" y="991.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="1.1549%" y="965" width="0.0340%" height="15" fill="rgb(242,38,24)" fg:x="34" fg:w="1"/><text x="1.4049%" y="975.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="1.1549%" y="949" width="0.0340%" height="15" fill="rgb(225,182,9)" fg:x="34" fg:w="1"/><text x="1.4049%" y="959.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="1.1549%" y="933" width="0.0340%" height="15" fill="rgb(243,178,37)" fg:x="34" fg:w="1"/><text x="1.4049%" y="943.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="1.1549%" y="917" width="0.0340%" height="15" fill="rgb(232,139,19)" fg:x="34" fg:w="1"/><text x="1.4049%" y="927.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="1.1549%" y="901" width="0.0340%" height="15" fill="rgb(225,201,24)" fg:x="34" fg:w="1"/><text x="1.4049%" y="911.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="1.1549%" y="885" width="0.0340%" height="15" fill="rgb(221,47,46)" fg:x="34" fg:w="1"/><text x="1.4049%" y="895.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="1.1549%" y="869" width="0.0340%" height="15" fill="rgb(249,23,13)" fg:x="34" fg:w="1"/><text x="1.4049%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="1.1889%" y="1173" width="0.0340%" height="15" fill="rgb(219,9,5)" fg:x="35" fg:w="1"/><text x="1.4389%" y="1183.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="1.1889%" y="1157" width="0.0340%" height="15" fill="rgb(254,171,16)" fg:x="35" fg:w="1"/><text x="1.4389%" y="1167.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="1.1889%" y="1141" width="0.0340%" height="15" fill="rgb(230,171,20)" fg:x="35" fg:w="1"/><text x="1.4389%" y="1151.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="1.1889%" y="1125" width="0.0340%" height="15" fill="rgb(210,71,41)" fg:x="35" fg:w="1"/><text x="1.4389%" y="1135.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="1.1889%" y="1109" width="0.0340%" height="15" fill="rgb(206,173,20)" fg:x="35" fg:w="1"/><text x="1.4389%" y="1119.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="1.1889%" y="1093" width="0.0340%" height="15" fill="rgb(233,88,34)" fg:x="35" fg:w="1"/><text x="1.4389%" y="1103.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="1.1889%" y="1077" width="0.0340%" height="15" fill="rgb(223,209,46)" fg:x="35" fg:w="1"/><text x="1.4389%" y="1087.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="1.1889%" y="1061" width="0.0340%" height="15" fill="rgb(250,43,18)" fg:x="35" fg:w="1"/><text x="1.4389%" y="1071.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="1.1889%" y="1045" width="0.0340%" height="15" fill="rgb(208,13,10)" fg:x="35" fg:w="1"/><text x="1.4389%" y="1055.50"></text></g><g><title>wgpu::Device::create_texture (1 samples, 0.03%)</title><rect x="1.2228%" y="869" width="0.0340%" height="15" fill="rgb(212,200,36)" fg:x="36" fg:w="1"/><text x="1.4728%" y="879.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_create_texture (1 samples, 0.03%)</title><rect x="1.2228%" y="853" width="0.0340%" height="15" fill="rgb(225,90,30)" fg:x="36" fg:w="1"/><text x="1.4728%" y="863.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::device_create_texture (1 samples, 0.03%)</title><rect x="1.2228%" y="837" width="0.0340%" height="15" fill="rgb(236,182,39)" fg:x="36" fg:w="1"/><text x="1.4728%" y="847.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_texture (1 samples, 0.03%)</title><rect x="1.2228%" y="821" width="0.0340%" height="15" fill="rgb(212,144,35)" fg:x="36" fg:w="1"/><text x="1.4728%" y="831.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_texture (1 samples, 0.03%)</title><rect x="1.2228%" y="805" width="0.0340%" height="15" fill="rgb(228,63,44)" fg:x="36" fg:w="1"/><text x="1.4728%" y="815.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_texture (1 samples, 0.03%)</title><rect x="1.2228%" y="789" width="0.0340%" height="15" fill="rgb(228,109,6)" fg:x="36" fg:w="1"/><text x="1.4728%" y="799.50"></text></g><g><title>ash::device::Device::create_image (1 samples, 0.03%)</title><rect x="1.2228%" y="773" width="0.0340%" height="15" fill="rgb(238,117,24)" fg:x="36" fg:w="1"/><text x="1.4728%" y="783.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="1.2228%" y="757" width="0.0340%" height="15" fill="rgb(242,26,26)" fg:x="36" fg:w="1"/><text x="1.4728%" y="767.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="1.2228%" y="741" width="0.0340%" height="15" fill="rgb(221,92,48)" fg:x="36" fg:w="1"/><text x="1.4728%" y="751.50"></text></g><g><title>malloc (1 samples, 0.03%)</title><rect x="1.2228%" y="725" width="0.0340%" height="15" fill="rgb(209,209,32)" fg:x="36" fg:w="1"/><text x="1.4728%" y="735.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="1.2228%" y="709" width="0.0340%" height="15" fill="rgb(221,70,22)" fg:x="36" fg:w="1"/><text x="1.4728%" y="719.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="1.2228%" y="693" width="0.0340%" height="15" fill="rgb(248,145,5)" fg:x="36" fg:w="1"/><text x="1.4728%" y="703.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (2 samples, 0.07%)</title><rect x="1.2228%" y="1173" width="0.0679%" height="15" fill="rgb(226,116,26)" fg:x="36" fg:w="2"/><text x="1.4728%" y="1183.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (2 samples, 0.07%)</title><rect x="1.2228%" y="1157" width="0.0679%" height="15" fill="rgb(244,5,17)" fg:x="36" fg:w="2"/><text x="1.4728%" y="1167.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (2 samples, 0.07%)</title><rect x="1.2228%" y="1141" width="0.0679%" height="15" fill="rgb(252,159,33)" fg:x="36" fg:w="2"/><text x="1.4728%" y="1151.50"></text></g><g><title>async_task::runnable::Runnable&lt;M&gt;::run (2 samples, 0.07%)</title><rect x="1.2228%" y="1125" width="0.0679%" height="15" fill="rgb(206,71,0)" fg:x="36" fg:w="2"/><text x="1.4728%" y="1135.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::run (2 samples, 0.07%)</title><rect x="1.2228%" y="1109" width="0.0679%" height="15" fill="rgb(233,118,54)" fg:x="36" fg:w="2"/><text x="1.4728%" y="1119.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (2 samples, 0.07%)</title><rect x="1.2228%" y="1093" width="0.0679%" height="15" fill="rgb(234,83,48)" fg:x="36" fg:w="2"/><text x="1.4728%" y="1103.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::spawn_system_task::{{closure}} (2 samples, 0.07%)</title><rect x="1.2228%" y="1077" width="0.0679%" height="15" fill="rgb(228,3,54)" fg:x="36" fg:w="2"/><text x="1.4728%" y="1087.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.07%)</title><rect x="1.2228%" y="1061" width="0.0679%" height="15" fill="rgb(226,155,13)" fg:x="36" fg:w="2"/><text x="1.4728%" y="1071.50"></text></g><g><title>std::panicking::try (2 samples, 0.07%)</title><rect x="1.2228%" y="1045" width="0.0679%" height="15" fill="rgb(241,28,37)" fg:x="36" fg:w="2"/><text x="1.4728%" y="1055.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.07%)</title><rect x="1.2228%" y="1029" width="0.0679%" height="15" fill="rgb(233,93,10)" fg:x="36" fg:w="2"/><text x="1.4728%" y="1039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2 samples, 0.07%)</title><rect x="1.2228%" y="1013" width="0.0679%" height="15" fill="rgb(225,113,19)" fg:x="36" fg:w="2"/><text x="1.4728%" y="1023.50"></text></g><g><title>core::ops::function::FnOnce::call_once (2 samples, 0.07%)</title><rect x="1.2228%" y="997" width="0.0679%" height="15" fill="rgb(241,2,18)" fg:x="36" fg:w="2"/><text x="1.4728%" y="1007.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::spawn_system_task::{{closure}}::{{closure}} (2 samples, 0.07%)</title><rect x="1.2228%" y="981" width="0.0679%" height="15" fill="rgb(228,207,21)" fg:x="36" fg:w="2"/><text x="1.4728%" y="991.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (2 samples, 0.07%)</title><rect x="1.2228%" y="965" width="0.0679%" height="15" fill="rgb(213,211,35)" fg:x="36" fg:w="2"/><text x="1.4728%" y="975.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;fn(F0,F1,F2,F3,F4,F5,F6,F7,F8,F9) .&gt; Out&gt;&gt;::run (2 samples, 0.07%)</title><rect x="1.2228%" y="949" width="0.0679%" height="15" fill="rgb(209,83,10)" fg:x="36" fg:w="2"/><text x="1.4728%" y="959.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;fn(F0,F1,F2,F3,F4,F5,F6,F7,F8,F9) .&gt; Out&gt;&gt;::run::call_inner (2 samples, 0.07%)</title><rect x="1.2228%" y="933" width="0.0679%" height="15" fill="rgb(209,164,1)" fg:x="36" fg:w="2"/><text x="1.4728%" y="943.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2 samples, 0.07%)</title><rect x="1.2228%" y="917" width="0.0679%" height="15" fill="rgb(213,184,43)" fg:x="36" fg:w="2"/><text x="1.4728%" y="927.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2 samples, 0.07%)</title><rect x="1.2228%" y="901" width="0.0679%" height="15" fill="rgb(231,61,34)" fg:x="36" fg:w="2"/><text x="1.4728%" y="911.50"></text></g><g><title>game_render::pbr::prepare_materials (2 samples, 0.07%)</title><rect x="1.2228%" y="885" width="0.0679%" height="15" fill="rgb(235,75,3)" fg:x="36" fg:w="2"/><text x="1.4728%" y="895.50"></text></g><g><title>wgpu::Queue::write_texture (1 samples, 0.03%)</title><rect x="1.2568%" y="869" width="0.0340%" height="15" fill="rgb(220,106,47)" fg:x="37" fg:w="1"/><text x="1.5068%" y="879.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::queue_write_texture (1 samples, 0.03%)</title><rect x="1.2568%" y="853" width="0.0340%" height="15" fill="rgb(210,196,33)" fg:x="37" fg:w="1"/><text x="1.5068%" y="863.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::queue_write_texture (1 samples, 0.03%)</title><rect x="1.2568%" y="837" width="0.0340%" height="15" fill="rgb(229,154,42)" fg:x="37" fg:w="1"/><text x="1.5068%" y="847.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_texture (1 samples, 0.03%)</title><rect x="1.2568%" y="821" width="0.0340%" height="15" fill="rgb(228,114,26)" fg:x="37" fg:w="1"/><text x="1.5068%" y="831.50"></text></g><g><title>wgpu_core::device::queue::prepare_staging_buffer (1 samples, 0.03%)</title><rect x="1.2568%" y="805" width="0.0340%" height="15" fill="rgb(208,144,1)" fg:x="37" fg:w="1"/><text x="1.5068%" y="815.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_buffer (1 samples, 0.03%)</title><rect x="1.2568%" y="789" width="0.0340%" height="15" fill="rgb(239,112,37)" fg:x="37" fg:w="1"/><text x="1.5068%" y="799.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc (1 samples, 0.03%)</title><rect x="1.2568%" y="773" width="0.0340%" height="15" fill="rgb(210,96,50)" fg:x="37" fg:w="1"/><text x="1.5068%" y="783.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc_internal (1 samples, 0.03%)</title><rect x="1.2568%" y="757" width="0.0340%" height="15" fill="rgb(222,178,2)" fg:x="37" fg:w="1"/><text x="1.5068%" y="767.50"></text></g><g><title>gpu_alloc::usage::MemoryForUsage::mask (1 samples, 0.03%)</title><rect x="1.2568%" y="741" width="0.0340%" height="15" fill="rgb(226,74,18)" fg:x="37" fg:w="1"/><text x="1.5068%" y="751.50"></text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (1 samples, 0.03%)</title><rect x="1.2908%" y="549" width="0.0340%" height="15" fill="rgb(225,67,54)" fg:x="38" fg:w="1"/><text x="1.5408%" y="559.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::buffer_unmap (1 samples, 0.03%)</title><rect x="1.2908%" y="533" width="0.0340%" height="15" fill="rgb(251,92,32)" fg:x="38" fg:w="1"/><text x="1.5408%" y="543.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::buffer_unmap (1 samples, 0.03%)</title><rect x="1.2908%" y="517" width="0.0340%" height="15" fill="rgb(228,149,22)" fg:x="38" fg:w="1"/><text x="1.5408%" y="527.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_unmap (1 samples, 0.03%)</title><rect x="1.2908%" y="501" width="0.0340%" height="15" fill="rgb(243,54,13)" fg:x="38" fg:w="1"/><text x="1.5408%" y="511.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_unmap_inner (1 samples, 0.03%)</title><rect x="1.2908%" y="485" width="0.0340%" height="15" fill="rgb(243,180,28)" fg:x="38" fg:w="1"/><text x="1.5408%" y="495.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::copy_buffer_to_buffer (1 samples, 0.03%)</title><rect x="1.2908%" y="469" width="0.0340%" height="15" fill="rgb(208,167,24)" fg:x="38" fg:w="1"/><text x="1.5408%" y="479.50"></text></g><g><title>ash::device::Device::cmd_copy_buffer (1 samples, 0.03%)</title><rect x="1.2908%" y="453" width="0.0340%" height="15" fill="rgb(245,73,45)" fg:x="38" fg:w="1"/><text x="1.5408%" y="463.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="1.2908%" y="437" width="0.0340%" height="15" fill="rgb(237,203,48)" fg:x="38" fg:w="1"/><text x="1.5408%" y="447.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="1.2908%" y="421" width="0.0340%" height="15" fill="rgb(211,197,16)" fg:x="38" fg:w="1"/><text x="1.5408%" y="431.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="1.2908%" y="405" width="0.0340%" height="15" fill="rgb(243,99,51)" fg:x="38" fg:w="1"/><text x="1.5408%" y="415.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="1.2908%" y="389" width="0.0340%" height="15" fill="rgb(215,123,29)" fg:x="38" fg:w="1"/><text x="1.5408%" y="399.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="1.2908%" y="373" width="0.0340%" height="15" fill="rgb(239,186,37)" fg:x="38" fg:w="1"/><text x="1.5408%" y="383.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (2 samples, 0.07%)</title><rect x="1.2908%" y="1173" width="0.0679%" height="15" fill="rgb(252,136,39)" fg:x="38" fg:w="2"/><text x="1.5408%" y="1183.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (2 samples, 0.07%)</title><rect x="1.2908%" y="1157" width="0.0679%" height="15" fill="rgb(223,213,32)" fg:x="38" fg:w="2"/><text x="1.5408%" y="1167.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.07%)</title><rect x="1.2908%" y="1141" width="0.0679%" height="15" fill="rgb(233,115,5)" fg:x="38" fg:w="2"/><text x="1.5408%" y="1151.50"></text></g><g><title>std::panicking::try (2 samples, 0.07%)</title><rect x="1.2908%" y="1125" width="0.0679%" height="15" fill="rgb(207,226,44)" fg:x="38" fg:w="2"/><text x="1.5408%" y="1135.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.07%)</title><rect x="1.2908%" y="1109" width="0.0679%" height="15" fill="rgb(208,126,0)" fg:x="38" fg:w="2"/><text x="1.5408%" y="1119.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2 samples, 0.07%)</title><rect x="1.2908%" y="1093" width="0.0679%" height="15" fill="rgb(244,66,21)" fg:x="38" fg:w="2"/><text x="1.5408%" y="1103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (2 samples, 0.07%)</title><rect x="1.2908%" y="1077" width="0.0679%" height="15" fill="rgb(222,97,12)" fg:x="38" fg:w="2"/><text x="1.5408%" y="1087.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (2 samples, 0.07%)</title><rect x="1.2908%" y="1061" width="0.0679%" height="15" fill="rgb(219,213,19)" fg:x="38" fg:w="2"/><text x="1.5408%" y="1071.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (2 samples, 0.07%)</title><rect x="1.2908%" y="1045" width="0.0679%" height="15" fill="rgb(252,169,30)" fg:x="38" fg:w="2"/><text x="1.5408%" y="1055.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.07%)</title><rect x="1.2908%" y="1029" width="0.0679%" height="15" fill="rgb(206,32,51)" fg:x="38" fg:w="2"/><text x="1.5408%" y="1039.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.07%)</title><rect x="1.2908%" y="1013" width="0.0679%" height="15" fill="rgb(250,172,42)" fg:x="38" fg:w="2"/><text x="1.5408%" y="1023.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}}::{{closure}} (2 samples, 0.07%)</title><rect x="1.2908%" y="997" width="0.0679%" height="15" fill="rgb(209,34,43)" fg:x="38" fg:w="2"/><text x="1.5408%" y="1007.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.07%)</title><rect x="1.2908%" y="981" width="0.0679%" height="15" fill="rgb(223,11,35)" fg:x="38" fg:w="2"/><text x="1.5408%" y="991.50"></text></g><g><title>std::panicking::try (2 samples, 0.07%)</title><rect x="1.2908%" y="965" width="0.0679%" height="15" fill="rgb(251,219,26)" fg:x="38" fg:w="2"/><text x="1.5408%" y="975.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.07%)</title><rect x="1.2908%" y="949" width="0.0679%" height="15" fill="rgb(231,119,3)" fg:x="38" fg:w="2"/><text x="1.5408%" y="959.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}}::{{closure}}::{{closure}} (2 samples, 0.07%)</title><rect x="1.2908%" y="933" width="0.0679%" height="15" fill="rgb(216,97,11)" fg:x="38" fg:w="2"/><text x="1.5408%" y="943.50"></text></g><g><title>futures_lite::future::block_on (2 samples, 0.07%)</title><rect x="1.2908%" y="917" width="0.0679%" height="15" fill="rgb(223,59,9)" fg:x="38" fg:w="2"/><text x="1.5408%" y="927.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.07%)</title><rect x="1.2908%" y="901" width="0.0679%" height="15" fill="rgb(233,93,31)" fg:x="38" fg:w="2"/><text x="1.5408%" y="911.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.07%)</title><rect x="1.2908%" y="885" width="0.0679%" height="15" fill="rgb(239,81,33)" fg:x="38" fg:w="2"/><text x="1.5408%" y="895.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (2 samples, 0.07%)</title><rect x="1.2908%" y="869" width="0.0679%" height="15" fill="rgb(213,120,34)" fg:x="38" fg:w="2"/><text x="1.5408%" y="879.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (2 samples, 0.07%)</title><rect x="1.2908%" y="853" width="0.0679%" height="15" fill="rgb(243,49,53)" fg:x="38" fg:w="2"/><text x="1.5408%" y="863.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (2 samples, 0.07%)</title><rect x="1.2908%" y="837" width="0.0679%" height="15" fill="rgb(247,216,33)" fg:x="38" fg:w="2"/><text x="1.5408%" y="847.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (2 samples, 0.07%)</title><rect x="1.2908%" y="821" width="0.0679%" height="15" fill="rgb(226,26,14)" fg:x="38" fg:w="2"/><text x="1.5408%" y="831.50"></text></g><g><title>async_task::runnable::Runnable&lt;M&gt;::run (2 samples, 0.07%)</title><rect x="1.2908%" y="805" width="0.0679%" height="15" fill="rgb(215,49,53)" fg:x="38" fg:w="2"/><text x="1.5408%" y="815.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::run (2 samples, 0.07%)</title><rect x="1.2908%" y="789" width="0.0679%" height="15" fill="rgb(245,162,40)" fg:x="38" fg:w="2"/><text x="1.5408%" y="799.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (2 samples, 0.07%)</title><rect x="1.2908%" y="773" width="0.0679%" height="15" fill="rgb(229,68,17)" fg:x="38" fg:w="2"/><text x="1.5408%" y="783.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::spawn_system_task::{{closure}} (2 samples, 0.07%)</title><rect x="1.2908%" y="757" width="0.0679%" height="15" fill="rgb(213,182,10)" fg:x="38" fg:w="2"/><text x="1.5408%" y="767.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.07%)</title><rect x="1.2908%" y="741" width="0.0679%" height="15" fill="rgb(245,125,30)" fg:x="38" fg:w="2"/><text x="1.5408%" y="751.50"></text></g><g><title>std::panicking::try (2 samples, 0.07%)</title><rect x="1.2908%" y="725" width="0.0679%" height="15" fill="rgb(232,202,2)" fg:x="38" fg:w="2"/><text x="1.5408%" y="735.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.07%)</title><rect x="1.2908%" y="709" width="0.0679%" height="15" fill="rgb(237,140,51)" fg:x="38" fg:w="2"/><text x="1.5408%" y="719.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2 samples, 0.07%)</title><rect x="1.2908%" y="693" width="0.0679%" height="15" fill="rgb(236,157,25)" fg:x="38" fg:w="2"/><text x="1.5408%" y="703.50"></text></g><g><title>core::ops::function::FnOnce::call_once (2 samples, 0.07%)</title><rect x="1.2908%" y="677" width="0.0679%" height="15" fill="rgb(219,209,0)" fg:x="38" fg:w="2"/><text x="1.5408%" y="687.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::spawn_system_task::{{closure}}::{{closure}} (2 samples, 0.07%)</title><rect x="1.2908%" y="661" width="0.0679%" height="15" fill="rgb(240,116,54)" fg:x="38" fg:w="2"/><text x="1.5408%" y="671.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (2 samples, 0.07%)</title><rect x="1.2908%" y="645" width="0.0679%" height="15" fill="rgb(216,10,36)" fg:x="38" fg:w="2"/><text x="1.5408%" y="655.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;fn(F0,F1,F2,F3,F4,F5,F6,F7,F8,F9) .&gt; Out&gt;&gt;::run (2 samples, 0.07%)</title><rect x="1.2908%" y="629" width="0.0679%" height="15" fill="rgb(222,72,44)" fg:x="38" fg:w="2"/><text x="1.5408%" y="639.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;fn(F0,F1,F2,F3,F4,F5,F6,F7,F8,F9) .&gt; Out&gt;&gt;::run::call_inner (2 samples, 0.07%)</title><rect x="1.2908%" y="613" width="0.0679%" height="15" fill="rgb(232,159,9)" fg:x="38" fg:w="2"/><text x="1.5408%" y="623.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2 samples, 0.07%)</title><rect x="1.2908%" y="597" width="0.0679%" height="15" fill="rgb(210,39,32)" fg:x="38" fg:w="2"/><text x="1.5408%" y="607.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2 samples, 0.07%)</title><rect x="1.2908%" y="581" width="0.0679%" height="15" fill="rgb(216,194,45)" fg:x="38" fg:w="2"/><text x="1.5408%" y="591.50"></text></g><g><title>game_render::pbr::prepare_materials (2 samples, 0.07%)</title><rect x="1.2908%" y="565" width="0.0679%" height="15" fill="rgb(218,18,35)" fg:x="38" fg:w="2"/><text x="1.5408%" y="575.50"></text></g><g><title>wgpu::Device::create_bind_group (1 samples, 0.03%)</title><rect x="1.3247%" y="549" width="0.0340%" height="15" fill="rgb(207,83,51)" fg:x="39" fg:w="1"/><text x="1.5747%" y="559.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_create_bind_group (1 samples, 0.03%)</title><rect x="1.3247%" y="533" width="0.0340%" height="15" fill="rgb(225,63,43)" fg:x="39" fg:w="1"/><text x="1.5747%" y="543.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::device_create_bind_group (1 samples, 0.03%)</title><rect x="1.3247%" y="517" width="0.0340%" height="15" fill="rgb(207,57,36)" fg:x="39" fg:w="1"/><text x="1.5747%" y="527.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_bind_group (1 samples, 0.03%)</title><rect x="1.3247%" y="501" width="0.0340%" height="15" fill="rgb(216,99,33)" fg:x="39" fg:w="1"/><text x="1.5747%" y="511.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_bind_group (1 samples, 0.03%)</title><rect x="1.3247%" y="485" width="0.0340%" height="15" fill="rgb(225,42,16)" fg:x="39" fg:w="1"/><text x="1.5747%" y="495.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_buffer_binding (1 samples, 0.03%)</title><rect x="1.3247%" y="469" width="0.0340%" height="15" fill="rgb(220,201,45)" fg:x="39" fg:w="1"/><text x="1.5747%" y="479.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (1 samples, 0.03%)</title><rect x="1.3247%" y="453" width="0.0340%" height="15" fill="rgb(225,33,4)" fg:x="39" fg:w="1"/><text x="1.5747%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.03%)</title><rect x="1.3247%" y="437" width="0.0340%" height="15" fill="rgb(224,33,50)" fg:x="39" fg:w="1"/><text x="1.5747%" y="447.50"></text></g><g><title>futures_lite::future::block_on (470 samples, 15.96%)</title><rect x="1.3587%" y="1173" width="15.9647%" height="15" fill="rgb(246,198,51)" fg:x="40" fg:w="470"/><text x="1.6087%" y="1183.50">futures_lite::future::blo..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (470 samples, 15.96%)</title><rect x="1.3587%" y="1157" width="15.9647%" height="15" fill="rgb(205,22,4)" fg:x="40" fg:w="470"/><text x="1.6087%" y="1167.50">std::thread::local::Local..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (470 samples, 15.96%)</title><rect x="1.3587%" y="1141" width="15.9647%" height="15" fill="rgb(206,3,8)" fg:x="40" fg:w="470"/><text x="1.6087%" y="1151.50">std::thread::local::Local..</text></g><g><title>futures_lite::future::block_on::{{closure}} (470 samples, 15.96%)</title><rect x="1.3587%" y="1125" width="15.9647%" height="15" fill="rgb(251,23,15)" fg:x="40" fg:w="470"/><text x="1.6087%" y="1135.50">futures_lite::future::blo..</text></g><g><title>async_executor::Executor::run::{{closure}} (470 samples, 15.96%)</title><rect x="1.3587%" y="1109" width="15.9647%" height="15" fill="rgb(252,88,28)" fg:x="40" fg:w="470"/><text x="1.6087%" y="1119.50">async_executor::Executor:..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (470 samples, 15.96%)</title><rect x="1.3587%" y="1093" width="15.9647%" height="15" fill="rgb(212,127,14)" fg:x="40" fg:w="470"/><text x="1.6087%" y="1103.50">&lt;futures_lite::future::Or..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (470 samples, 15.96%)</title><rect x="1.3587%" y="1077" width="15.9647%" height="15" fill="rgb(247,145,37)" fg:x="40" fg:w="470"/><text x="1.6087%" y="1087.50">async_executor::Executor:..</text></g><g><title>async_task::runnable::Runnable&lt;M&gt;::run (470 samples, 15.96%)</title><rect x="1.3587%" y="1061" width="15.9647%" height="15" fill="rgb(209,117,53)" fg:x="40" fg:w="470"/><text x="1.6087%" y="1071.50">async_task::runnable::Run..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::run (470 samples, 15.96%)</title><rect x="1.3587%" y="1045" width="15.9647%" height="15" fill="rgb(212,90,42)" fg:x="40" fg:w="470"/><text x="1.6087%" y="1055.50">async_task::raw::RawTask&lt;..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (470 samples, 15.96%)</title><rect x="1.3587%" y="1029" width="15.9647%" height="15" fill="rgb(218,164,37)" fg:x="40" fg:w="470"/><text x="1.6087%" y="1039.50">async_executor::Executor:..</text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::spawn_system_task::{{closure}} (470 samples, 15.96%)</title><rect x="1.3587%" y="1013" width="15.9647%" height="15" fill="rgb(246,65,34)" fg:x="40" fg:w="470"/><text x="1.6087%" y="1023.50">bevy_ecs::schedule::execu..</text></g><g><title>std::panic::catch_unwind (470 samples, 15.96%)</title><rect x="1.3587%" y="997" width="15.9647%" height="15" fill="rgb(231,100,33)" fg:x="40" fg:w="470"/><text x="1.6087%" y="1007.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (470 samples, 15.96%)</title><rect x="1.3587%" y="981" width="15.9647%" height="15" fill="rgb(228,126,14)" fg:x="40" fg:w="470"/><text x="1.6087%" y="991.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (470 samples, 15.96%)</title><rect x="1.3587%" y="965" width="15.9647%" height="15" fill="rgb(215,173,21)" fg:x="40" fg:w="470"/><text x="1.6087%" y="975.50">std::panicking::try::do_c..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (470 samples, 15.96%)</title><rect x="1.3587%" y="949" width="15.9647%" height="15" fill="rgb(210,6,40)" fg:x="40" fg:w="470"/><text x="1.6087%" y="959.50">&lt;core::panic::unwind_safe..</text></g><g><title>core::ops::function::FnOnce::call_once (470 samples, 15.96%)</title><rect x="1.3587%" y="933" width="15.9647%" height="15" fill="rgb(212,48,18)" fg:x="40" fg:w="470"/><text x="1.6087%" y="943.50">core::ops::function::FnOn..</text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::spawn_system_task::{{closure}}::{{closure}} (470 samples, 15.96%)</title><rect x="1.3587%" y="917" width="15.9647%" height="15" fill="rgb(230,214,11)" fg:x="40" fg:w="470"/><text x="1.6087%" y="927.50">bevy_ecs::schedule::execu..</text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (470 samples, 15.96%)</title><rect x="1.3587%" y="901" width="15.9647%" height="15" fill="rgb(254,105,39)" fg:x="40" fg:w="470"/><text x="1.6087%" y="911.50">&lt;bevy_ecs::system::functi..</text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;fn(F0,F1,F2,F3,F4,F5,F6,F7,F8,F9) .&gt; Out&gt;&gt;::run (470 samples, 15.96%)</title><rect x="1.3587%" y="885" width="15.9647%" height="15" fill="rgb(245,158,5)" fg:x="40" fg:w="470"/><text x="1.6087%" y="895.50">&lt;Func as bevy_ecs::system..</text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;fn(F0,F1,F2,F3,F4,F5,F6,F7,F8,F9) .&gt; Out&gt;&gt;::run::call_inner (470 samples, 15.96%)</title><rect x="1.3587%" y="869" width="15.9647%" height="15" fill="rgb(249,208,11)" fg:x="40" fg:w="470"/><text x="1.6087%" y="879.50">&lt;Func as bevy_ecs::system..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (470 samples, 15.96%)</title><rect x="1.3587%" y="853" width="15.9647%" height="15" fill="rgb(210,39,28)" fg:x="40" fg:w="470"/><text x="1.6087%" y="863.50">core::ops::function::impl..</text></g><g><title>core::ops::function::FnMut::call_mut (470 samples, 15.96%)</title><rect x="1.3587%" y="837" width="15.9647%" height="15" fill="rgb(211,56,53)" fg:x="40" fg:w="470"/><text x="1.6087%" y="847.50">core::ops::function::FnMu..</text></g><g><title>game_render::pbr::prepare_materials (470 samples, 15.96%)</title><rect x="1.3587%" y="821" width="15.9647%" height="15" fill="rgb(226,201,30)" fg:x="40" fg:w="470"/><text x="1.6087%" y="831.50">game_render::pbr::prepare..</text></g><g><title>wgpu::Queue::write_texture (470 samples, 15.96%)</title><rect x="1.3587%" y="805" width="15.9647%" height="15" fill="rgb(239,101,34)" fg:x="40" fg:w="470"/><text x="1.6087%" y="815.50">wgpu::Queue::write_texture</text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::queue_write_texture (470 samples, 15.96%)</title><rect x="1.3587%" y="789" width="15.9647%" height="15" fill="rgb(226,209,5)" fg:x="40" fg:w="470"/><text x="1.6087%" y="799.50">&lt;T as wgpu::context::DynC..</text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::queue_write_texture (470 samples, 15.96%)</title><rect x="1.3587%" y="773" width="15.9647%" height="15" fill="rgb(250,105,47)" fg:x="40" fg:w="470"/><text x="1.6087%" y="783.50">&lt;wgpu::backend::direct::C..</text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_texture (470 samples, 15.96%)</title><rect x="1.3587%" y="757" width="15.9647%" height="15" fill="rgb(230,72,3)" fg:x="40" fg:w="470"/><text x="1.6087%" y="767.50">wgpu_core::device::queue:..</text></g><g><title>core::intrinsics::copy_nonoverlapping (470 samples, 15.96%)</title><rect x="1.3587%" y="741" width="15.9647%" height="15" fill="rgb(232,218,39)" fg:x="40" fg:w="470"/><text x="1.6087%" y="751.50">core::intrinsics::copy_no..</text></g><g><title>[libc.so.6] (470 samples, 15.96%)</title><rect x="1.3587%" y="725" width="15.9647%" height="15" fill="rgb(248,166,6)" fg:x="40" fg:w="470"/><text x="1.6087%" y="735.50">[libc.so.6]</text></g><g><title>[unknown] (36 samples, 1.22%)</title><rect x="16.1005%" y="709" width="1.2228%" height="15" fill="rgb(247,89,20)" fg:x="474" fg:w="36"/><text x="16.3505%" y="719.50"></text></g><g><title>[unknown] (19 samples, 0.65%)</title><rect x="16.6780%" y="693" width="0.6454%" height="15" fill="rgb(248,130,54)" fg:x="491" fg:w="19"/><text x="16.9280%" y="703.50"></text></g><g><title>[unknown] (17 samples, 0.58%)</title><rect x="16.7459%" y="677" width="0.5774%" height="15" fill="rgb(234,196,4)" fg:x="493" fg:w="17"/><text x="16.9959%" y="687.50"></text></g><g><title>[unknown] (17 samples, 0.58%)</title><rect x="16.7459%" y="661" width="0.5774%" height="15" fill="rgb(250,143,31)" fg:x="493" fg:w="17"/><text x="16.9959%" y="671.50"></text></g><g><title>[unknown] (16 samples, 0.54%)</title><rect x="16.7799%" y="645" width="0.5435%" height="15" fill="rgb(211,110,34)" fg:x="494" fg:w="16"/><text x="17.0299%" y="655.50"></text></g><g><title>[unknown] (13 samples, 0.44%)</title><rect x="16.8818%" y="629" width="0.4416%" height="15" fill="rgb(215,124,48)" fg:x="497" fg:w="13"/><text x="17.1318%" y="639.50"></text></g><g><title>[unknown] (9 samples, 0.31%)</title><rect x="17.0177%" y="613" width="0.3057%" height="15" fill="rgb(216,46,13)" fg:x="501" fg:w="9"/><text x="17.2677%" y="623.50"></text></g><g><title>[unknown] (8 samples, 0.27%)</title><rect x="17.0516%" y="597" width="0.2717%" height="15" fill="rgb(205,184,25)" fg:x="502" fg:w="8"/><text x="17.3016%" y="607.50"></text></g><g><title>[unknown] (8 samples, 0.27%)</title><rect x="17.0516%" y="581" width="0.2717%" height="15" fill="rgb(228,1,10)" fg:x="502" fg:w="8"/><text x="17.3016%" y="591.50"></text></g><g><title>[unknown] (8 samples, 0.27%)</title><rect x="17.0516%" y="565" width="0.2717%" height="15" fill="rgb(213,116,27)" fg:x="502" fg:w="8"/><text x="17.3016%" y="575.50"></text></g><g><title>[unknown] (6 samples, 0.20%)</title><rect x="17.1196%" y="549" width="0.2038%" height="15" fill="rgb(241,95,50)" fg:x="504" fg:w="6"/><text x="17.3696%" y="559.50"></text></g><g><title>[unknown] (6 samples, 0.20%)</title><rect x="17.1196%" y="533" width="0.2038%" height="15" fill="rgb(238,48,32)" fg:x="504" fg:w="6"/><text x="17.3696%" y="543.50"></text></g><g><title>[unknown] (4 samples, 0.14%)</title><rect x="17.1875%" y="517" width="0.1359%" height="15" fill="rgb(235,113,49)" fg:x="506" fg:w="4"/><text x="17.4375%" y="527.50"></text></g><g><title>[unknown] (4 samples, 0.14%)</title><rect x="17.1875%" y="501" width="0.1359%" height="15" fill="rgb(205,127,43)" fg:x="506" fg:w="4"/><text x="17.4375%" y="511.50"></text></g><g><title>[unknown] (4 samples, 0.14%)</title><rect x="17.1875%" y="485" width="0.1359%" height="15" fill="rgb(250,162,2)" fg:x="506" fg:w="4"/><text x="17.4375%" y="495.50"></text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (2 samples, 0.07%)</title><rect x="17.3234%" y="661" width="0.0679%" height="15" fill="rgb(220,13,41)" fg:x="510" fg:w="2"/><text x="17.5734%" y="671.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::buffer_unmap (2 samples, 0.07%)</title><rect x="17.3234%" y="645" width="0.0679%" height="15" fill="rgb(249,221,25)" fg:x="510" fg:w="2"/><text x="17.5734%" y="655.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::buffer_unmap (2 samples, 0.07%)</title><rect x="17.3234%" y="629" width="0.0679%" height="15" fill="rgb(215,208,19)" fg:x="510" fg:w="2"/><text x="17.5734%" y="639.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_unmap (2 samples, 0.07%)</title><rect x="17.3234%" y="613" width="0.0679%" height="15" fill="rgb(236,175,2)" fg:x="510" fg:w="2"/><text x="17.5734%" y="623.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_unmap_inner (2 samples, 0.07%)</title><rect x="17.3234%" y="597" width="0.0679%" height="15" fill="rgb(241,52,2)" fg:x="510" fg:w="2"/><text x="17.5734%" y="607.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::transition_buffers (2 samples, 0.07%)</title><rect x="17.3234%" y="581" width="0.0679%" height="15" fill="rgb(248,140,14)" fg:x="510" fg:w="2"/><text x="17.5734%" y="591.50"></text></g><g><title>ash::device::Device::cmd_pipeline_barrier (2 samples, 0.07%)</title><rect x="17.3234%" y="565" width="0.0679%" height="15" fill="rgb(253,22,42)" fg:x="510" fg:w="2"/><text x="17.5734%" y="575.50"></text></g><g><title>[libvulkan_radeon.so] (2 samples, 0.07%)</title><rect x="17.3234%" y="549" width="0.0679%" height="15" fill="rgb(234,61,47)" fg:x="510" fg:w="2"/><text x="17.5734%" y="559.50"></text></g><g><title>[libvulkan_radeon.so] (2 samples, 0.07%)</title><rect x="17.3234%" y="533" width="0.0679%" height="15" fill="rgb(208,226,15)" fg:x="510" fg:w="2"/><text x="17.5734%" y="543.50"></text></g><g><title>TaskPool_(24) (495 samples, 16.81%)</title><rect x="0.6114%" y="1205" width="16.8139%" height="15" fill="rgb(217,221,4)" fg:x="18" fg:w="495"/><text x="0.8614%" y="1215.50">TaskPool_(24)</text></g><g><title>[unknown] (479 samples, 16.27%)</title><rect x="1.1549%" y="1189" width="16.2704%" height="15" fill="rgb(212,174,34)" fg:x="34" fg:w="479"/><text x="1.4049%" y="1199.50">[unknown]</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (3 samples, 0.10%)</title><rect x="17.3234%" y="1173" width="0.1019%" height="15" fill="rgb(253,83,4)" fg:x="510" fg:w="3"/><text x="17.5734%" y="1183.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (3 samples, 0.10%)</title><rect x="17.3234%" y="1157" width="0.1019%" height="15" fill="rgb(250,195,49)" fg:x="510" fg:w="3"/><text x="17.5734%" y="1167.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3 samples, 0.10%)</title><rect x="17.3234%" y="1141" width="0.1019%" height="15" fill="rgb(241,192,25)" fg:x="510" fg:w="3"/><text x="17.5734%" y="1151.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3 samples, 0.10%)</title><rect x="17.3234%" y="1125" width="0.1019%" height="15" fill="rgb(208,124,10)" fg:x="510" fg:w="3"/><text x="17.5734%" y="1135.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}}::{{closure}} (3 samples, 0.10%)</title><rect x="17.3234%" y="1109" width="0.1019%" height="15" fill="rgb(222,33,0)" fg:x="510" fg:w="3"/><text x="17.5734%" y="1119.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 0.10%)</title><rect x="17.3234%" y="1093" width="0.1019%" height="15" fill="rgb(234,209,28)" fg:x="510" fg:w="3"/><text x="17.5734%" y="1103.50"></text></g><g><title>std::panicking::try (3 samples, 0.10%)</title><rect x="17.3234%" y="1077" width="0.1019%" height="15" fill="rgb(224,11,23)" fg:x="510" fg:w="3"/><text x="17.5734%" y="1087.50"></text></g><g><title>std::panicking::try::do_call (3 samples, 0.10%)</title><rect x="17.3234%" y="1061" width="0.1019%" height="15" fill="rgb(232,99,1)" fg:x="510" fg:w="3"/><text x="17.5734%" y="1071.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}}::{{closure}}::{{closure}} (3 samples, 0.10%)</title><rect x="17.3234%" y="1045" width="0.1019%" height="15" fill="rgb(237,95,45)" fg:x="510" fg:w="3"/><text x="17.5734%" y="1055.50"></text></g><g><title>futures_lite::future::block_on (3 samples, 0.10%)</title><rect x="17.3234%" y="1029" width="0.1019%" height="15" fill="rgb(208,109,11)" fg:x="510" fg:w="3"/><text x="17.5734%" y="1039.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3 samples, 0.10%)</title><rect x="17.3234%" y="1013" width="0.1019%" height="15" fill="rgb(216,190,48)" fg:x="510" fg:w="3"/><text x="17.5734%" y="1023.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3 samples, 0.10%)</title><rect x="17.3234%" y="997" width="0.1019%" height="15" fill="rgb(251,171,36)" fg:x="510" fg:w="3"/><text x="17.5734%" y="1007.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (3 samples, 0.10%)</title><rect x="17.3234%" y="981" width="0.1019%" height="15" fill="rgb(230,62,22)" fg:x="510" fg:w="3"/><text x="17.5734%" y="991.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (3 samples, 0.10%)</title><rect x="17.3234%" y="965" width="0.1019%" height="15" fill="rgb(225,114,35)" fg:x="510" fg:w="3"/><text x="17.5734%" y="975.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (3 samples, 0.10%)</title><rect x="17.3234%" y="949" width="0.1019%" height="15" fill="rgb(215,118,42)" fg:x="510" fg:w="3"/><text x="17.5734%" y="959.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (3 samples, 0.10%)</title><rect x="17.3234%" y="933" width="0.1019%" height="15" fill="rgb(243,119,21)" fg:x="510" fg:w="3"/><text x="17.5734%" y="943.50"></text></g><g><title>async_task::runnable::Runnable&lt;M&gt;::run (3 samples, 0.10%)</title><rect x="17.3234%" y="917" width="0.1019%" height="15" fill="rgb(252,177,53)" fg:x="510" fg:w="3"/><text x="17.5734%" y="927.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::run (3 samples, 0.10%)</title><rect x="17.3234%" y="901" width="0.1019%" height="15" fill="rgb(237,209,29)" fg:x="510" fg:w="3"/><text x="17.5734%" y="911.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (3 samples, 0.10%)</title><rect x="17.3234%" y="885" width="0.1019%" height="15" fill="rgb(212,65,23)" fg:x="510" fg:w="3"/><text x="17.5734%" y="895.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::spawn_system_task::{{closure}} (3 samples, 0.10%)</title><rect x="17.3234%" y="869" width="0.1019%" height="15" fill="rgb(230,222,46)" fg:x="510" fg:w="3"/><text x="17.5734%" y="879.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 0.10%)</title><rect x="17.3234%" y="853" width="0.1019%" height="15" fill="rgb(215,135,32)" fg:x="510" fg:w="3"/><text x="17.5734%" y="863.50"></text></g><g><title>std::panicking::try (3 samples, 0.10%)</title><rect x="17.3234%" y="837" width="0.1019%" height="15" fill="rgb(246,101,22)" fg:x="510" fg:w="3"/><text x="17.5734%" y="847.50"></text></g><g><title>std::panicking::try::do_call (3 samples, 0.10%)</title><rect x="17.3234%" y="821" width="0.1019%" height="15" fill="rgb(206,107,13)" fg:x="510" fg:w="3"/><text x="17.5734%" y="831.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3 samples, 0.10%)</title><rect x="17.3234%" y="805" width="0.1019%" height="15" fill="rgb(250,100,44)" fg:x="510" fg:w="3"/><text x="17.5734%" y="815.50"></text></g><g><title>core::ops::function::FnOnce::call_once (3 samples, 0.10%)</title><rect x="17.3234%" y="789" width="0.1019%" height="15" fill="rgb(231,147,38)" fg:x="510" fg:w="3"/><text x="17.5734%" y="799.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::spawn_system_task::{{closure}}::{{closure}} (3 samples, 0.10%)</title><rect x="17.3234%" y="773" width="0.1019%" height="15" fill="rgb(229,8,40)" fg:x="510" fg:w="3"/><text x="17.5734%" y="783.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (3 samples, 0.10%)</title><rect x="17.3234%" y="757" width="0.1019%" height="15" fill="rgb(221,135,30)" fg:x="510" fg:w="3"/><text x="17.5734%" y="767.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;fn(F0,F1,F2,F3,F4,F5,F6,F7,F8,F9) .&gt; Out&gt;&gt;::run (3 samples, 0.10%)</title><rect x="17.3234%" y="741" width="0.1019%" height="15" fill="rgb(249,193,18)" fg:x="510" fg:w="3"/><text x="17.5734%" y="751.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;fn(F0,F1,F2,F3,F4,F5,F6,F7,F8,F9) .&gt; Out&gt;&gt;::run::call_inner (3 samples, 0.10%)</title><rect x="17.3234%" y="725" width="0.1019%" height="15" fill="rgb(209,133,39)" fg:x="510" fg:w="3"/><text x="17.5734%" y="735.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (3 samples, 0.10%)</title><rect x="17.3234%" y="709" width="0.1019%" height="15" fill="rgb(232,100,14)" fg:x="510" fg:w="3"/><text x="17.5734%" y="719.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3 samples, 0.10%)</title><rect x="17.3234%" y="693" width="0.1019%" height="15" fill="rgb(224,185,1)" fg:x="510" fg:w="3"/><text x="17.5734%" y="703.50"></text></g><g><title>game_render::pbr::prepare_materials (3 samples, 0.10%)</title><rect x="17.3234%" y="677" width="0.1019%" height="15" fill="rgb(223,139,8)" fg:x="510" fg:w="3"/><text x="17.5734%" y="687.50"></text></g><g><title>wgpu::Device::create_bind_group (1 samples, 0.03%)</title><rect x="17.3913%" y="661" width="0.0340%" height="15" fill="rgb(232,213,38)" fg:x="512" fg:w="1"/><text x="17.6413%" y="671.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_create_bind_group (1 samples, 0.03%)</title><rect x="17.3913%" y="645" width="0.0340%" height="15" fill="rgb(207,94,22)" fg:x="512" fg:w="1"/><text x="17.6413%" y="655.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::device_create_bind_group (1 samples, 0.03%)</title><rect x="17.3913%" y="629" width="0.0340%" height="15" fill="rgb(219,183,54)" fg:x="512" fg:w="1"/><text x="17.6413%" y="639.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_bind_group (1 samples, 0.03%)</title><rect x="17.3913%" y="613" width="0.0340%" height="15" fill="rgb(216,185,54)" fg:x="512" fg:w="1"/><text x="17.6413%" y="623.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_bind_group (1 samples, 0.03%)</title><rect x="17.3913%" y="597" width="0.0340%" height="15" fill="rgb(254,217,39)" fg:x="512" fg:w="1"/><text x="17.6413%" y="607.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_buffer_binding (1 samples, 0.03%)</title><rect x="17.3913%" y="581" width="0.0340%" height="15" fill="rgb(240,178,23)" fg:x="512" fg:w="1"/><text x="17.6413%" y="591.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (1 samples, 0.03%)</title><rect x="17.3913%" y="565" width="0.0340%" height="15" fill="rgb(218,11,47)" fg:x="512" fg:w="1"/><text x="17.6413%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.03%)</title><rect x="17.3913%" y="549" width="0.0340%" height="15" fill="rgb(218,51,51)" fg:x="512" fg:w="1"/><text x="17.6413%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.03%)</title><rect x="17.3913%" y="533" width="0.0340%" height="15" fill="rgb(238,126,27)" fg:x="512" fg:w="1"/><text x="17.6413%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.03%)</title><rect x="17.3913%" y="517" width="0.0340%" height="15" fill="rgb(249,202,22)" fg:x="512" fg:w="1"/><text x="17.6413%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.03%)</title><rect x="17.3913%" y="501" width="0.0340%" height="15" fill="rgb(254,195,49)" fg:x="512" fg:w="1"/><text x="17.6413%" y="511.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (1 samples, 0.03%)</title><rect x="17.3913%" y="485" width="0.0340%" height="15" fill="rgb(208,123,14)" fg:x="512" fg:w="1"/><text x="17.6413%" y="495.50"></text></g><g><title>TaskPool_(25) (1 samples, 0.03%)</title><rect x="17.4253%" y="1205" width="0.0340%" height="15" fill="rgb(224,200,8)" fg:x="513" fg:w="1"/><text x="17.6753%" y="1215.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="17.4253%" y="1189" width="0.0340%" height="15" fill="rgb(217,61,36)" fg:x="513" fg:w="1"/><text x="17.6753%" y="1199.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="17.4253%" y="1173" width="0.0340%" height="15" fill="rgb(206,35,45)" fg:x="513" fg:w="1"/><text x="17.6753%" y="1183.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1 samples, 0.03%)</title><rect x="17.4253%" y="1157" width="0.0340%" height="15" fill="rgb(217,65,33)" fg:x="513" fg:w="1"/><text x="17.6753%" y="1167.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.03%)</title><rect x="17.4253%" y="1141" width="0.0340%" height="15" fill="rgb(222,158,48)" fg:x="513" fg:w="1"/><text x="17.6753%" y="1151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.03%)</title><rect x="17.4253%" y="1125" width="0.0340%" height="15" fill="rgb(254,2,54)" fg:x="513" fg:w="1"/><text x="17.6753%" y="1135.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.03%)</title><rect x="17.4253%" y="1109" width="0.0340%" height="15" fill="rgb(250,143,38)" fg:x="513" fg:w="1"/><text x="17.6753%" y="1119.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (1 samples, 0.03%)</title><rect x="17.4253%" y="1093" width="0.0340%" height="15" fill="rgb(248,25,0)" fg:x="513" fg:w="1"/><text x="17.6753%" y="1103.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.03%)</title><rect x="17.4253%" y="1077" width="0.0340%" height="15" fill="rgb(206,152,27)" fg:x="513" fg:w="1"/><text x="17.6753%" y="1087.50"></text></g><g><title>std::panicking::try (1 samples, 0.03%)</title><rect x="17.4253%" y="1061" width="0.0340%" height="15" fill="rgb(240,77,30)" fg:x="513" fg:w="1"/><text x="17.6753%" y="1071.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.03%)</title><rect x="17.4253%" y="1045" width="0.0340%" height="15" fill="rgb(231,5,3)" fg:x="513" fg:w="1"/><text x="17.6753%" y="1055.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.03%)</title><rect x="17.4253%" y="1029" width="0.0340%" height="15" fill="rgb(207,226,32)" fg:x="513" fg:w="1"/><text x="17.6753%" y="1039.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="17.4253%" y="1013" width="0.0340%" height="15" fill="rgb(222,207,47)" fg:x="513" fg:w="1"/><text x="17.6753%" y="1023.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.03%)</title><rect x="17.4253%" y="997" width="0.0340%" height="15" fill="rgb(229,115,45)" fg:x="513" fg:w="1"/><text x="17.6753%" y="1007.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="17.4253%" y="981" width="0.0340%" height="15" fill="rgb(224,191,6)" fg:x="513" fg:w="1"/><text x="17.6753%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.03%)</title><rect x="17.4253%" y="965" width="0.0340%" height="15" fill="rgb(230,227,24)" fg:x="513" fg:w="1"/><text x="17.6753%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.03%)</title><rect x="17.4253%" y="949" width="0.0340%" height="15" fill="rgb(228,80,19)" fg:x="513" fg:w="1"/><text x="17.6753%" y="959.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="17.4253%" y="933" width="0.0340%" height="15" fill="rgb(247,229,0)" fg:x="513" fg:w="1"/><text x="17.6753%" y="943.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.03%)</title><rect x="17.4253%" y="917" width="0.0340%" height="15" fill="rgb(237,194,15)" fg:x="513" fg:w="1"/><text x="17.6753%" y="927.50"></text></g><g><title>std::panicking::try (1 samples, 0.03%)</title><rect x="17.4253%" y="901" width="0.0340%" height="15" fill="rgb(219,203,20)" fg:x="513" fg:w="1"/><text x="17.6753%" y="911.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.03%)</title><rect x="17.4253%" y="885" width="0.0340%" height="15" fill="rgb(234,128,8)" fg:x="513" fg:w="1"/><text x="17.6753%" y="895.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="17.4253%" y="869" width="0.0340%" height="15" fill="rgb(248,202,8)" fg:x="513" fg:w="1"/><text x="17.6753%" y="879.50"></text></g><g><title>futures_lite::future::block_on (1 samples, 0.03%)</title><rect x="17.4253%" y="853" width="0.0340%" height="15" fill="rgb(206,104,37)" fg:x="513" fg:w="1"/><text x="17.6753%" y="863.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.03%)</title><rect x="17.4253%" y="837" width="0.0340%" height="15" fill="rgb(223,8,27)" fg:x="513" fg:w="1"/><text x="17.6753%" y="847.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.03%)</title><rect x="17.4253%" y="821" width="0.0340%" height="15" fill="rgb(216,217,28)" fg:x="513" fg:w="1"/><text x="17.6753%" y="831.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (1 samples, 0.03%)</title><rect x="17.4253%" y="805" width="0.0340%" height="15" fill="rgb(249,199,1)" fg:x="513" fg:w="1"/><text x="17.6753%" y="815.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (1 samples, 0.03%)</title><rect x="17.4253%" y="789" width="0.0340%" height="15" fill="rgb(240,85,17)" fg:x="513" fg:w="1"/><text x="17.6753%" y="799.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (1 samples, 0.03%)</title><rect x="17.4253%" y="773" width="0.0340%" height="15" fill="rgb(206,108,45)" fg:x="513" fg:w="1"/><text x="17.6753%" y="783.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (1 samples, 0.03%)</title><rect x="17.4253%" y="757" width="0.0340%" height="15" fill="rgb(245,210,41)" fg:x="513" fg:w="1"/><text x="17.6753%" y="767.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}}::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="17.4253%" y="741" width="0.0340%" height="15" fill="rgb(206,13,37)" fg:x="513" fg:w="1"/><text x="17.6753%" y="751.50"></text></g><g><title>async_executor::LocalExecutor::tick::{{closure}} (1 samples, 0.03%)</title><rect x="17.4253%" y="725" width="0.0340%" height="15" fill="rgb(250,61,18)" fg:x="513" fg:w="1"/><text x="17.6753%" y="735.50"></text></g><g><title>async_executor::Executor::tick::{{closure}} (1 samples, 0.03%)</title><rect x="17.4253%" y="709" width="0.0340%" height="15" fill="rgb(235,172,48)" fg:x="513" fg:w="1"/><text x="17.6753%" y="719.50"></text></g><g><title>async_lock::once_cell::OnceCell&lt;T&gt;::get_or_try_init_blocking (1 samples, 0.03%)</title><rect x="17.4253%" y="693" width="0.0340%" height="15" fill="rgb(249,201,17)" fg:x="513" fg:w="1"/><text x="17.6753%" y="703.50"></text></g><g><title>async_lock::once_cell::now_or_never (1 samples, 0.03%)</title><rect x="17.4253%" y="677" width="0.0340%" height="15" fill="rgb(219,208,6)" fg:x="513" fg:w="1"/><text x="17.6753%" y="687.50"></text></g><g><title>async_lock::once_cell::OnceCell&lt;T&gt;::initialize_or_wait::{{closure}} (1 samples, 0.03%)</title><rect x="17.4253%" y="661" width="0.0340%" height="15" fill="rgb(248,31,23)" fg:x="513" fg:w="1"/><text x="17.6753%" y="671.50"></text></g><g><title>async_lock::once_cell::OnceCell&lt;T&gt;::get_or_try_init_blocking::{{closure}} (1 samples, 0.03%)</title><rect x="17.4253%" y="645" width="0.0340%" height="15" fill="rgb(245,15,42)" fg:x="513" fg:w="1"/><text x="17.6753%" y="655.50"></text></g><g><title>async_lock::once_cell::OnceCell&lt;T&gt;::get_or_init_blocking::{{closure}} (1 samples, 0.03%)</title><rect x="17.4253%" y="629" width="0.0340%" height="15" fill="rgb(222,217,39)" fg:x="513" fg:w="1"/><text x="17.6753%" y="639.50"></text></g><g><title>async_executor::Executor::state::{{closure}} (1 samples, 0.03%)</title><rect x="17.4253%" y="613" width="0.0340%" height="15" fill="rgb(210,219,27)" fg:x="513" fg:w="1"/><text x="17.6753%" y="623.50"></text></g><g><title>async_executor::State::new (1 samples, 0.03%)</title><rect x="17.4253%" y="597" width="0.0340%" height="15" fill="rgb(252,166,36)" fg:x="513" fg:w="1"/><text x="17.6753%" y="607.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::unbounded (1 samples, 0.03%)</title><rect x="17.4253%" y="581" width="0.0340%" height="15" fill="rgb(245,132,34)" fg:x="513" fg:w="1"/><text x="17.6753%" y="591.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="17.4253%" y="565" width="0.0340%" height="15" fill="rgb(236,54,3)" fg:x="513" fg:w="1"/><text x="17.6753%" y="575.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.03%)</title><rect x="17.4253%" y="549" width="0.0340%" height="15" fill="rgb(241,173,43)" fg:x="513" fg:w="1"/><text x="17.6753%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.03%)</title><rect x="17.4253%" y="533" width="0.0340%" height="15" fill="rgb(215,190,9)" fg:x="513" fg:w="1"/><text x="17.6753%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.03%)</title><rect x="17.4253%" y="517" width="0.0340%" height="15" fill="rgb(242,101,16)" fg:x="513" fg:w="1"/><text x="17.6753%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.03%)</title><rect x="17.4253%" y="501" width="0.0340%" height="15" fill="rgb(223,190,21)" fg:x="513" fg:w="1"/><text x="17.6753%" y="511.50"></text></g><g><title>__rdl_alloc (1 samples, 0.03%)</title><rect x="17.4253%" y="485" width="0.0340%" height="15" fill="rgb(215,228,25)" fg:x="513" fg:w="1"/><text x="17.6753%" y="495.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.03%)</title><rect x="17.4253%" y="469" width="0.0340%" height="15" fill="rgb(225,36,22)" fg:x="513" fg:w="1"/><text x="17.6753%" y="479.50"></text></g><g><title>std::sys::unix::alloc::aligned_malloc (1 samples, 0.03%)</title><rect x="17.4253%" y="453" width="0.0340%" height="15" fill="rgb(251,106,46)" fg:x="513" fg:w="1"/><text x="17.6753%" y="463.50"></text></g><g><title>posix_memalign (1 samples, 0.03%)</title><rect x="17.4253%" y="437" width="0.0340%" height="15" fill="rgb(208,90,1)" fg:x="513" fg:w="1"/><text x="17.6753%" y="447.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="17.4253%" y="421" width="0.0340%" height="15" fill="rgb(243,10,4)" fg:x="513" fg:w="1"/><text x="17.6753%" y="431.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="17.4253%" y="405" width="0.0340%" height="15" fill="rgb(212,137,27)" fg:x="513" fg:w="1"/><text x="17.6753%" y="415.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="17.4253%" y="389" width="0.0340%" height="15" fill="rgb(231,220,49)" fg:x="513" fg:w="1"/><text x="17.6753%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="17.4253%" y="373" width="0.0340%" height="15" fill="rgb(237,96,20)" fg:x="513" fg:w="1"/><text x="17.6753%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="17.4253%" y="357" width="0.0340%" height="15" fill="rgb(239,229,30)" fg:x="513" fg:w="1"/><text x="17.6753%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="17.4253%" y="341" width="0.0340%" height="15" fill="rgb(219,65,33)" fg:x="513" fg:w="1"/><text x="17.6753%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="17.4253%" y="325" width="0.0340%" height="15" fill="rgb(243,134,7)" fg:x="513" fg:w="1"/><text x="17.6753%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="17.4253%" y="309" width="0.0340%" height="15" fill="rgb(216,177,54)" fg:x="513" fg:w="1"/><text x="17.6753%" y="319.50"></text></g><g><title>TaskPool_(26) (1 samples, 0.03%)</title><rect x="17.4592%" y="1205" width="0.0340%" height="15" fill="rgb(211,160,20)" fg:x="514" fg:w="1"/><text x="17.7092%" y="1215.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="17.4592%" y="1189" width="0.0340%" height="15" fill="rgb(239,85,39)" fg:x="514" fg:w="1"/><text x="17.7092%" y="1199.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="17.4592%" y="1173" width="0.0340%" height="15" fill="rgb(232,125,22)" fg:x="514" fg:w="1"/><text x="17.7092%" y="1183.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1 samples, 0.03%)</title><rect x="17.4592%" y="1157" width="0.0340%" height="15" fill="rgb(244,57,34)" fg:x="514" fg:w="1"/><text x="17.7092%" y="1167.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.03%)</title><rect x="17.4592%" y="1141" width="0.0340%" height="15" fill="rgb(214,203,32)" fg:x="514" fg:w="1"/><text x="17.7092%" y="1151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.03%)</title><rect x="17.4592%" y="1125" width="0.0340%" height="15" fill="rgb(207,58,43)" fg:x="514" fg:w="1"/><text x="17.7092%" y="1135.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.03%)</title><rect x="17.4592%" y="1109" width="0.0340%" height="15" fill="rgb(215,193,15)" fg:x="514" fg:w="1"/><text x="17.7092%" y="1119.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (1 samples, 0.03%)</title><rect x="17.4592%" y="1093" width="0.0340%" height="15" fill="rgb(232,15,44)" fg:x="514" fg:w="1"/><text x="17.7092%" y="1103.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.03%)</title><rect x="17.4592%" y="1077" width="0.0340%" height="15" fill="rgb(212,3,48)" fg:x="514" fg:w="1"/><text x="17.7092%" y="1087.50"></text></g><g><title>std::panicking::try (1 samples, 0.03%)</title><rect x="17.4592%" y="1061" width="0.0340%" height="15" fill="rgb(218,128,7)" fg:x="514" fg:w="1"/><text x="17.7092%" y="1071.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.03%)</title><rect x="17.4592%" y="1045" width="0.0340%" height="15" fill="rgb(226,216,39)" fg:x="514" fg:w="1"/><text x="17.7092%" y="1055.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.03%)</title><rect x="17.4592%" y="1029" width="0.0340%" height="15" fill="rgb(243,47,51)" fg:x="514" fg:w="1"/><text x="17.7092%" y="1039.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="17.4592%" y="1013" width="0.0340%" height="15" fill="rgb(241,183,40)" fg:x="514" fg:w="1"/><text x="17.7092%" y="1023.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.03%)</title><rect x="17.4592%" y="997" width="0.0340%" height="15" fill="rgb(231,217,32)" fg:x="514" fg:w="1"/><text x="17.7092%" y="1007.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="17.4592%" y="981" width="0.0340%" height="15" fill="rgb(229,61,38)" fg:x="514" fg:w="1"/><text x="17.7092%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.03%)</title><rect x="17.4592%" y="965" width="0.0340%" height="15" fill="rgb(225,210,5)" fg:x="514" fg:w="1"/><text x="17.7092%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.03%)</title><rect x="17.4592%" y="949" width="0.0340%" height="15" fill="rgb(231,79,45)" fg:x="514" fg:w="1"/><text x="17.7092%" y="959.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="17.4592%" y="933" width="0.0340%" height="15" fill="rgb(224,100,7)" fg:x="514" fg:w="1"/><text x="17.7092%" y="943.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.03%)</title><rect x="17.4592%" y="917" width="0.0340%" height="15" fill="rgb(241,198,18)" fg:x="514" fg:w="1"/><text x="17.7092%" y="927.50"></text></g><g><title>std::panicking::try (1 samples, 0.03%)</title><rect x="17.4592%" y="901" width="0.0340%" height="15" fill="rgb(252,97,53)" fg:x="514" fg:w="1"/><text x="17.7092%" y="911.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.03%)</title><rect x="17.4592%" y="885" width="0.0340%" height="15" fill="rgb(220,88,7)" fg:x="514" fg:w="1"/><text x="17.7092%" y="895.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="17.4592%" y="869" width="0.0340%" height="15" fill="rgb(213,176,14)" fg:x="514" fg:w="1"/><text x="17.7092%" y="879.50"></text></g><g><title>futures_lite::future::block_on (1 samples, 0.03%)</title><rect x="17.4592%" y="853" width="0.0340%" height="15" fill="rgb(246,73,7)" fg:x="514" fg:w="1"/><text x="17.7092%" y="863.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.03%)</title><rect x="17.4592%" y="837" width="0.0340%" height="15" fill="rgb(245,64,36)" fg:x="514" fg:w="1"/><text x="17.7092%" y="847.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.03%)</title><rect x="17.4592%" y="821" width="0.0340%" height="15" fill="rgb(245,80,10)" fg:x="514" fg:w="1"/><text x="17.7092%" y="831.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (1 samples, 0.03%)</title><rect x="17.4592%" y="805" width="0.0340%" height="15" fill="rgb(232,107,50)" fg:x="514" fg:w="1"/><text x="17.7092%" y="815.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (1 samples, 0.03%)</title><rect x="17.4592%" y="789" width="0.0340%" height="15" fill="rgb(253,3,0)" fg:x="514" fg:w="1"/><text x="17.7092%" y="799.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (1 samples, 0.03%)</title><rect x="17.4592%" y="773" width="0.0340%" height="15" fill="rgb(212,99,53)" fg:x="514" fg:w="1"/><text x="17.7092%" y="783.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (1 samples, 0.03%)</title><rect x="17.4592%" y="757" width="0.0340%" height="15" fill="rgb(249,111,54)" fg:x="514" fg:w="1"/><text x="17.7092%" y="767.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}}::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="17.4592%" y="741" width="0.0340%" height="15" fill="rgb(249,55,30)" fg:x="514" fg:w="1"/><text x="17.7092%" y="751.50"></text></g><g><title>async_executor::LocalExecutor::tick::{{closure}} (1 samples, 0.03%)</title><rect x="17.4592%" y="725" width="0.0340%" height="15" fill="rgb(237,47,42)" fg:x="514" fg:w="1"/><text x="17.7092%" y="735.50"></text></g><g><title>async_executor::Executor::tick::{{closure}} (1 samples, 0.03%)</title><rect x="17.4592%" y="709" width="0.0340%" height="15" fill="rgb(211,20,18)" fg:x="514" fg:w="1"/><text x="17.7092%" y="719.50"></text></g><g><title>async_lock::once_cell::OnceCell&lt;T&gt;::get_or_try_init_blocking (1 samples, 0.03%)</title><rect x="17.4592%" y="693" width="0.0340%" height="15" fill="rgb(231,203,46)" fg:x="514" fg:w="1"/><text x="17.7092%" y="703.50"></text></g><g><title>async_lock::once_cell::now_or_never (1 samples, 0.03%)</title><rect x="17.4592%" y="677" width="0.0340%" height="15" fill="rgb(237,142,3)" fg:x="514" fg:w="1"/><text x="17.7092%" y="687.50"></text></g><g><title>async_lock::once_cell::OnceCell&lt;T&gt;::initialize_or_wait::{{closure}} (1 samples, 0.03%)</title><rect x="17.4592%" y="661" width="0.0340%" height="15" fill="rgb(241,107,1)" fg:x="514" fg:w="1"/><text x="17.7092%" y="671.50"></text></g><g><title>async_lock::once_cell::OnceCell&lt;T&gt;::get_or_try_init_blocking::{{closure}} (1 samples, 0.03%)</title><rect x="17.4592%" y="645" width="0.0340%" height="15" fill="rgb(229,83,13)" fg:x="514" fg:w="1"/><text x="17.7092%" y="655.50"></text></g><g><title>async_lock::once_cell::OnceCell&lt;T&gt;::get_or_init_blocking::{{closure}} (1 samples, 0.03%)</title><rect x="17.4592%" y="629" width="0.0340%" height="15" fill="rgb(241,91,40)" fg:x="514" fg:w="1"/><text x="17.7092%" y="639.50"></text></g><g><title>async_executor::Executor::state::{{closure}} (1 samples, 0.03%)</title><rect x="17.4592%" y="613" width="0.0340%" height="15" fill="rgb(225,3,45)" fg:x="514" fg:w="1"/><text x="17.7092%" y="623.50"></text></g><g><title>async_executor::State::new (1 samples, 0.03%)</title><rect x="17.4592%" y="597" width="0.0340%" height="15" fill="rgb(244,223,14)" fg:x="514" fg:w="1"/><text x="17.7092%" y="607.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::unbounded (1 samples, 0.03%)</title><rect x="17.4592%" y="581" width="0.0340%" height="15" fill="rgb(224,124,37)" fg:x="514" fg:w="1"/><text x="17.7092%" y="591.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="17.4592%" y="565" width="0.0340%" height="15" fill="rgb(251,171,30)" fg:x="514" fg:w="1"/><text x="17.7092%" y="575.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.03%)</title><rect x="17.4592%" y="549" width="0.0340%" height="15" fill="rgb(236,46,54)" fg:x="514" fg:w="1"/><text x="17.7092%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.03%)</title><rect x="17.4592%" y="533" width="0.0340%" height="15" fill="rgb(245,213,5)" fg:x="514" fg:w="1"/><text x="17.7092%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.03%)</title><rect x="17.4592%" y="517" width="0.0340%" height="15" fill="rgb(230,144,27)" fg:x="514" fg:w="1"/><text x="17.7092%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.03%)</title><rect x="17.4592%" y="501" width="0.0340%" height="15" fill="rgb(220,86,6)" fg:x="514" fg:w="1"/><text x="17.7092%" y="511.50"></text></g><g><title>__rdl_alloc (1 samples, 0.03%)</title><rect x="17.4592%" y="485" width="0.0340%" height="15" fill="rgb(240,20,13)" fg:x="514" fg:w="1"/><text x="17.7092%" y="495.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.03%)</title><rect x="17.4592%" y="469" width="0.0340%" height="15" fill="rgb(217,89,34)" fg:x="514" fg:w="1"/><text x="17.7092%" y="479.50"></text></g><g><title>std::sys::unix::alloc::aligned_malloc (1 samples, 0.03%)</title><rect x="17.4592%" y="453" width="0.0340%" height="15" fill="rgb(229,13,5)" fg:x="514" fg:w="1"/><text x="17.7092%" y="463.50"></text></g><g><title>posix_memalign (1 samples, 0.03%)</title><rect x="17.4592%" y="437" width="0.0340%" height="15" fill="rgb(244,67,35)" fg:x="514" fg:w="1"/><text x="17.7092%" y="447.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="17.4592%" y="421" width="0.0340%" height="15" fill="rgb(221,40,2)" fg:x="514" fg:w="1"/><text x="17.7092%" y="431.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="17.4592%" y="405" width="0.0340%" height="15" fill="rgb(237,157,21)" fg:x="514" fg:w="1"/><text x="17.7092%" y="415.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="17.4592%" y="389" width="0.0340%" height="15" fill="rgb(222,94,11)" fg:x="514" fg:w="1"/><text x="17.7092%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="17.4592%" y="373" width="0.0340%" height="15" fill="rgb(249,113,6)" fg:x="514" fg:w="1"/><text x="17.7092%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="17.4592%" y="357" width="0.0340%" height="15" fill="rgb(238,137,36)" fg:x="514" fg:w="1"/><text x="17.7092%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="17.4592%" y="341" width="0.0340%" height="15" fill="rgb(210,102,26)" fg:x="514" fg:w="1"/><text x="17.7092%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="17.4592%" y="325" width="0.0340%" height="15" fill="rgb(218,30,30)" fg:x="514" fg:w="1"/><text x="17.7092%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="17.4592%" y="309" width="0.0340%" height="15" fill="rgb(214,67,26)" fg:x="514" fg:w="1"/><text x="17.7092%" y="319.50"></text></g><g><title>[anon] (1 samples, 0.03%)</title><rect x="17.4932%" y="1189" width="0.0340%" height="15" fill="rgb(251,9,53)" fg:x="515" fg:w="1"/><text x="17.7432%" y="1199.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="17.4932%" y="1173" width="0.0340%" height="15" fill="rgb(228,204,25)" fg:x="515" fg:w="1"/><text x="17.7432%" y="1183.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.03%)</title><rect x="17.4932%" y="1157" width="0.0340%" height="15" fill="rgb(207,153,8)" fg:x="515" fg:w="1"/><text x="17.7432%" y="1167.50"></text></g><g><title>core::ptr::write (1 samples, 0.03%)</title><rect x="17.4932%" y="1141" width="0.0340%" height="15" fill="rgb(242,9,16)" fg:x="515" fg:w="1"/><text x="17.7432%" y="1151.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="17.4932%" y="1125" width="0.0340%" height="15" fill="rgb(217,211,10)" fg:x="515" fg:w="1"/><text x="17.7432%" y="1135.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (1 samples, 0.03%)</title><rect x="17.5272%" y="757" width="0.0340%" height="15" fill="rgb(219,228,52)" fg:x="516" fg:w="1"/><text x="17.7772%" y="767.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}}::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="17.5272%" y="741" width="0.0340%" height="15" fill="rgb(231,92,29)" fg:x="516" fg:w="1"/><text x="17.7772%" y="751.50"></text></g><g><title>async_executor::LocalExecutor::tick::{{closure}} (1 samples, 0.03%)</title><rect x="17.5272%" y="725" width="0.0340%" height="15" fill="rgb(232,8,23)" fg:x="516" fg:w="1"/><text x="17.7772%" y="735.50"></text></g><g><title>async_executor::Executor::tick::{{closure}} (1 samples, 0.03%)</title><rect x="17.5272%" y="709" width="0.0340%" height="15" fill="rgb(216,211,34)" fg:x="516" fg:w="1"/><text x="17.7772%" y="719.50"></text></g><g><title>async_executor::Ticker::runnable::{{closure}} (1 samples, 0.03%)</title><rect x="17.5272%" y="693" width="0.0340%" height="15" fill="rgb(236,151,0)" fg:x="516" fg:w="1"/><text x="17.7772%" y="703.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (1 samples, 0.03%)</title><rect x="17.5272%" y="677" width="0.0340%" height="15" fill="rgb(209,168,3)" fg:x="516" fg:w="1"/><text x="17.7772%" y="687.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.03%)</title><rect x="17.5272%" y="661" width="0.0340%" height="15" fill="rgb(208,129,28)" fg:x="516" fg:w="1"/><text x="17.7772%" y="671.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="17.5272%" y="645" width="0.0340%" height="15" fill="rgb(229,78,22)" fg:x="516" fg:w="1"/><text x="17.7772%" y="655.50"></text></g><g><title>async_executor::Ticker::runnable::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="17.5272%" y="629" width="0.0340%" height="15" fill="rgb(228,187,13)" fg:x="516" fg:w="1"/><text x="17.7772%" y="639.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (1 samples, 0.03%)</title><rect x="17.5272%" y="613" width="0.0340%" height="15" fill="rgb(240,119,24)" fg:x="516" fg:w="1"/><text x="17.7772%" y="623.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (1 samples, 0.03%)</title><rect x="17.5272%" y="597" width="0.0340%" height="15" fill="rgb(209,194,42)" fg:x="516" fg:w="1"/><text x="17.7772%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (1 samples, 0.03%)</title><rect x="17.5272%" y="581" width="0.0340%" height="15" fill="rgb(247,200,46)" fg:x="516" fg:w="1"/><text x="17.7772%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.03%)</title><rect x="17.5272%" y="565" width="0.0340%" height="15" fill="rgb(218,76,16)" fg:x="516" fg:w="1"/><text x="17.7772%" y="575.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (1 samples, 0.03%)</title><rect x="17.5611%" y="741" width="0.0340%" height="15" fill="rgb(225,21,48)" fg:x="517" fg:w="1"/><text x="17.8111%" y="751.50"></text></g><g><title>async_executor::steal (1 samples, 0.03%)</title><rect x="17.5951%" y="661" width="0.0340%" height="15" fill="rgb(239,223,50)" fg:x="518" fg:w="1"/><text x="17.8451%" y="671.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::len (1 samples, 0.03%)</title><rect x="17.5951%" y="645" width="0.0340%" height="15" fill="rgb(244,45,21)" fg:x="518" fg:w="1"/><text x="17.8451%" y="655.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::len (1 samples, 0.03%)</title><rect x="17.5951%" y="629" width="0.0340%" height="15" fill="rgb(232,33,43)" fg:x="518" fg:w="1"/><text x="17.8451%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.03%)</title><rect x="17.5951%" y="613" width="0.0340%" height="15" fill="rgb(209,8,3)" fg:x="518" fg:w="1"/><text x="17.8451%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.03%)</title><rect x="17.5951%" y="597" width="0.0340%" height="15" fill="rgb(214,25,53)" fg:x="518" fg:w="1"/><text x="17.8451%" y="607.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (2 samples, 0.07%)</title><rect x="17.5951%" y="677" width="0.0679%" height="15" fill="rgb(254,186,54)" fg:x="518" fg:w="2"/><text x="17.8451%" y="687.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (1 samples, 0.03%)</title><rect x="17.6291%" y="661" width="0.0340%" height="15" fill="rgb(208,174,49)" fg:x="519" fg:w="1"/><text x="17.8791%" y="671.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (1 samples, 0.03%)</title><rect x="17.6291%" y="645" width="0.0340%" height="15" fill="rgb(233,191,51)" fg:x="519" fg:w="1"/><text x="17.8791%" y="655.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (4 samples, 0.14%)</title><rect x="17.5951%" y="741" width="0.1359%" height="15" fill="rgb(222,134,10)" fg:x="518" fg:w="4"/><text x="17.8451%" y="751.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (4 samples, 0.14%)</title><rect x="17.5951%" y="725" width="0.1359%" height="15" fill="rgb(230,226,20)" fg:x="518" fg:w="4"/><text x="17.8451%" y="735.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (4 samples, 0.14%)</title><rect x="17.5951%" y="709" width="0.1359%" height="15" fill="rgb(251,111,25)" fg:x="518" fg:w="4"/><text x="17.8451%" y="719.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (4 samples, 0.14%)</title><rect x="17.5951%" y="693" width="0.1359%" height="15" fill="rgb(224,40,46)" fg:x="518" fg:w="4"/><text x="17.8451%" y="703.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (2 samples, 0.07%)</title><rect x="17.6630%" y="677" width="0.0679%" height="15" fill="rgb(236,108,47)" fg:x="520" fg:w="2"/><text x="17.9130%" y="687.50"></text></g><g><title>futures_lite::future::block_on::parker_and_waker::{{closure}} (2 samples, 0.07%)</title><rect x="17.6630%" y="661" width="0.0679%" height="15" fill="rgb(234,93,0)" fg:x="520" fg:w="2"/><text x="17.9130%" y="671.50"></text></g><g><title>parking::Unparker::unpark (2 samples, 0.07%)</title><rect x="17.6630%" y="645" width="0.0679%" height="15" fill="rgb(224,213,32)" fg:x="520" fg:w="2"/><text x="17.9130%" y="655.50"></text></g><g><title>parking::Inner::unpark (2 samples, 0.07%)</title><rect x="17.6630%" y="629" width="0.0679%" height="15" fill="rgb(251,11,48)" fg:x="520" fg:w="2"/><text x="17.9130%" y="639.50"></text></g><g><title>syscall (2 samples, 0.07%)</title><rect x="17.6630%" y="613" width="0.0679%" height="15" fill="rgb(236,173,5)" fg:x="520" fg:w="2"/><text x="17.9130%" y="623.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="17.6630%" y="597" width="0.0679%" height="15" fill="rgb(230,95,12)" fg:x="520" fg:w="2"/><text x="17.9130%" y="607.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="17.6630%" y="581" width="0.0679%" height="15" fill="rgb(232,209,1)" fg:x="520" fg:w="2"/><text x="17.9130%" y="591.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="17.6630%" y="565" width="0.0679%" height="15" fill="rgb(232,6,1)" fg:x="520" fg:w="2"/><text x="17.9130%" y="575.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="17.6630%" y="549" width="0.0679%" height="15" fill="rgb(210,224,50)" fg:x="520" fg:w="2"/><text x="17.9130%" y="559.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="17.6630%" y="533" width="0.0679%" height="15" fill="rgb(228,127,35)" fg:x="520" fg:w="2"/><text x="17.9130%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="17.6970%" y="517" width="0.0340%" height="15" fill="rgb(245,102,45)" fg:x="521" fg:w="1"/><text x="17.9470%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="17.6970%" y="501" width="0.0340%" height="15" fill="rgb(214,1,49)" fg:x="521" fg:w="1"/><text x="17.9470%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="17.6970%" y="485" width="0.0340%" height="15" fill="rgb(226,163,40)" fg:x="521" fg:w="1"/><text x="17.9470%" y="495.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor as bevy_ecs::schedule::executor::SystemExecutor&gt;::run::{{closure}}::{{closure}} (2 samples, 0.07%)</title><rect x="17.7310%" y="693" width="0.0679%" height="15" fill="rgb(239,212,28)" fg:x="522" fg:w="2"/><text x="17.9810%" y="703.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::spawn_system_tasks (1 samples, 0.03%)</title><rect x="17.7649%" y="677" width="0.0340%" height="15" fill="rgb(220,20,13)" fg:x="523" fg:w="1"/><text x="18.0149%" y="687.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::can_run (1 samples, 0.03%)</title><rect x="17.7649%" y="661" width="0.0340%" height="15" fill="rgb(210,164,35)" fg:x="523" fg:w="1"/><text x="18.0149%" y="671.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::update_archetype_component_access (1 samples, 0.03%)</title><rect x="17.7649%" y="645" width="0.0340%" height="15" fill="rgb(248,109,41)" fg:x="523" fg:w="1"/><text x="18.0149%" y="655.50"></text></g><g><title>&lt;(P0,P1) as bevy_ecs::system::system_param::SystemParam&gt;::new_archetype (1 samples, 0.03%)</title><rect x="17.7649%" y="629" width="0.0340%" height="15" fill="rgb(238,23,50)" fg:x="523" fg:w="1"/><text x="18.0149%" y="639.50"></text></g><g><title>&lt;bevy_ecs::system::query::Query&lt;Q,F&gt; as bevy_ecs::system::system_param::SystemParam&gt;::new_archetype (1 samples, 0.03%)</title><rect x="17.7649%" y="613" width="0.0340%" height="15" fill="rgb(211,48,49)" fg:x="523" fg:w="1"/><text x="18.0149%" y="623.50"></text></g><g><title>bevy_ecs::query::access::Access&lt;T&gt;::extend (1 samples, 0.03%)</title><rect x="17.7649%" y="597" width="0.0340%" height="15" fill="rgb(223,36,21)" fg:x="523" fg:w="1"/><text x="18.0149%" y="607.50"></text></g><g><title>fixedbitset::FixedBitSet::union_with (1 samples, 0.03%)</title><rect x="17.7649%" y="581" width="0.0340%" height="15" fill="rgb(207,123,46)" fg:x="523" fg:w="1"/><text x="18.0149%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="17.7649%" y="565" width="0.0340%" height="15" fill="rgb(240,218,32)" fg:x="523" fg:w="1"/><text x="18.0149%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.03%)</title><rect x="17.7649%" y="549" width="0.0340%" height="15" fill="rgb(252,5,43)" fg:x="523" fg:w="1"/><text x="18.0149%" y="559.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::buffer_unmap (1 samples, 0.03%)</title><rect x="17.7989%" y="469" width="0.0340%" height="15" fill="rgb(252,84,19)" fg:x="524" fg:w="1"/><text x="18.0489%" y="479.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::buffer_unmap (1 samples, 0.03%)</title><rect x="17.7989%" y="453" width="0.0340%" height="15" fill="rgb(243,152,39)" fg:x="524" fg:w="1"/><text x="18.0489%" y="463.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_unmap (1 samples, 0.03%)</title><rect x="17.7989%" y="437" width="0.0340%" height="15" fill="rgb(234,160,15)" fg:x="524" fg:w="1"/><text x="18.0489%" y="447.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_unmap_inner (1 samples, 0.03%)</title><rect x="17.7989%" y="421" width="0.0340%" height="15" fill="rgb(237,34,20)" fg:x="524" fg:w="1"/><text x="18.0489%" y="431.50"></text></g><g><title>wgpu_core::device::queue::PendingWrites&lt;A&gt;::activate (1 samples, 0.03%)</title><rect x="17.7989%" y="405" width="0.0340%" height="15" fill="rgb(229,97,13)" fg:x="524" fg:w="1"/><text x="18.0489%" y="415.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_encoding (1 samples, 0.03%)</title><rect x="17.7989%" y="389" width="0.0340%" height="15" fill="rgb(234,71,50)" fg:x="524" fg:w="1"/><text x="18.0489%" y="399.50"></text></g><g><title>ash::device::Device::allocate_command_buffers (1 samples, 0.03%)</title><rect x="17.7989%" y="373" width="0.0340%" height="15" fill="rgb(253,155,4)" fg:x="524" fg:w="1"/><text x="18.0489%" y="383.50"></text></g><g><title>vkAllocateCommandBuffers (1 samples, 0.03%)</title><rect x="17.7989%" y="357" width="0.0340%" height="15" fill="rgb(222,185,37)" fg:x="524" fg:w="1"/><text x="18.0489%" y="367.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="17.7989%" y="341" width="0.0340%" height="15" fill="rgb(251,177,13)" fg:x="524" fg:w="1"/><text x="18.0489%" y="351.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="17.7989%" y="325" width="0.0340%" height="15" fill="rgb(250,179,40)" fg:x="524" fg:w="1"/><text x="18.0489%" y="335.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="17.7989%" y="309" width="0.0340%" height="15" fill="rgb(242,44,2)" fg:x="524" fg:w="1"/><text x="18.0489%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="17.7989%" y="293" width="0.0340%" height="15" fill="rgb(216,177,13)" fg:x="524" fg:w="1"/><text x="18.0489%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="17.7989%" y="277" width="0.0340%" height="15" fill="rgb(216,106,43)" fg:x="524" fg:w="1"/><text x="18.0489%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="17.7989%" y="261" width="0.0340%" height="15" fill="rgb(216,183,2)" fg:x="524" fg:w="1"/><text x="18.0489%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="17.7989%" y="245" width="0.0340%" height="15" fill="rgb(249,75,3)" fg:x="524" fg:w="1"/><text x="18.0489%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="17.7989%" y="229" width="0.0340%" height="15" fill="rgb(219,67,39)" fg:x="524" fg:w="1"/><text x="18.0489%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="17.7989%" y="213" width="0.0340%" height="15" fill="rgb(253,228,2)" fg:x="524" fg:w="1"/><text x="18.0489%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="17.7989%" y="197" width="0.0340%" height="15" fill="rgb(235,138,27)" fg:x="524" fg:w="1"/><text x="18.0489%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="17.7989%" y="181" width="0.0340%" height="15" fill="rgb(236,97,51)" fg:x="524" fg:w="1"/><text x="18.0489%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="17.7989%" y="165" width="0.0340%" height="15" fill="rgb(240,80,30)" fg:x="524" fg:w="1"/><text x="18.0489%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="17.7989%" y="149" width="0.0340%" height="15" fill="rgb(230,178,19)" fg:x="524" fg:w="1"/><text x="18.0489%" y="159.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.03%)</title><rect x="17.8329%" y="469" width="0.0340%" height="15" fill="rgb(210,190,27)" fg:x="525" fg:w="1"/><text x="18.0829%" y="479.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.03%)</title><rect x="17.8329%" y="453" width="0.0340%" height="15" fill="rgb(222,107,31)" fg:x="525" fg:w="1"/><text x="18.0829%" y="463.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.03%)</title><rect x="17.8329%" y="437" width="0.0340%" height="15" fill="rgb(216,127,34)" fg:x="525" fg:w="1"/><text x="18.0829%" y="447.50"></text></g><g><title>core::intrinsics::write_bytes (1 samples, 0.03%)</title><rect x="17.8668%" y="405" width="0.0340%" height="15" fill="rgb(234,116,52)" fg:x="526" fg:w="1"/><text x="18.1168%" y="415.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="17.8668%" y="389" width="0.0340%" height="15" fill="rgb(222,124,15)" fg:x="526" fg:w="1"/><text x="18.1168%" y="399.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::spawn_system_task::{{closure}} (4 samples, 0.14%)</title><rect x="17.7989%" y="693" width="0.1359%" height="15" fill="rgb(231,179,28)" fg:x="524" fg:w="4"/><text x="18.0489%" y="703.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.14%)</title><rect x="17.7989%" y="677" width="0.1359%" height="15" fill="rgb(226,93,45)" fg:x="524" fg:w="4"/><text x="18.0489%" y="687.50"></text></g><g><title>std::panicking::try (4 samples, 0.14%)</title><rect x="17.7989%" y="661" width="0.1359%" height="15" fill="rgb(215,8,51)" fg:x="524" fg:w="4"/><text x="18.0489%" y="671.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.14%)</title><rect x="17.7989%" y="645" width="0.1359%" height="15" fill="rgb(223,106,5)" fg:x="524" fg:w="4"/><text x="18.0489%" y="655.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4 samples, 0.14%)</title><rect x="17.7989%" y="629" width="0.1359%" height="15" fill="rgb(250,191,5)" fg:x="524" fg:w="4"/><text x="18.0489%" y="639.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4 samples, 0.14%)</title><rect x="17.7989%" y="613" width="0.1359%" height="15" fill="rgb(242,132,44)" fg:x="524" fg:w="4"/><text x="18.0489%" y="623.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::spawn_system_task::{{closure}}::{{closure}} (4 samples, 0.14%)</title><rect x="17.7989%" y="597" width="0.1359%" height="15" fill="rgb(251,152,29)" fg:x="524" fg:w="4"/><text x="18.0489%" y="607.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (4 samples, 0.14%)</title><rect x="17.7989%" y="581" width="0.1359%" height="15" fill="rgb(218,179,5)" fg:x="524" fg:w="4"/><text x="18.0489%" y="591.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;fn(F0,F1,F2,F3,F4,F5,F6,F7,F8,F9) .&gt; Out&gt;&gt;::run (4 samples, 0.14%)</title><rect x="17.7989%" y="565" width="0.1359%" height="15" fill="rgb(227,67,19)" fg:x="524" fg:w="4"/><text x="18.0489%" y="575.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;fn(F0,F1,F2,F3,F4,F5,F6,F7,F8,F9) .&gt; Out&gt;&gt;::run::call_inner (4 samples, 0.14%)</title><rect x="17.7989%" y="549" width="0.1359%" height="15" fill="rgb(233,119,31)" fg:x="524" fg:w="4"/><text x="18.0489%" y="559.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (4 samples, 0.14%)</title><rect x="17.7989%" y="533" width="0.1359%" height="15" fill="rgb(241,120,22)" fg:x="524" fg:w="4"/><text x="18.0489%" y="543.50"></text></g><g><title>core::ops::function::FnMut::call_mut (4 samples, 0.14%)</title><rect x="17.7989%" y="517" width="0.1359%" height="15" fill="rgb(224,102,30)" fg:x="524" fg:w="4"/><text x="18.0489%" y="527.50"></text></g><g><title>game_render::pbr::prepare_materials (4 samples, 0.14%)</title><rect x="17.7989%" y="501" width="0.1359%" height="15" fill="rgb(210,164,37)" fg:x="524" fg:w="4"/><text x="18.0489%" y="511.50"></text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (4 samples, 0.14%)</title><rect x="17.7989%" y="485" width="0.1359%" height="15" fill="rgb(226,191,16)" fg:x="524" fg:w="4"/><text x="18.0489%" y="495.50"></text></g><g><title>wgpu::Device::create_buffer (2 samples, 0.07%)</title><rect x="17.8668%" y="469" width="0.0679%" height="15" fill="rgb(214,40,45)" fg:x="526" fg:w="2"/><text x="18.1168%" y="479.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_create_buffer (2 samples, 0.07%)</title><rect x="17.8668%" y="453" width="0.0679%" height="15" fill="rgb(244,29,26)" fg:x="526" fg:w="2"/><text x="18.1168%" y="463.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::device_create_buffer (2 samples, 0.07%)</title><rect x="17.8668%" y="437" width="0.0679%" height="15" fill="rgb(216,16,5)" fg:x="526" fg:w="2"/><text x="18.1168%" y="447.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (2 samples, 0.07%)</title><rect x="17.8668%" y="421" width="0.0679%" height="15" fill="rgb(249,76,35)" fg:x="526" fg:w="2"/><text x="18.1168%" y="431.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_buffer (1 samples, 0.03%)</title><rect x="17.9008%" y="405" width="0.0340%" height="15" fill="rgb(207,11,44)" fg:x="527" fg:w="1"/><text x="18.1508%" y="415.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (13 samples, 0.44%)</title><rect x="17.5272%" y="789" width="0.4416%" height="15" fill="rgb(228,190,49)" fg:x="516" fg:w="13"/><text x="17.7772%" y="799.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (13 samples, 0.44%)</title><rect x="17.5272%" y="773" width="0.4416%" height="15" fill="rgb(214,173,12)" fg:x="516" fg:w="13"/><text x="17.7772%" y="783.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (12 samples, 0.41%)</title><rect x="17.5611%" y="757" width="0.4076%" height="15" fill="rgb(218,26,35)" fg:x="517" fg:w="12"/><text x="17.8111%" y="767.50"></text></g><g><title>async_task::runnable::Runnable&lt;M&gt;::run (7 samples, 0.24%)</title><rect x="17.7310%" y="741" width="0.2378%" height="15" fill="rgb(220,200,19)" fg:x="522" fg:w="7"/><text x="17.9810%" y="751.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::run (7 samples, 0.24%)</title><rect x="17.7310%" y="725" width="0.2378%" height="15" fill="rgb(239,95,49)" fg:x="522" fg:w="7"/><text x="17.9810%" y="735.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (7 samples, 0.24%)</title><rect x="17.7310%" y="709" width="0.2378%" height="15" fill="rgb(235,85,53)" fg:x="522" fg:w="7"/><text x="17.9810%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::CallOnDrop&lt;async_executor::Executor::spawn&lt;(),bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::spawn_system_task::{{closure}}&gt;::{{closure}}::{{closure}}&gt;&gt; (1 samples, 0.03%)</title><rect x="17.9348%" y="693" width="0.0340%" height="15" fill="rgb(233,133,31)" fg:x="528" fg:w="1"/><text x="18.1848%" y="703.50"></text></g><g><title>&lt;async_executor::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="17.9348%" y="677" width="0.0340%" height="15" fill="rgb(218,25,20)" fg:x="528" fg:w="1"/><text x="18.1848%" y="687.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="17.9348%" y="661" width="0.0340%" height="15" fill="rgb(252,210,38)" fg:x="528" fg:w="1"/><text x="18.1848%" y="671.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.03%)</title><rect x="17.9348%" y="645" width="0.0340%" height="15" fill="rgb(242,134,21)" fg:x="528" fg:w="1"/><text x="18.1848%" y="655.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (1 samples, 0.03%)</title><rect x="17.9348%" y="629" width="0.0340%" height="15" fill="rgb(213,28,48)" fg:x="528" fg:w="1"/><text x="18.1848%" y="639.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock_contended (1 samples, 0.03%)</title><rect x="17.9348%" y="613" width="0.0340%" height="15" fill="rgb(250,196,2)" fg:x="528" fg:w="1"/><text x="18.1848%" y="623.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::spin (1 samples, 0.03%)</title><rect x="17.9348%" y="597" width="0.0340%" height="15" fill="rgb(227,5,17)" fg:x="528" fg:w="1"/><text x="18.1848%" y="607.50"></text></g><g><title>[libc.so.6] (14 samples, 0.48%)</title><rect x="17.5272%" y="1189" width="0.4755%" height="15" fill="rgb(221,226,24)" fg:x="516" fg:w="14"/><text x="17.7772%" y="1199.50"></text></g><g><title>[libc.so.6] (14 samples, 0.48%)</title><rect x="17.5272%" y="1173" width="0.4755%" height="15" fill="rgb(211,5,48)" fg:x="516" fg:w="14"/><text x="17.7772%" y="1183.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (14 samples, 0.48%)</title><rect x="17.5272%" y="1157" width="0.4755%" height="15" fill="rgb(219,150,6)" fg:x="516" fg:w="14"/><text x="17.7772%" y="1167.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (14 samples, 0.48%)</title><rect x="17.5272%" y="1141" width="0.4755%" height="15" fill="rgb(251,46,16)" fg:x="516" fg:w="14"/><text x="17.7772%" y="1151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (14 samples, 0.48%)</title><rect x="17.5272%" y="1125" width="0.4755%" height="15" fill="rgb(220,204,40)" fg:x="516" fg:w="14"/><text x="17.7772%" y="1135.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (14 samples, 0.48%)</title><rect x="17.5272%" y="1109" width="0.4755%" height="15" fill="rgb(211,85,2)" fg:x="516" fg:w="14"/><text x="17.7772%" y="1119.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (14 samples, 0.48%)</title><rect x="17.5272%" y="1093" width="0.4755%" height="15" fill="rgb(229,17,7)" fg:x="516" fg:w="14"/><text x="17.7772%" y="1103.50"></text></g><g><title>std::panic::catch_unwind (14 samples, 0.48%)</title><rect x="17.5272%" y="1077" width="0.4755%" height="15" fill="rgb(239,72,28)" fg:x="516" fg:w="14"/><text x="17.7772%" y="1087.50"></text></g><g><title>std::panicking::try (14 samples, 0.48%)</title><rect x="17.5272%" y="1061" width="0.4755%" height="15" fill="rgb(230,47,54)" fg:x="516" fg:w="14"/><text x="17.7772%" y="1071.50"></text></g><g><title>std::panicking::try::do_call (14 samples, 0.48%)</title><rect x="17.5272%" y="1045" width="0.4755%" height="15" fill="rgb(214,50,8)" fg:x="516" fg:w="14"/><text x="17.7772%" y="1055.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (14 samples, 0.48%)</title><rect x="17.5272%" y="1029" width="0.4755%" height="15" fill="rgb(216,198,43)" fg:x="516" fg:w="14"/><text x="17.7772%" y="1039.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (14 samples, 0.48%)</title><rect x="17.5272%" y="1013" width="0.4755%" height="15" fill="rgb(234,20,35)" fg:x="516" fg:w="14"/><text x="17.7772%" y="1023.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (14 samples, 0.48%)</title><rect x="17.5272%" y="997" width="0.4755%" height="15" fill="rgb(254,45,19)" fg:x="516" fg:w="14"/><text x="17.7772%" y="1007.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (14 samples, 0.48%)</title><rect x="17.5272%" y="981" width="0.4755%" height="15" fill="rgb(219,14,44)" fg:x="516" fg:w="14"/><text x="17.7772%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (14 samples, 0.48%)</title><rect x="17.5272%" y="965" width="0.4755%" height="15" fill="rgb(217,220,26)" fg:x="516" fg:w="14"/><text x="17.7772%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (14 samples, 0.48%)</title><rect x="17.5272%" y="949" width="0.4755%" height="15" fill="rgb(213,158,28)" fg:x="516" fg:w="14"/><text x="17.7772%" y="959.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}}::{{closure}} (14 samples, 0.48%)</title><rect x="17.5272%" y="933" width="0.4755%" height="15" fill="rgb(252,51,52)" fg:x="516" fg:w="14"/><text x="17.7772%" y="943.50"></text></g><g><title>std::panic::catch_unwind (14 samples, 0.48%)</title><rect x="17.5272%" y="917" width="0.4755%" height="15" fill="rgb(246,89,16)" fg:x="516" fg:w="14"/><text x="17.7772%" y="927.50"></text></g><g><title>std::panicking::try (14 samples, 0.48%)</title><rect x="17.5272%" y="901" width="0.4755%" height="15" fill="rgb(216,158,49)" fg:x="516" fg:w="14"/><text x="17.7772%" y="911.50"></text></g><g><title>std::panicking::try::do_call (14 samples, 0.48%)</title><rect x="17.5272%" y="885" width="0.4755%" height="15" fill="rgb(236,107,19)" fg:x="516" fg:w="14"/><text x="17.7772%" y="895.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}}::{{closure}}::{{closure}} (14 samples, 0.48%)</title><rect x="17.5272%" y="869" width="0.4755%" height="15" fill="rgb(228,185,30)" fg:x="516" fg:w="14"/><text x="17.7772%" y="879.50"></text></g><g><title>futures_lite::future::block_on (14 samples, 0.48%)</title><rect x="17.5272%" y="853" width="0.4755%" height="15" fill="rgb(246,134,8)" fg:x="516" fg:w="14"/><text x="17.7772%" y="863.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (14 samples, 0.48%)</title><rect x="17.5272%" y="837" width="0.4755%" height="15" fill="rgb(214,143,50)" fg:x="516" fg:w="14"/><text x="17.7772%" y="847.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (14 samples, 0.48%)</title><rect x="17.5272%" y="821" width="0.4755%" height="15" fill="rgb(228,75,8)" fg:x="516" fg:w="14"/><text x="17.7772%" y="831.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (14 samples, 0.48%)</title><rect x="17.5272%" y="805" width="0.4755%" height="15" fill="rgb(207,175,4)" fg:x="516" fg:w="14"/><text x="17.7772%" y="815.50"></text></g><g><title>parking::Inner::park (1 samples, 0.03%)</title><rect x="17.9688%" y="789" width="0.0340%" height="15" fill="rgb(205,108,24)" fg:x="529" fg:w="1"/><text x="18.2188%" y="799.50"></text></g><g><title>std::sync::condvar::Condvar::wait (1 samples, 0.03%)</title><rect x="17.9688%" y="773" width="0.0340%" height="15" fill="rgb(244,120,49)" fg:x="529" fg:w="1"/><text x="18.2188%" y="783.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait (1 samples, 0.03%)</title><rect x="17.9688%" y="757" width="0.0340%" height="15" fill="rgb(223,47,38)" fg:x="529" fg:w="1"/><text x="18.2188%" y="767.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait_optional_timeout (1 samples, 0.03%)</title><rect x="17.9688%" y="741" width="0.0340%" height="15" fill="rgb(229,179,11)" fg:x="529" fg:w="1"/><text x="18.2188%" y="751.50"></text></g><g><title>std::sys::unix::futex::futex_wait (1 samples, 0.03%)</title><rect x="17.9688%" y="725" width="0.0340%" height="15" fill="rgb(231,122,1)" fg:x="529" fg:w="1"/><text x="18.2188%" y="735.50"></text></g><g><title>syscall (1 samples, 0.03%)</title><rect x="17.9688%" y="709" width="0.0340%" height="15" fill="rgb(245,119,9)" fg:x="529" fg:w="1"/><text x="18.2188%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="17.9688%" y="693" width="0.0340%" height="15" fill="rgb(241,163,25)" fg:x="529" fg:w="1"/><text x="18.2188%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="17.9688%" y="677" width="0.0340%" height="15" fill="rgb(217,214,3)" fg:x="529" fg:w="1"/><text x="18.2188%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="17.9688%" y="661" width="0.0340%" height="15" fill="rgb(240,86,28)" fg:x="529" fg:w="1"/><text x="18.2188%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="17.9688%" y="645" width="0.0340%" height="15" fill="rgb(215,47,9)" fg:x="529" fg:w="1"/><text x="18.2188%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="17.9688%" y="629" width="0.0340%" height="15" fill="rgb(252,25,45)" fg:x="529" fg:w="1"/><text x="18.2188%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="17.9688%" y="613" width="0.0340%" height="15" fill="rgb(251,164,9)" fg:x="529" fg:w="1"/><text x="18.2188%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="17.9688%" y="597" width="0.0340%" height="15" fill="rgb(233,194,0)" fg:x="529" fg:w="1"/><text x="18.2188%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="17.9688%" y="581" width="0.0340%" height="15" fill="rgb(249,111,24)" fg:x="529" fg:w="1"/><text x="18.2188%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="17.9688%" y="565" width="0.0340%" height="15" fill="rgb(250,223,3)" fg:x="529" fg:w="1"/><text x="18.2188%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="17.9688%" y="549" width="0.0340%" height="15" fill="rgb(236,178,37)" fg:x="529" fg:w="1"/><text x="18.2188%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="17.9688%" y="533" width="0.0340%" height="15" fill="rgb(241,158,50)" fg:x="529" fg:w="1"/><text x="18.2188%" y="543.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (1 samples, 0.03%)</title><rect x="18.0027%" y="1173" width="0.0340%" height="15" fill="rgb(213,121,41)" fg:x="530" fg:w="1"/><text x="18.2527%" y="1183.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (1 samples, 0.03%)</title><rect x="18.0027%" y="1157" width="0.0340%" height="15" fill="rgb(240,92,3)" fg:x="530" fg:w="1"/><text x="18.2527%" y="1167.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="18.0027%" y="1141" width="0.0340%" height="15" fill="rgb(205,123,3)" fg:x="530" fg:w="1"/><text x="18.2527%" y="1151.50"></text></g><g><title>async_task::runnable::Runnable&lt;M&gt;::run (1 samples, 0.03%)</title><rect x="18.0027%" y="1125" width="0.0340%" height="15" fill="rgb(205,97,47)" fg:x="530" fg:w="1"/><text x="18.2527%" y="1135.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::run (1 samples, 0.03%)</title><rect x="18.0027%" y="1109" width="0.0340%" height="15" fill="rgb(247,152,14)" fg:x="530" fg:w="1"/><text x="18.2527%" y="1119.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (1 samples, 0.03%)</title><rect x="18.0027%" y="1093" width="0.0340%" height="15" fill="rgb(248,195,53)" fg:x="530" fg:w="1"/><text x="18.2527%" y="1103.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::spawn_system_task::{{closure}} (1 samples, 0.03%)</title><rect x="18.0027%" y="1077" width="0.0340%" height="15" fill="rgb(226,201,16)" fg:x="530" fg:w="1"/><text x="18.2527%" y="1087.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.03%)</title><rect x="18.0027%" y="1061" width="0.0340%" height="15" fill="rgb(205,98,0)" fg:x="530" fg:w="1"/><text x="18.2527%" y="1071.50"></text></g><g><title>std::panicking::try (1 samples, 0.03%)</title><rect x="18.0027%" y="1045" width="0.0340%" height="15" fill="rgb(214,191,48)" fg:x="530" fg:w="1"/><text x="18.2527%" y="1055.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.03%)</title><rect x="18.0027%" y="1029" width="0.0340%" height="15" fill="rgb(237,112,39)" fg:x="530" fg:w="1"/><text x="18.2527%" y="1039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.03%)</title><rect x="18.0027%" y="1013" width="0.0340%" height="15" fill="rgb(247,203,27)" fg:x="530" fg:w="1"/><text x="18.2527%" y="1023.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.03%)</title><rect x="18.0027%" y="997" width="0.0340%" height="15" fill="rgb(235,124,28)" fg:x="530" fg:w="1"/><text x="18.2527%" y="1007.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::spawn_system_task::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="18.0027%" y="981" width="0.0340%" height="15" fill="rgb(208,207,46)" fg:x="530" fg:w="1"/><text x="18.2527%" y="991.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (1 samples, 0.03%)</title><rect x="18.0027%" y="965" width="0.0340%" height="15" fill="rgb(234,176,4)" fg:x="530" fg:w="1"/><text x="18.2527%" y="975.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;fn(F0,F1,F2,F3,F4,F5,F6,F7,F8,F9) .&gt; Out&gt;&gt;::run (1 samples, 0.03%)</title><rect x="18.0027%" y="949" width="0.0340%" height="15" fill="rgb(230,133,28)" fg:x="530" fg:w="1"/><text x="18.2527%" y="959.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;fn(F0,F1,F2,F3,F4,F5,F6,F7,F8,F9) .&gt; Out&gt;&gt;::run::call_inner (1 samples, 0.03%)</title><rect x="18.0027%" y="933" width="0.0340%" height="15" fill="rgb(211,137,40)" fg:x="530" fg:w="1"/><text x="18.2527%" y="943.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.03%)</title><rect x="18.0027%" y="917" width="0.0340%" height="15" fill="rgb(254,35,13)" fg:x="530" fg:w="1"/><text x="18.2527%" y="927.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1 samples, 0.03%)</title><rect x="18.0027%" y="901" width="0.0340%" height="15" fill="rgb(225,49,51)" fg:x="530" fg:w="1"/><text x="18.2527%" y="911.50"></text></g><g><title>game_render::pbr::prepare_materials (1 samples, 0.03%)</title><rect x="18.0027%" y="885" width="0.0340%" height="15" fill="rgb(251,10,15)" fg:x="530" fg:w="1"/><text x="18.2527%" y="895.50"></text></g><g><title>wgpu::Device::create_texture (1 samples, 0.03%)</title><rect x="18.0027%" y="869" width="0.0340%" height="15" fill="rgb(228,207,15)" fg:x="530" fg:w="1"/><text x="18.2527%" y="879.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_create_texture (1 samples, 0.03%)</title><rect x="18.0027%" y="853" width="0.0340%" height="15" fill="rgb(241,99,19)" fg:x="530" fg:w="1"/><text x="18.2527%" y="863.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::device_create_texture (1 samples, 0.03%)</title><rect x="18.0027%" y="837" width="0.0340%" height="15" fill="rgb(207,104,49)" fg:x="530" fg:w="1"/><text x="18.2527%" y="847.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_texture (1 samples, 0.03%)</title><rect x="18.0027%" y="821" width="0.0340%" height="15" fill="rgb(234,99,18)" fg:x="530" fg:w="1"/><text x="18.2527%" y="831.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_texture (1 samples, 0.03%)</title><rect x="18.0027%" y="805" width="0.0340%" height="15" fill="rgb(213,191,49)" fg:x="530" fg:w="1"/><text x="18.2527%" y="815.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_texture (1 samples, 0.03%)</title><rect x="18.0027%" y="789" width="0.0340%" height="15" fill="rgb(210,226,19)" fg:x="530" fg:w="1"/><text x="18.2527%" y="799.50"></text></g><g><title>ash::device::Device::create_image (1 samples, 0.03%)</title><rect x="18.0027%" y="773" width="0.0340%" height="15" fill="rgb(229,97,18)" fg:x="530" fg:w="1"/><text x="18.2527%" y="783.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="18.0027%" y="757" width="0.0340%" height="15" fill="rgb(211,167,15)" fg:x="530" fg:w="1"/><text x="18.2527%" y="767.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="18.0027%" y="741" width="0.0340%" height="15" fill="rgb(210,169,34)" fg:x="530" fg:w="1"/><text x="18.2527%" y="751.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="18.0027%" y="725" width="0.0340%" height="15" fill="rgb(241,121,31)" fg:x="530" fg:w="1"/><text x="18.2527%" y="735.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="18.0027%" y="709" width="0.0340%" height="15" fill="rgb(232,40,11)" fg:x="530" fg:w="1"/><text x="18.2527%" y="719.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="18.0027%" y="693" width="0.0340%" height="15" fill="rgb(205,86,26)" fg:x="530" fg:w="1"/><text x="18.2527%" y="703.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.03%)</title><rect x="18.0367%" y="1173" width="0.0340%" height="15" fill="rgb(231,126,28)" fg:x="531" fg:w="1"/><text x="18.2867%" y="1183.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (1 samples, 0.03%)</title><rect x="18.0367%" y="1157" width="0.0340%" height="15" fill="rgb(219,221,18)" fg:x="531" fg:w="1"/><text x="18.2867%" y="1167.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.03%)</title><rect x="18.0367%" y="1141" width="0.0340%" height="15" fill="rgb(211,40,0)" fg:x="531" fg:w="1"/><text x="18.2867%" y="1151.50"></text></g><g><title>std::panicking::try (1 samples, 0.03%)</title><rect x="18.0367%" y="1125" width="0.0340%" height="15" fill="rgb(239,85,43)" fg:x="531" fg:w="1"/><text x="18.2867%" y="1135.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.03%)</title><rect x="18.0367%" y="1109" width="0.0340%" height="15" fill="rgb(231,55,21)" fg:x="531" fg:w="1"/><text x="18.2867%" y="1119.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.03%)</title><rect x="18.0367%" y="1093" width="0.0340%" height="15" fill="rgb(225,184,43)" fg:x="531" fg:w="1"/><text x="18.2867%" y="1103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="18.0367%" y="1077" width="0.0340%" height="15" fill="rgb(251,158,41)" fg:x="531" fg:w="1"/><text x="18.2867%" y="1087.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.03%)</title><rect x="18.0367%" y="1061" width="0.0340%" height="15" fill="rgb(234,159,37)" fg:x="531" fg:w="1"/><text x="18.2867%" y="1071.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="18.0367%" y="1045" width="0.0340%" height="15" fill="rgb(216,204,22)" fg:x="531" fg:w="1"/><text x="18.2867%" y="1055.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.03%)</title><rect x="18.0367%" y="1029" width="0.0340%" height="15" fill="rgb(214,17,3)" fg:x="531" fg:w="1"/><text x="18.2867%" y="1039.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.03%)</title><rect x="18.0367%" y="1013" width="0.0340%" height="15" fill="rgb(212,111,17)" fg:x="531" fg:w="1"/><text x="18.2867%" y="1023.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="18.0367%" y="997" width="0.0340%" height="15" fill="rgb(221,157,24)" fg:x="531" fg:w="1"/><text x="18.2867%" y="1007.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.03%)</title><rect x="18.0367%" y="981" width="0.0340%" height="15" fill="rgb(252,16,13)" fg:x="531" fg:w="1"/><text x="18.2867%" y="991.50"></text></g><g><title>std::panicking::try (1 samples, 0.03%)</title><rect x="18.0367%" y="965" width="0.0340%" height="15" fill="rgb(221,62,2)" fg:x="531" fg:w="1"/><text x="18.2867%" y="975.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.03%)</title><rect x="18.0367%" y="949" width="0.0340%" height="15" fill="rgb(247,87,22)" fg:x="531" fg:w="1"/><text x="18.2867%" y="959.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="18.0367%" y="933" width="0.0340%" height="15" fill="rgb(215,73,9)" fg:x="531" fg:w="1"/><text x="18.2867%" y="943.50"></text></g><g><title>futures_lite::future::block_on (1 samples, 0.03%)</title><rect x="18.0367%" y="917" width="0.0340%" height="15" fill="rgb(207,175,33)" fg:x="531" fg:w="1"/><text x="18.2867%" y="927.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.03%)</title><rect x="18.0367%" y="901" width="0.0340%" height="15" fill="rgb(243,129,54)" fg:x="531" fg:w="1"/><text x="18.2867%" y="911.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.03%)</title><rect x="18.0367%" y="885" width="0.0340%" height="15" fill="rgb(227,119,45)" fg:x="531" fg:w="1"/><text x="18.2867%" y="895.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (1 samples, 0.03%)</title><rect x="18.0367%" y="869" width="0.0340%" height="15" fill="rgb(205,109,36)" fg:x="531" fg:w="1"/><text x="18.2867%" y="879.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (1 samples, 0.03%)</title><rect x="18.0367%" y="853" width="0.0340%" height="15" fill="rgb(205,6,39)" fg:x="531" fg:w="1"/><text x="18.2867%" y="863.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (1 samples, 0.03%)</title><rect x="18.0367%" y="837" width="0.0340%" height="15" fill="rgb(221,32,16)" fg:x="531" fg:w="1"/><text x="18.2867%" y="847.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="18.0367%" y="821" width="0.0340%" height="15" fill="rgb(228,144,50)" fg:x="531" fg:w="1"/><text x="18.2867%" y="831.50"></text></g><g><title>async_task::runnable::Runnable&lt;M&gt;::run (1 samples, 0.03%)</title><rect x="18.0367%" y="805" width="0.0340%" height="15" fill="rgb(229,201,53)" fg:x="531" fg:w="1"/><text x="18.2867%" y="815.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::run (1 samples, 0.03%)</title><rect x="18.0367%" y="789" width="0.0340%" height="15" fill="rgb(249,153,27)" fg:x="531" fg:w="1"/><text x="18.2867%" y="799.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (1 samples, 0.03%)</title><rect x="18.0367%" y="773" width="0.0340%" height="15" fill="rgb(227,106,25)" fg:x="531" fg:w="1"/><text x="18.2867%" y="783.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::spawn_system_task::{{closure}} (1 samples, 0.03%)</title><rect x="18.0367%" y="757" width="0.0340%" height="15" fill="rgb(230,65,29)" fg:x="531" fg:w="1"/><text x="18.2867%" y="767.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.03%)</title><rect x="18.0367%" y="741" width="0.0340%" height="15" fill="rgb(221,57,46)" fg:x="531" fg:w="1"/><text x="18.2867%" y="751.50"></text></g><g><title>std::panicking::try (1 samples, 0.03%)</title><rect x="18.0367%" y="725" width="0.0340%" height="15" fill="rgb(229,161,17)" fg:x="531" fg:w="1"/><text x="18.2867%" y="735.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.03%)</title><rect x="18.0367%" y="709" width="0.0340%" height="15" fill="rgb(222,213,11)" fg:x="531" fg:w="1"/><text x="18.2867%" y="719.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.03%)</title><rect x="18.0367%" y="693" width="0.0340%" height="15" fill="rgb(235,35,13)" fg:x="531" fg:w="1"/><text x="18.2867%" y="703.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.03%)</title><rect x="18.0367%" y="677" width="0.0340%" height="15" fill="rgb(233,158,34)" fg:x="531" fg:w="1"/><text x="18.2867%" y="687.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::spawn_system_task::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="18.0367%" y="661" width="0.0340%" height="15" fill="rgb(215,151,48)" fg:x="531" fg:w="1"/><text x="18.2867%" y="671.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (1 samples, 0.03%)</title><rect x="18.0367%" y="645" width="0.0340%" height="15" fill="rgb(229,84,14)" fg:x="531" fg:w="1"/><text x="18.2867%" y="655.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;fn(F0,F1,F2,F3,F4,F5,F6,F7,F8,F9) .&gt; Out&gt;&gt;::run (1 samples, 0.03%)</title><rect x="18.0367%" y="629" width="0.0340%" height="15" fill="rgb(229,68,14)" fg:x="531" fg:w="1"/><text x="18.2867%" y="639.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;fn(F0,F1,F2,F3,F4,F5,F6,F7,F8,F9) .&gt; Out&gt;&gt;::run::call_inner (1 samples, 0.03%)</title><rect x="18.0367%" y="613" width="0.0340%" height="15" fill="rgb(243,106,26)" fg:x="531" fg:w="1"/><text x="18.2867%" y="623.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.03%)</title><rect x="18.0367%" y="597" width="0.0340%" height="15" fill="rgb(206,45,38)" fg:x="531" fg:w="1"/><text x="18.2867%" y="607.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1 samples, 0.03%)</title><rect x="18.0367%" y="581" width="0.0340%" height="15" fill="rgb(226,6,15)" fg:x="531" fg:w="1"/><text x="18.2867%" y="591.50"></text></g><g><title>game_render::pbr::prepare_materials (1 samples, 0.03%)</title><rect x="18.0367%" y="565" width="0.0340%" height="15" fill="rgb(232,22,54)" fg:x="531" fg:w="1"/><text x="18.2867%" y="575.50"></text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (1 samples, 0.03%)</title><rect x="18.0367%" y="549" width="0.0340%" height="15" fill="rgb(229,222,32)" fg:x="531" fg:w="1"/><text x="18.2867%" y="559.50"></text></g><g><title>wgpu::Device::create_buffer (1 samples, 0.03%)</title><rect x="18.0367%" y="533" width="0.0340%" height="15" fill="rgb(228,62,29)" fg:x="531" fg:w="1"/><text x="18.2867%" y="543.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_create_buffer (1 samples, 0.03%)</title><rect x="18.0367%" y="517" width="0.0340%" height="15" fill="rgb(251,103,34)" fg:x="531" fg:w="1"/><text x="18.2867%" y="527.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::device_create_buffer (1 samples, 0.03%)</title><rect x="18.0367%" y="501" width="0.0340%" height="15" fill="rgb(233,12,30)" fg:x="531" fg:w="1"/><text x="18.2867%" y="511.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (1 samples, 0.03%)</title><rect x="18.0367%" y="485" width="0.0340%" height="15" fill="rgb(238,52,0)" fg:x="531" fg:w="1"/><text x="18.2867%" y="495.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_buffer (1 samples, 0.03%)</title><rect x="18.0367%" y="469" width="0.0340%" height="15" fill="rgb(223,98,5)" fg:x="531" fg:w="1"/><text x="18.2867%" y="479.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_buffer (1 samples, 0.03%)</title><rect x="18.0367%" y="453" width="0.0340%" height="15" fill="rgb(228,75,37)" fg:x="531" fg:w="1"/><text x="18.2867%" y="463.50"></text></g><g><title>ash::device::Device::create_buffer (1 samples, 0.03%)</title><rect x="18.0367%" y="437" width="0.0340%" height="15" fill="rgb(205,115,49)" fg:x="531" fg:w="1"/><text x="18.2867%" y="447.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="18.0367%" y="421" width="0.0340%" height="15" fill="rgb(250,154,43)" fg:x="531" fg:w="1"/><text x="18.2867%" y="431.50"></text></g><g><title>malloc (1 samples, 0.03%)</title><rect x="18.0367%" y="405" width="0.0340%" height="15" fill="rgb(226,43,29)" fg:x="531" fg:w="1"/><text x="18.2867%" y="415.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="18.0367%" y="389" width="0.0340%" height="15" fill="rgb(249,228,39)" fg:x="531" fg:w="1"/><text x="18.2867%" y="399.50"></text></g><g><title>futures_lite::future::block_on (458 samples, 15.56%)</title><rect x="18.0707%" y="1173" width="15.5571%" height="15" fill="rgb(216,79,43)" fg:x="532" fg:w="458"/><text x="18.3207%" y="1183.50">futures_lite::future::bl..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (458 samples, 15.56%)</title><rect x="18.0707%" y="1157" width="15.5571%" height="15" fill="rgb(228,95,12)" fg:x="532" fg:w="458"/><text x="18.3207%" y="1167.50">std::thread::local::Loca..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (458 samples, 15.56%)</title><rect x="18.0707%" y="1141" width="15.5571%" height="15" fill="rgb(249,221,15)" fg:x="532" fg:w="458"/><text x="18.3207%" y="1151.50">std::thread::local::Loca..</text></g><g><title>futures_lite::future::block_on::{{closure}} (458 samples, 15.56%)</title><rect x="18.0707%" y="1125" width="15.5571%" height="15" fill="rgb(233,34,13)" fg:x="532" fg:w="458"/><text x="18.3207%" y="1135.50">futures_lite::future::bl..</text></g><g><title>async_executor::Executor::run::{{closure}} (458 samples, 15.56%)</title><rect x="18.0707%" y="1109" width="15.5571%" height="15" fill="rgb(214,103,39)" fg:x="532" fg:w="458"/><text x="18.3207%" y="1119.50">async_executor::Executor..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (458 samples, 15.56%)</title><rect x="18.0707%" y="1093" width="15.5571%" height="15" fill="rgb(251,126,39)" fg:x="532" fg:w="458"/><text x="18.3207%" y="1103.50">&lt;futures_lite::future::O..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (458 samples, 15.56%)</title><rect x="18.0707%" y="1077" width="15.5571%" height="15" fill="rgb(214,216,36)" fg:x="532" fg:w="458"/><text x="18.3207%" y="1087.50">async_executor::Executor..</text></g><g><title>async_task::runnable::Runnable&lt;M&gt;::run (458 samples, 15.56%)</title><rect x="18.0707%" y="1061" width="15.5571%" height="15" fill="rgb(220,221,8)" fg:x="532" fg:w="458"/><text x="18.3207%" y="1071.50">async_task::runnable::Ru..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::run (458 samples, 15.56%)</title><rect x="18.0707%" y="1045" width="15.5571%" height="15" fill="rgb(240,216,3)" fg:x="532" fg:w="458"/><text x="18.3207%" y="1055.50">async_task::raw::RawTask..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (458 samples, 15.56%)</title><rect x="18.0707%" y="1029" width="15.5571%" height="15" fill="rgb(232,218,17)" fg:x="532" fg:w="458"/><text x="18.3207%" y="1039.50">async_executor::Executor..</text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::spawn_system_task::{{closure}} (458 samples, 15.56%)</title><rect x="18.0707%" y="1013" width="15.5571%" height="15" fill="rgb(229,163,45)" fg:x="532" fg:w="458"/><text x="18.3207%" y="1023.50">bevy_ecs::schedule::exec..</text></g><g><title>std::panic::catch_unwind (458 samples, 15.56%)</title><rect x="18.0707%" y="997" width="15.5571%" height="15" fill="rgb(231,110,42)" fg:x="532" fg:w="458"/><text x="18.3207%" y="1007.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (458 samples, 15.56%)</title><rect x="18.0707%" y="981" width="15.5571%" height="15" fill="rgb(208,170,48)" fg:x="532" fg:w="458"/><text x="18.3207%" y="991.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (458 samples, 15.56%)</title><rect x="18.0707%" y="965" width="15.5571%" height="15" fill="rgb(239,116,25)" fg:x="532" fg:w="458"/><text x="18.3207%" y="975.50">std::panicking::try::do_..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (458 samples, 15.56%)</title><rect x="18.0707%" y="949" width="15.5571%" height="15" fill="rgb(219,200,50)" fg:x="532" fg:w="458"/><text x="18.3207%" y="959.50">&lt;core::panic::unwind_saf..</text></g><g><title>core::ops::function::FnOnce::call_once (458 samples, 15.56%)</title><rect x="18.0707%" y="933" width="15.5571%" height="15" fill="rgb(245,200,0)" fg:x="532" fg:w="458"/><text x="18.3207%" y="943.50">core::ops::function::FnO..</text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::spawn_system_task::{{closure}}::{{closure}} (458 samples, 15.56%)</title><rect x="18.0707%" y="917" width="15.5571%" height="15" fill="rgb(245,119,33)" fg:x="532" fg:w="458"/><text x="18.3207%" y="927.50">bevy_ecs::schedule::exec..</text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (458 samples, 15.56%)</title><rect x="18.0707%" y="901" width="15.5571%" height="15" fill="rgb(231,125,12)" fg:x="532" fg:w="458"/><text x="18.3207%" y="911.50">&lt;bevy_ecs::system::funct..</text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;fn(F0,F1,F2,F3,F4,F5,F6,F7,F8,F9) .&gt; Out&gt;&gt;::run (458 samples, 15.56%)</title><rect x="18.0707%" y="885" width="15.5571%" height="15" fill="rgb(216,96,41)" fg:x="532" fg:w="458"/><text x="18.3207%" y="895.50">&lt;Func as bevy_ecs::syste..</text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;fn(F0,F1,F2,F3,F4,F5,F6,F7,F8,F9) .&gt; Out&gt;&gt;::run::call_inner (458 samples, 15.56%)</title><rect x="18.0707%" y="869" width="15.5571%" height="15" fill="rgb(248,43,45)" fg:x="532" fg:w="458"/><text x="18.3207%" y="879.50">&lt;Func as bevy_ecs::syste..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (458 samples, 15.56%)</title><rect x="18.0707%" y="853" width="15.5571%" height="15" fill="rgb(217,222,7)" fg:x="532" fg:w="458"/><text x="18.3207%" y="863.50">core::ops::function::imp..</text></g><g><title>core::ops::function::FnMut::call_mut (458 samples, 15.56%)</title><rect x="18.0707%" y="837" width="15.5571%" height="15" fill="rgb(233,28,6)" fg:x="532" fg:w="458"/><text x="18.3207%" y="847.50">core::ops::function::FnM..</text></g><g><title>game_render::pbr::prepare_materials (458 samples, 15.56%)</title><rect x="18.0707%" y="821" width="15.5571%" height="15" fill="rgb(231,218,15)" fg:x="532" fg:w="458"/><text x="18.3207%" y="831.50">game_render::pbr::prepar..</text></g><g><title>wgpu::Queue::write_texture (458 samples, 15.56%)</title><rect x="18.0707%" y="805" width="15.5571%" height="15" fill="rgb(226,171,48)" fg:x="532" fg:w="458"/><text x="18.3207%" y="815.50">wgpu::Queue::write_textu..</text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::queue_write_texture (458 samples, 15.56%)</title><rect x="18.0707%" y="789" width="15.5571%" height="15" fill="rgb(235,201,9)" fg:x="532" fg:w="458"/><text x="18.3207%" y="799.50">&lt;T as wgpu::context::Dyn..</text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::queue_write_texture (458 samples, 15.56%)</title><rect x="18.0707%" y="773" width="15.5571%" height="15" fill="rgb(217,80,15)" fg:x="532" fg:w="458"/><text x="18.3207%" y="783.50">&lt;wgpu::backend::direct::..</text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_texture (458 samples, 15.56%)</title><rect x="18.0707%" y="757" width="15.5571%" height="15" fill="rgb(219,152,8)" fg:x="532" fg:w="458"/><text x="18.3207%" y="767.50">wgpu_core::device::queue..</text></g><g><title>core::intrinsics::copy_nonoverlapping (458 samples, 15.56%)</title><rect x="18.0707%" y="741" width="15.5571%" height="15" fill="rgb(243,107,38)" fg:x="532" fg:w="458"/><text x="18.3207%" y="751.50">core::intrinsics::copy_n..</text></g><g><title>[libc.so.6] (458 samples, 15.56%)</title><rect x="18.0707%" y="725" width="15.5571%" height="15" fill="rgb(231,17,5)" fg:x="532" fg:w="458"/><text x="18.3207%" y="735.50">[libc.so.6]</text></g><g><title>[unknown] (36 samples, 1.22%)</title><rect x="32.4049%" y="709" width="1.2228%" height="15" fill="rgb(209,25,54)" fg:x="954" fg:w="36"/><text x="32.6549%" y="719.50"></text></g><g><title>[unknown] (23 samples, 0.78%)</title><rect x="32.8465%" y="693" width="0.7812%" height="15" fill="rgb(219,0,2)" fg:x="967" fg:w="23"/><text x="33.0965%" y="703.50"></text></g><g><title>[unknown] (21 samples, 0.71%)</title><rect x="32.9144%" y="677" width="0.7133%" height="15" fill="rgb(246,9,5)" fg:x="969" fg:w="21"/><text x="33.1644%" y="687.50"></text></g><g><title>[unknown] (21 samples, 0.71%)</title><rect x="32.9144%" y="661" width="0.7133%" height="15" fill="rgb(226,159,4)" fg:x="969" fg:w="21"/><text x="33.1644%" y="671.50"></text></g><g><title>[unknown] (19 samples, 0.65%)</title><rect x="32.9823%" y="645" width="0.6454%" height="15" fill="rgb(219,175,34)" fg:x="971" fg:w="19"/><text x="33.2323%" y="655.50"></text></g><g><title>[unknown] (17 samples, 0.58%)</title><rect x="33.0503%" y="629" width="0.5774%" height="15" fill="rgb(236,10,46)" fg:x="973" fg:w="17"/><text x="33.3003%" y="639.50"></text></g><g><title>[unknown] (16 samples, 0.54%)</title><rect x="33.0842%" y="613" width="0.5435%" height="15" fill="rgb(240,211,16)" fg:x="974" fg:w="16"/><text x="33.3342%" y="623.50"></text></g><g><title>[unknown] (16 samples, 0.54%)</title><rect x="33.0842%" y="597" width="0.5435%" height="15" fill="rgb(205,3,43)" fg:x="974" fg:w="16"/><text x="33.3342%" y="607.50"></text></g><g><title>[unknown] (13 samples, 0.44%)</title><rect x="33.1861%" y="581" width="0.4416%" height="15" fill="rgb(245,7,22)" fg:x="977" fg:w="13"/><text x="33.4361%" y="591.50"></text></g><g><title>[unknown] (13 samples, 0.44%)</title><rect x="33.1861%" y="565" width="0.4416%" height="15" fill="rgb(239,132,32)" fg:x="977" fg:w="13"/><text x="33.4361%" y="575.50"></text></g><g><title>[unknown] (10 samples, 0.34%)</title><rect x="33.2880%" y="549" width="0.3397%" height="15" fill="rgb(228,202,34)" fg:x="980" fg:w="10"/><text x="33.5380%" y="559.50"></text></g><g><title>[unknown] (9 samples, 0.31%)</title><rect x="33.3220%" y="533" width="0.3057%" height="15" fill="rgb(254,200,22)" fg:x="981" fg:w="9"/><text x="33.5720%" y="543.50"></text></g><g><title>[unknown] (9 samples, 0.31%)</title><rect x="33.3220%" y="517" width="0.3057%" height="15" fill="rgb(219,10,39)" fg:x="981" fg:w="9"/><text x="33.5720%" y="527.50"></text></g><g><title>[unknown] (9 samples, 0.31%)</title><rect x="33.3220%" y="501" width="0.3057%" height="15" fill="rgb(226,210,39)" fg:x="981" fg:w="9"/><text x="33.5720%" y="511.50"></text></g><g><title>[unknown] (9 samples, 0.31%)</title><rect x="33.3220%" y="485" width="0.3057%" height="15" fill="rgb(208,219,16)" fg:x="981" fg:w="9"/><text x="33.5720%" y="495.50"></text></g><g><title>TaskPool_(27) (476 samples, 16.17%)</title><rect x="17.4932%" y="1205" width="16.1685%" height="15" fill="rgb(216,158,51)" fg:x="515" fg:w="476"/><text x="17.7432%" y="1215.50">TaskPool_(27)</text></g><g><title>[unknown] (461 samples, 15.66%)</title><rect x="18.0027%" y="1189" width="15.6590%" height="15" fill="rgb(233,14,44)" fg:x="530" fg:w="461"/><text x="18.2527%" y="1199.50">[unknown]</text></g><g><title>game_render::pbr::prepare_materials (1 samples, 0.03%)</title><rect x="33.6277%" y="1173" width="0.0340%" height="15" fill="rgb(237,97,39)" fg:x="990" fg:w="1"/><text x="33.8777%" y="1183.50"></text></g><g><title>wgpu::Device::create_texture (1 samples, 0.03%)</title><rect x="33.6277%" y="1157" width="0.0340%" height="15" fill="rgb(218,198,43)" fg:x="990" fg:w="1"/><text x="33.8777%" y="1167.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_create_texture (1 samples, 0.03%)</title><rect x="33.6277%" y="1141" width="0.0340%" height="15" fill="rgb(231,104,20)" fg:x="990" fg:w="1"/><text x="33.8777%" y="1151.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::device_create_texture (1 samples, 0.03%)</title><rect x="33.6277%" y="1125" width="0.0340%" height="15" fill="rgb(254,36,13)" fg:x="990" fg:w="1"/><text x="33.8777%" y="1135.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_texture (1 samples, 0.03%)</title><rect x="33.6277%" y="1109" width="0.0340%" height="15" fill="rgb(248,14,50)" fg:x="990" fg:w="1"/><text x="33.8777%" y="1119.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_texture (1 samples, 0.03%)</title><rect x="33.6277%" y="1093" width="0.0340%" height="15" fill="rgb(217,107,29)" fg:x="990" fg:w="1"/><text x="33.8777%" y="1103.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_texture (1 samples, 0.03%)</title><rect x="33.6277%" y="1077" width="0.0340%" height="15" fill="rgb(251,169,33)" fg:x="990" fg:w="1"/><text x="33.8777%" y="1087.50"></text></g><g><title>ash::device::Device::create_image (1 samples, 0.03%)</title><rect x="33.6277%" y="1061" width="0.0340%" height="15" fill="rgb(217,108,32)" fg:x="990" fg:w="1"/><text x="33.8777%" y="1071.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="33.6277%" y="1045" width="0.0340%" height="15" fill="rgb(219,66,42)" fg:x="990" fg:w="1"/><text x="33.8777%" y="1055.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="33.6277%" y="1029" width="0.0340%" height="15" fill="rgb(206,180,7)" fg:x="990" fg:w="1"/><text x="33.8777%" y="1039.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="33.6277%" y="1013" width="0.0340%" height="15" fill="rgb(208,226,31)" fg:x="990" fg:w="1"/><text x="33.8777%" y="1023.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="33.6277%" y="997" width="0.0340%" height="15" fill="rgb(218,26,49)" fg:x="990" fg:w="1"/><text x="33.8777%" y="1007.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="33.6277%" y="981" width="0.0340%" height="15" fill="rgb(233,197,48)" fg:x="990" fg:w="1"/><text x="33.8777%" y="991.50"></text></g><g><title>&lt;async_channel::NonBlocking as async_channel::Strategy&gt;::poll (1 samples, 0.03%)</title><rect x="33.6617%" y="709" width="0.0340%" height="15" fill="rgb(252,181,51)" fg:x="991" fg:w="1"/><text x="33.9117%" y="719.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.07%)</title><rect x="33.6617%" y="741" width="0.0679%" height="15" fill="rgb(253,90,19)" fg:x="991" fg:w="2"/><text x="33.9117%" y="751.50"></text></g><g><title>async_channel::Recv&lt;T&gt;::run_with_strategy (2 samples, 0.07%)</title><rect x="33.6617%" y="725" width="0.0679%" height="15" fill="rgb(215,171,30)" fg:x="991" fg:w="2"/><text x="33.9117%" y="735.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (1 samples, 0.03%)</title><rect x="33.6957%" y="709" width="0.0340%" height="15" fill="rgb(214,222,9)" fg:x="992" fg:w="1"/><text x="33.9457%" y="719.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (1 samples, 0.03%)</title><rect x="33.6957%" y="693" width="0.0340%" height="15" fill="rgb(223,3,22)" fg:x="992" fg:w="1"/><text x="33.9457%" y="703.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (1 samples, 0.03%)</title><rect x="33.6957%" y="677" width="0.0340%" height="15" fill="rgb(225,196,46)" fg:x="992" fg:w="1"/><text x="33.9457%" y="687.50"></text></g><g><title>async_executor::Ticker::runnable::{{closure}} (1 samples, 0.03%)</title><rect x="33.7296%" y="693" width="0.0340%" height="15" fill="rgb(209,110,37)" fg:x="993" fg:w="1"/><text x="33.9796%" y="703.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (1 samples, 0.03%)</title><rect x="33.7296%" y="677" width="0.0340%" height="15" fill="rgb(249,89,12)" fg:x="993" fg:w="1"/><text x="33.9796%" y="687.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.03%)</title><rect x="33.7296%" y="661" width="0.0340%" height="15" fill="rgb(226,27,33)" fg:x="993" fg:w="1"/><text x="33.9796%" y="671.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="33.7296%" y="645" width="0.0340%" height="15" fill="rgb(213,82,22)" fg:x="993" fg:w="1"/><text x="33.9796%" y="655.50"></text></g><g><title>async_executor::Ticker::runnable::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="33.7296%" y="629" width="0.0340%" height="15" fill="rgb(248,140,0)" fg:x="993" fg:w="1"/><text x="33.9796%" y="639.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (1 samples, 0.03%)</title><rect x="33.7296%" y="613" width="0.0340%" height="15" fill="rgb(228,106,3)" fg:x="993" fg:w="1"/><text x="33.9796%" y="623.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (1 samples, 0.03%)</title><rect x="33.7296%" y="597" width="0.0340%" height="15" fill="rgb(209,23,37)" fg:x="993" fg:w="1"/><text x="33.9796%" y="607.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (4 samples, 0.14%)</title><rect x="33.6617%" y="757" width="0.1359%" height="15" fill="rgb(241,93,50)" fg:x="991" fg:w="4"/><text x="33.9117%" y="767.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}}::{{closure}}::{{closure}}::{{closure}} (2 samples, 0.07%)</title><rect x="33.7296%" y="741" width="0.0679%" height="15" fill="rgb(253,46,43)" fg:x="993" fg:w="2"/><text x="33.9796%" y="751.50"></text></g><g><title>async_executor::LocalExecutor::tick::{{closure}} (2 samples, 0.07%)</title><rect x="33.7296%" y="725" width="0.0679%" height="15" fill="rgb(226,206,43)" fg:x="993" fg:w="2"/><text x="33.9796%" y="735.50"></text></g><g><title>async_executor::Executor::tick::{{closure}} (2 samples, 0.07%)</title><rect x="33.7296%" y="709" width="0.0679%" height="15" fill="rgb(217,54,7)" fg:x="993" fg:w="2"/><text x="33.9796%" y="719.50"></text></g><g><title>async_lock::once_cell::OnceCell&lt;T&gt;::get_or_try_init_blocking (1 samples, 0.03%)</title><rect x="33.7636%" y="693" width="0.0340%" height="15" fill="rgb(223,5,52)" fg:x="994" fg:w="1"/><text x="34.0136%" y="703.50"></text></g><g><title>async_lock::once_cell::now_or_never (1 samples, 0.03%)</title><rect x="33.7636%" y="677" width="0.0340%" height="15" fill="rgb(206,52,46)" fg:x="994" fg:w="1"/><text x="34.0136%" y="687.50"></text></g><g><title>async_lock::once_cell::OnceCell&lt;T&gt;::initialize_or_wait::{{closure}} (1 samples, 0.03%)</title><rect x="33.7636%" y="661" width="0.0340%" height="15" fill="rgb(253,136,11)" fg:x="994" fg:w="1"/><text x="34.0136%" y="671.50"></text></g><g><title>async_lock::once_cell::OnceCell&lt;T&gt;::get_or_try_init_blocking::{{closure}} (1 samples, 0.03%)</title><rect x="33.7636%" y="645" width="0.0340%" height="15" fill="rgb(208,106,33)" fg:x="994" fg:w="1"/><text x="34.0136%" y="655.50"></text></g><g><title>async_lock::once_cell::OnceCell&lt;T&gt;::get_or_init_blocking::{{closure}} (1 samples, 0.03%)</title><rect x="33.7636%" y="629" width="0.0340%" height="15" fill="rgb(206,54,4)" fg:x="994" fg:w="1"/><text x="34.0136%" y="639.50"></text></g><g><title>async_executor::Executor::state::{{closure}} (1 samples, 0.03%)</title><rect x="33.7636%" y="613" width="0.0340%" height="15" fill="rgb(213,3,15)" fg:x="994" fg:w="1"/><text x="34.0136%" y="623.50"></text></g><g><title>async_executor::State::new (1 samples, 0.03%)</title><rect x="33.7636%" y="597" width="0.0340%" height="15" fill="rgb(252,211,39)" fg:x="994" fg:w="1"/><text x="34.0136%" y="607.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::unbounded (1 samples, 0.03%)</title><rect x="33.7636%" y="581" width="0.0340%" height="15" fill="rgb(223,6,36)" fg:x="994" fg:w="1"/><text x="34.0136%" y="591.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="33.7636%" y="565" width="0.0340%" height="15" fill="rgb(252,169,45)" fg:x="994" fg:w="1"/><text x="34.0136%" y="575.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.03%)</title><rect x="33.7636%" y="549" width="0.0340%" height="15" fill="rgb(212,48,26)" fg:x="994" fg:w="1"/><text x="34.0136%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.03%)</title><rect x="33.7636%" y="533" width="0.0340%" height="15" fill="rgb(251,102,48)" fg:x="994" fg:w="1"/><text x="34.0136%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.03%)</title><rect x="33.7636%" y="517" width="0.0340%" height="15" fill="rgb(243,208,16)" fg:x="994" fg:w="1"/><text x="34.0136%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.03%)</title><rect x="33.7636%" y="501" width="0.0340%" height="15" fill="rgb(219,96,24)" fg:x="994" fg:w="1"/><text x="34.0136%" y="511.50"></text></g><g><title>__rdl_alloc (1 samples, 0.03%)</title><rect x="33.7636%" y="485" width="0.0340%" height="15" fill="rgb(219,33,29)" fg:x="994" fg:w="1"/><text x="34.0136%" y="495.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.03%)</title><rect x="33.7636%" y="469" width="0.0340%" height="15" fill="rgb(223,176,5)" fg:x="994" fg:w="1"/><text x="34.0136%" y="479.50"></text></g><g><title>std::sys::unix::alloc::aligned_malloc (1 samples, 0.03%)</title><rect x="33.7636%" y="453" width="0.0340%" height="15" fill="rgb(228,140,14)" fg:x="994" fg:w="1"/><text x="34.0136%" y="463.50"></text></g><g><title>posix_memalign (1 samples, 0.03%)</title><rect x="33.7636%" y="437" width="0.0340%" height="15" fill="rgb(217,179,31)" fg:x="994" fg:w="1"/><text x="34.0136%" y="447.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="33.7636%" y="421" width="0.0340%" height="15" fill="rgb(230,9,30)" fg:x="994" fg:w="1"/><text x="34.0136%" y="431.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="33.7636%" y="405" width="0.0340%" height="15" fill="rgb(230,136,20)" fg:x="994" fg:w="1"/><text x="34.0136%" y="415.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="33.7636%" y="389" width="0.0340%" height="15" fill="rgb(215,210,22)" fg:x="994" fg:w="1"/><text x="34.0136%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="33.7636%" y="373" width="0.0340%" height="15" fill="rgb(218,43,5)" fg:x="994" fg:w="1"/><text x="34.0136%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="33.7636%" y="357" width="0.0340%" height="15" fill="rgb(216,11,5)" fg:x="994" fg:w="1"/><text x="34.0136%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="33.7636%" y="341" width="0.0340%" height="15" fill="rgb(209,82,29)" fg:x="994" fg:w="1"/><text x="34.0136%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="33.7636%" y="325" width="0.0340%" height="15" fill="rgb(244,115,12)" fg:x="994" fg:w="1"/><text x="34.0136%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="33.7636%" y="309" width="0.0340%" height="15" fill="rgb(222,82,18)" fg:x="994" fg:w="1"/><text x="34.0136%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="33.7636%" y="293" width="0.0340%" height="15" fill="rgb(249,227,8)" fg:x="994" fg:w="1"/><text x="34.0136%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="33.7636%" y="277" width="0.0340%" height="15" fill="rgb(253,141,45)" fg:x="994" fg:w="1"/><text x="34.0136%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="33.7636%" y="261" width="0.0340%" height="15" fill="rgb(234,184,4)" fg:x="994" fg:w="1"/><text x="34.0136%" y="271.50"></text></g><g><title>async_executor::steal (7 samples, 0.24%)</title><rect x="33.7976%" y="661" width="0.2378%" height="15" fill="rgb(218,194,23)" fg:x="995" fg:w="7"/><text x="34.0476%" y="671.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::len (7 samples, 0.24%)</title><rect x="33.7976%" y="645" width="0.2378%" height="15" fill="rgb(235,66,41)" fg:x="995" fg:w="7"/><text x="34.0476%" y="655.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::len (5 samples, 0.17%)</title><rect x="33.8655%" y="629" width="0.1698%" height="15" fill="rgb(245,217,1)" fg:x="997" fg:w="5"/><text x="34.1155%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (2 samples, 0.07%)</title><rect x="33.9674%" y="613" width="0.0679%" height="15" fill="rgb(229,91,1)" fg:x="1000" fg:w="2"/><text x="34.2174%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.07%)</title><rect x="33.9674%" y="597" width="0.0679%" height="15" fill="rgb(207,101,30)" fg:x="1000" fg:w="2"/><text x="34.2174%" y="607.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (8 samples, 0.27%)</title><rect x="33.7976%" y="677" width="0.2717%" height="15" fill="rgb(223,82,49)" fg:x="995" fg:w="8"/><text x="34.0476%" y="687.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (1 samples, 0.03%)</title><rect x="34.0353%" y="661" width="0.0340%" height="15" fill="rgb(218,167,17)" fg:x="1002" fg:w="1"/><text x="34.2853%" y="671.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (1 samples, 0.03%)</title><rect x="34.0353%" y="645" width="0.0340%" height="15" fill="rgb(208,103,14)" fg:x="1002" fg:w="1"/><text x="34.2853%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.03%)</title><rect x="34.0353%" y="629" width="0.0340%" height="15" fill="rgb(238,20,8)" fg:x="1002" fg:w="1"/><text x="34.2853%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.03%)</title><rect x="34.0353%" y="613" width="0.0340%" height="15" fill="rgb(218,80,54)" fg:x="1002" fg:w="1"/><text x="34.2853%" y="623.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (9 samples, 0.31%)</title><rect x="33.7976%" y="741" width="0.3057%" height="15" fill="rgb(240,144,17)" fg:x="995" fg:w="9"/><text x="34.0476%" y="751.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (9 samples, 0.31%)</title><rect x="33.7976%" y="725" width="0.3057%" height="15" fill="rgb(245,27,50)" fg:x="995" fg:w="9"/><text x="34.0476%" y="735.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (9 samples, 0.31%)</title><rect x="33.7976%" y="709" width="0.3057%" height="15" fill="rgb(251,51,7)" fg:x="995" fg:w="9"/><text x="34.0476%" y="719.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (9 samples, 0.31%)</title><rect x="33.7976%" y="693" width="0.3057%" height="15" fill="rgb(245,217,29)" fg:x="995" fg:w="9"/><text x="34.0476%" y="703.50"></text></g><g><title>async_executor::State::notify (1 samples, 0.03%)</title><rect x="34.0693%" y="677" width="0.0340%" height="15" fill="rgb(221,176,29)" fg:x="1003" fg:w="1"/><text x="34.3193%" y="687.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::signal_dependents (1 samples, 0.03%)</title><rect x="34.1372%" y="677" width="0.0340%" height="15" fill="rgb(212,180,24)" fg:x="1005" fg:w="1"/><text x="34.3872%" y="687.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor as bevy_ecs::schedule::executor::SystemExecutor&gt;::run::{{closure}}::{{closure}} (3 samples, 0.10%)</title><rect x="34.1033%" y="693" width="0.1019%" height="15" fill="rgb(254,24,2)" fg:x="1004" fg:w="3"/><text x="34.3533%" y="703.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::spawn_system_tasks (1 samples, 0.03%)</title><rect x="34.1712%" y="677" width="0.0340%" height="15" fill="rgb(230,100,2)" fg:x="1006" fg:w="1"/><text x="34.4212%" y="687.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::can_run (1 samples, 0.03%)</title><rect x="34.1712%" y="661" width="0.0340%" height="15" fill="rgb(219,142,25)" fg:x="1006" fg:w="1"/><text x="34.4212%" y="671.50"></text></g><g><title>bevy_ecs::query::access::Access&lt;T&gt;::extend (1 samples, 0.03%)</title><rect x="34.1712%" y="645" width="0.0340%" height="15" fill="rgb(240,73,43)" fg:x="1006" fg:w="1"/><text x="34.4212%" y="655.50"></text></g><g><title>fixedbitset::FixedBitSet::union_with (1 samples, 0.03%)</title><rect x="34.1712%" y="629" width="0.0340%" height="15" fill="rgb(214,114,15)" fg:x="1006" fg:w="1"/><text x="34.4212%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="34.1712%" y="613" width="0.0340%" height="15" fill="rgb(207,130,4)" fg:x="1006" fg:w="1"/><text x="34.4212%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.03%)</title><rect x="34.1712%" y="597" width="0.0340%" height="15" fill="rgb(221,25,40)" fg:x="1006" fg:w="1"/><text x="34.4212%" y="607.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (5 samples, 0.17%)</title><rect x="34.1033%" y="709" width="0.1698%" height="15" fill="rgb(241,184,7)" fg:x="1004" fg:w="5"/><text x="34.3533%" y="719.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::spawn_system_task::{{closure}} (2 samples, 0.07%)</title><rect x="34.2052%" y="693" width="0.0679%" height="15" fill="rgb(235,159,4)" fg:x="1007" fg:w="2"/><text x="34.4552%" y="703.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.07%)</title><rect x="34.2052%" y="677" width="0.0679%" height="15" fill="rgb(214,87,48)" fg:x="1007" fg:w="2"/><text x="34.4552%" y="687.50"></text></g><g><title>std::panicking::try (2 samples, 0.07%)</title><rect x="34.2052%" y="661" width="0.0679%" height="15" fill="rgb(246,198,24)" fg:x="1007" fg:w="2"/><text x="34.4552%" y="671.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.07%)</title><rect x="34.2052%" y="645" width="0.0679%" height="15" fill="rgb(209,66,40)" fg:x="1007" fg:w="2"/><text x="34.4552%" y="655.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2 samples, 0.07%)</title><rect x="34.2052%" y="629" width="0.0679%" height="15" fill="rgb(233,147,39)" fg:x="1007" fg:w="2"/><text x="34.4552%" y="639.50"></text></g><g><title>core::ops::function::FnOnce::call_once (2 samples, 0.07%)</title><rect x="34.2052%" y="613" width="0.0679%" height="15" fill="rgb(231,145,52)" fg:x="1007" fg:w="2"/><text x="34.4552%" y="623.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::spawn_system_task::{{closure}}::{{closure}} (2 samples, 0.07%)</title><rect x="34.2052%" y="597" width="0.0679%" height="15" fill="rgb(206,20,26)" fg:x="1007" fg:w="2"/><text x="34.4552%" y="607.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (2 samples, 0.07%)</title><rect x="34.2052%" y="581" width="0.0679%" height="15" fill="rgb(238,220,4)" fg:x="1007" fg:w="2"/><text x="34.4552%" y="591.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;fn(F0,F1,F2,F3,F4,F5,F6,F7,F8,F9) .&gt; Out&gt;&gt;::run (1 samples, 0.03%)</title><rect x="34.2391%" y="565" width="0.0340%" height="15" fill="rgb(252,195,42)" fg:x="1008" fg:w="1"/><text x="34.4891%" y="575.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;fn(F0,F1,F2,F3,F4,F5,F6,F7,F8,F9) .&gt; Out&gt;&gt;::run::call_inner (1 samples, 0.03%)</title><rect x="34.2391%" y="549" width="0.0340%" height="15" fill="rgb(209,10,6)" fg:x="1008" fg:w="1"/><text x="34.4891%" y="559.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.03%)</title><rect x="34.2391%" y="533" width="0.0340%" height="15" fill="rgb(229,3,52)" fg:x="1008" fg:w="1"/><text x="34.4891%" y="543.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1 samples, 0.03%)</title><rect x="34.2391%" y="517" width="0.0340%" height="15" fill="rgb(253,49,37)" fg:x="1008" fg:w="1"/><text x="34.4891%" y="527.50"></text></g><g><title>game_render::pbr::prepare_materials (1 samples, 0.03%)</title><rect x="34.2391%" y="501" width="0.0340%" height="15" fill="rgb(240,103,49)" fg:x="1008" fg:w="1"/><text x="34.4891%" y="511.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (19 samples, 0.65%)</title><rect x="33.6617%" y="789" width="0.6454%" height="15" fill="rgb(250,182,30)" fg:x="991" fg:w="19"/><text x="33.9117%" y="799.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (19 samples, 0.65%)</title><rect x="33.6617%" y="773" width="0.6454%" height="15" fill="rgb(248,8,30)" fg:x="991" fg:w="19"/><text x="33.9117%" y="783.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (15 samples, 0.51%)</title><rect x="33.7976%" y="757" width="0.5095%" height="15" fill="rgb(237,120,30)" fg:x="995" fg:w="15"/><text x="34.0476%" y="767.50"></text></g><g><title>async_task::runnable::Runnable&lt;M&gt;::run (6 samples, 0.20%)</title><rect x="34.1033%" y="741" width="0.2038%" height="15" fill="rgb(221,146,34)" fg:x="1004" fg:w="6"/><text x="34.3533%" y="751.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::run (6 samples, 0.20%)</title><rect x="34.1033%" y="725" width="0.2038%" height="15" fill="rgb(242,55,13)" fg:x="1004" fg:w="6"/><text x="34.3533%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (1 samples, 0.03%)</title><rect x="34.2731%" y="709" width="0.0340%" height="15" fill="rgb(242,112,31)" fg:x="1009" fg:w="1"/><text x="34.5231%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.03%)</title><rect x="34.2731%" y="693" width="0.0340%" height="15" fill="rgb(249,192,27)" fg:x="1009" fg:w="1"/><text x="34.5231%" y="703.50"></text></g><g><title>[libc.so.6] (21 samples, 0.71%)</title><rect x="33.6617%" y="1189" width="0.7133%" height="15" fill="rgb(208,204,44)" fg:x="991" fg:w="21"/><text x="33.9117%" y="1199.50"></text></g><g><title>[libc.so.6] (21 samples, 0.71%)</title><rect x="33.6617%" y="1173" width="0.7133%" height="15" fill="rgb(208,93,54)" fg:x="991" fg:w="21"/><text x="33.9117%" y="1183.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (21 samples, 0.71%)</title><rect x="33.6617%" y="1157" width="0.7133%" height="15" fill="rgb(242,1,31)" fg:x="991" fg:w="21"/><text x="33.9117%" y="1167.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (21 samples, 0.71%)</title><rect x="33.6617%" y="1141" width="0.7133%" height="15" fill="rgb(241,83,25)" fg:x="991" fg:w="21"/><text x="33.9117%" y="1151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (21 samples, 0.71%)</title><rect x="33.6617%" y="1125" width="0.7133%" height="15" fill="rgb(205,169,50)" fg:x="991" fg:w="21"/><text x="33.9117%" y="1135.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (21 samples, 0.71%)</title><rect x="33.6617%" y="1109" width="0.7133%" height="15" fill="rgb(239,186,37)" fg:x="991" fg:w="21"/><text x="33.9117%" y="1119.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (21 samples, 0.71%)</title><rect x="33.6617%" y="1093" width="0.7133%" height="15" fill="rgb(205,221,10)" fg:x="991" fg:w="21"/><text x="33.9117%" y="1103.50"></text></g><g><title>std::panic::catch_unwind (21 samples, 0.71%)</title><rect x="33.6617%" y="1077" width="0.7133%" height="15" fill="rgb(218,196,15)" fg:x="991" fg:w="21"/><text x="33.9117%" y="1087.50"></text></g><g><title>std::panicking::try (21 samples, 0.71%)</title><rect x="33.6617%" y="1061" width="0.7133%" height="15" fill="rgb(218,196,35)" fg:x="991" fg:w="21"/><text x="33.9117%" y="1071.50"></text></g><g><title>std::panicking::try::do_call (21 samples, 0.71%)</title><rect x="33.6617%" y="1045" width="0.7133%" height="15" fill="rgb(233,63,24)" fg:x="991" fg:w="21"/><text x="33.9117%" y="1055.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (21 samples, 0.71%)</title><rect x="33.6617%" y="1029" width="0.7133%" height="15" fill="rgb(225,8,4)" fg:x="991" fg:w="21"/><text x="33.9117%" y="1039.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (21 samples, 0.71%)</title><rect x="33.6617%" y="1013" width="0.7133%" height="15" fill="rgb(234,105,35)" fg:x="991" fg:w="21"/><text x="33.9117%" y="1023.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (21 samples, 0.71%)</title><rect x="33.6617%" y="997" width="0.7133%" height="15" fill="rgb(236,21,32)" fg:x="991" fg:w="21"/><text x="33.9117%" y="1007.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (21 samples, 0.71%)</title><rect x="33.6617%" y="981" width="0.7133%" height="15" fill="rgb(228,109,6)" fg:x="991" fg:w="21"/><text x="33.9117%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (21 samples, 0.71%)</title><rect x="33.6617%" y="965" width="0.7133%" height="15" fill="rgb(229,215,31)" fg:x="991" fg:w="21"/><text x="33.9117%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (21 samples, 0.71%)</title><rect x="33.6617%" y="949" width="0.7133%" height="15" fill="rgb(221,52,54)" fg:x="991" fg:w="21"/><text x="33.9117%" y="959.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}}::{{closure}} (21 samples, 0.71%)</title><rect x="33.6617%" y="933" width="0.7133%" height="15" fill="rgb(252,129,43)" fg:x="991" fg:w="21"/><text x="33.9117%" y="943.50"></text></g><g><title>std::panic::catch_unwind (21 samples, 0.71%)</title><rect x="33.6617%" y="917" width="0.7133%" height="15" fill="rgb(248,183,27)" fg:x="991" fg:w="21"/><text x="33.9117%" y="927.50"></text></g><g><title>std::panicking::try (21 samples, 0.71%)</title><rect x="33.6617%" y="901" width="0.7133%" height="15" fill="rgb(250,0,22)" fg:x="991" fg:w="21"/><text x="33.9117%" y="911.50"></text></g><g><title>std::panicking::try::do_call (21 samples, 0.71%)</title><rect x="33.6617%" y="885" width="0.7133%" height="15" fill="rgb(213,166,10)" fg:x="991" fg:w="21"/><text x="33.9117%" y="895.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}}::{{closure}}::{{closure}} (21 samples, 0.71%)</title><rect x="33.6617%" y="869" width="0.7133%" height="15" fill="rgb(207,163,36)" fg:x="991" fg:w="21"/><text x="33.9117%" y="879.50"></text></g><g><title>futures_lite::future::block_on (21 samples, 0.71%)</title><rect x="33.6617%" y="853" width="0.7133%" height="15" fill="rgb(208,122,22)" fg:x="991" fg:w="21"/><text x="33.9117%" y="863.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (21 samples, 0.71%)</title><rect x="33.6617%" y="837" width="0.7133%" height="15" fill="rgb(207,104,49)" fg:x="991" fg:w="21"/><text x="33.9117%" y="847.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (21 samples, 0.71%)</title><rect x="33.6617%" y="821" width="0.7133%" height="15" fill="rgb(248,211,50)" fg:x="991" fg:w="21"/><text x="33.9117%" y="831.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (21 samples, 0.71%)</title><rect x="33.6617%" y="805" width="0.7133%" height="15" fill="rgb(217,13,45)" fg:x="991" fg:w="21"/><text x="33.9117%" y="815.50"></text></g><g><title>parking::Inner::park (2 samples, 0.07%)</title><rect x="34.3071%" y="789" width="0.0679%" height="15" fill="rgb(211,216,49)" fg:x="1010" fg:w="2"/><text x="34.5571%" y="799.50"></text></g><g><title>std::sync::condvar::Condvar::wait (2 samples, 0.07%)</title><rect x="34.3071%" y="773" width="0.0679%" height="15" fill="rgb(221,58,53)" fg:x="1010" fg:w="2"/><text x="34.5571%" y="783.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait (2 samples, 0.07%)</title><rect x="34.3071%" y="757" width="0.0679%" height="15" fill="rgb(220,112,41)" fg:x="1010" fg:w="2"/><text x="34.5571%" y="767.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait_optional_timeout (2 samples, 0.07%)</title><rect x="34.3071%" y="741" width="0.0679%" height="15" fill="rgb(236,38,28)" fg:x="1010" fg:w="2"/><text x="34.5571%" y="751.50"></text></g><g><title>std::sys::unix::futex::futex_wait (2 samples, 0.07%)</title><rect x="34.3071%" y="725" width="0.0679%" height="15" fill="rgb(227,195,22)" fg:x="1010" fg:w="2"/><text x="34.5571%" y="735.50"></text></g><g><title>syscall (2 samples, 0.07%)</title><rect x="34.3071%" y="709" width="0.0679%" height="15" fill="rgb(214,55,33)" fg:x="1010" fg:w="2"/><text x="34.5571%" y="719.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="34.3071%" y="693" width="0.0679%" height="15" fill="rgb(248,80,13)" fg:x="1010" fg:w="2"/><text x="34.5571%" y="703.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="34.3071%" y="677" width="0.0679%" height="15" fill="rgb(238,52,6)" fg:x="1010" fg:w="2"/><text x="34.5571%" y="687.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="34.3071%" y="661" width="0.0679%" height="15" fill="rgb(224,198,47)" fg:x="1010" fg:w="2"/><text x="34.5571%" y="671.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="34.3071%" y="645" width="0.0679%" height="15" fill="rgb(233,171,20)" fg:x="1010" fg:w="2"/><text x="34.5571%" y="655.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="34.3071%" y="629" width="0.0679%" height="15" fill="rgb(241,30,25)" fg:x="1010" fg:w="2"/><text x="34.5571%" y="639.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="34.3071%" y="613" width="0.0679%" height="15" fill="rgb(207,171,38)" fg:x="1010" fg:w="2"/><text x="34.5571%" y="623.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="34.3071%" y="597" width="0.0679%" height="15" fill="rgb(234,70,1)" fg:x="1010" fg:w="2"/><text x="34.5571%" y="607.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="34.3071%" y="581" width="0.0679%" height="15" fill="rgb(232,178,18)" fg:x="1010" fg:w="2"/><text x="34.5571%" y="591.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="34.3071%" y="565" width="0.0679%" height="15" fill="rgb(241,78,40)" fg:x="1010" fg:w="2"/><text x="34.5571%" y="575.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="34.3071%" y="549" width="0.0679%" height="15" fill="rgb(222,35,25)" fg:x="1010" fg:w="2"/><text x="34.5571%" y="559.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (1 samples, 0.03%)</title><rect x="34.3750%" y="1173" width="0.0340%" height="15" fill="rgb(207,92,16)" fg:x="1012" fg:w="1"/><text x="34.6250%" y="1183.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;fn(F0,F1,F2,F3,F4,F5,F6,F7,F8,F9) .&gt; Out&gt;&gt;::run (1 samples, 0.03%)</title><rect x="34.3750%" y="1157" width="0.0340%" height="15" fill="rgb(216,59,51)" fg:x="1012" fg:w="1"/><text x="34.6250%" y="1167.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;fn(F0,F1,F2,F3,F4,F5,F6,F7,F8,F9) .&gt; Out&gt;&gt;::run::call_inner (1 samples, 0.03%)</title><rect x="34.3750%" y="1141" width="0.0340%" height="15" fill="rgb(213,80,28)" fg:x="1012" fg:w="1"/><text x="34.6250%" y="1151.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.03%)</title><rect x="34.3750%" y="1125" width="0.0340%" height="15" fill="rgb(220,93,7)" fg:x="1012" fg:w="1"/><text x="34.6250%" y="1135.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1 samples, 0.03%)</title><rect x="34.3750%" y="1109" width="0.0340%" height="15" fill="rgb(225,24,44)" fg:x="1012" fg:w="1"/><text x="34.6250%" y="1119.50"></text></g><g><title>game_render::pbr::prepare_materials (1 samples, 0.03%)</title><rect x="34.3750%" y="1093" width="0.0340%" height="15" fill="rgb(243,74,40)" fg:x="1012" fg:w="1"/><text x="34.6250%" y="1103.50"></text></g><g><title>wgpu::Device::create_texture (1 samples, 0.03%)</title><rect x="34.3750%" y="1077" width="0.0340%" height="15" fill="rgb(228,39,7)" fg:x="1012" fg:w="1"/><text x="34.6250%" y="1087.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_create_texture (1 samples, 0.03%)</title><rect x="34.3750%" y="1061" width="0.0340%" height="15" fill="rgb(227,79,8)" fg:x="1012" fg:w="1"/><text x="34.6250%" y="1071.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::device_create_texture (1 samples, 0.03%)</title><rect x="34.3750%" y="1045" width="0.0340%" height="15" fill="rgb(236,58,11)" fg:x="1012" fg:w="1"/><text x="34.6250%" y="1055.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_texture (1 samples, 0.03%)</title><rect x="34.3750%" y="1029" width="0.0340%" height="15" fill="rgb(249,63,35)" fg:x="1012" fg:w="1"/><text x="34.6250%" y="1039.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_texture (1 samples, 0.03%)</title><rect x="34.3750%" y="1013" width="0.0340%" height="15" fill="rgb(252,114,16)" fg:x="1012" fg:w="1"/><text x="34.6250%" y="1023.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_texture (1 samples, 0.03%)</title><rect x="34.3750%" y="997" width="0.0340%" height="15" fill="rgb(254,151,24)" fg:x="1012" fg:w="1"/><text x="34.6250%" y="1007.50"></text></g><g><title>ash::device::Device::create_image (1 samples, 0.03%)</title><rect x="34.3750%" y="981" width="0.0340%" height="15" fill="rgb(253,54,39)" fg:x="1012" fg:w="1"/><text x="34.6250%" y="991.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="34.3750%" y="965" width="0.0340%" height="15" fill="rgb(243,25,45)" fg:x="1012" fg:w="1"/><text x="34.6250%" y="975.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="34.3750%" y="949" width="0.0340%" height="15" fill="rgb(234,134,9)" fg:x="1012" fg:w="1"/><text x="34.6250%" y="959.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="34.3750%" y="933" width="0.0340%" height="15" fill="rgb(227,166,31)" fg:x="1012" fg:w="1"/><text x="34.6250%" y="943.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="34.3750%" y="917" width="0.0340%" height="15" fill="rgb(245,143,41)" fg:x="1012" fg:w="1"/><text x="34.6250%" y="927.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="34.3750%" y="901" width="0.0340%" height="15" fill="rgb(238,181,32)" fg:x="1012" fg:w="1"/><text x="34.6250%" y="911.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="34.3750%" y="885" width="0.0340%" height="15" fill="rgb(224,113,18)" fg:x="1012" fg:w="1"/><text x="34.6250%" y="895.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="34.3750%" y="869" width="0.0340%" height="15" fill="rgb(240,229,28)" fg:x="1012" fg:w="1"/><text x="34.6250%" y="879.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (1 samples, 0.03%)</title><rect x="34.4090%" y="1173" width="0.0340%" height="15" fill="rgb(250,185,3)" fg:x="1013" fg:w="1"/><text x="34.6590%" y="1183.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (1 samples, 0.03%)</title><rect x="34.4090%" y="1157" width="0.0340%" height="15" fill="rgb(212,59,25)" fg:x="1013" fg:w="1"/><text x="34.6590%" y="1167.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="34.4090%" y="1141" width="0.0340%" height="15" fill="rgb(221,87,20)" fg:x="1013" fg:w="1"/><text x="34.6590%" y="1151.50"></text></g><g><title>async_task::runnable::Runnable&lt;M&gt;::run (1 samples, 0.03%)</title><rect x="34.4090%" y="1125" width="0.0340%" height="15" fill="rgb(213,74,28)" fg:x="1013" fg:w="1"/><text x="34.6590%" y="1135.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::run (1 samples, 0.03%)</title><rect x="34.4090%" y="1109" width="0.0340%" height="15" fill="rgb(224,132,34)" fg:x="1013" fg:w="1"/><text x="34.6590%" y="1119.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (1 samples, 0.03%)</title><rect x="34.4090%" y="1093" width="0.0340%" height="15" fill="rgb(222,101,24)" fg:x="1013" fg:w="1"/><text x="34.6590%" y="1103.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::spawn_system_task::{{closure}} (1 samples, 0.03%)</title><rect x="34.4090%" y="1077" width="0.0340%" height="15" fill="rgb(254,142,4)" fg:x="1013" fg:w="1"/><text x="34.6590%" y="1087.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.03%)</title><rect x="34.4090%" y="1061" width="0.0340%" height="15" fill="rgb(230,229,49)" fg:x="1013" fg:w="1"/><text x="34.6590%" y="1071.50"></text></g><g><title>std::panicking::try (1 samples, 0.03%)</title><rect x="34.4090%" y="1045" width="0.0340%" height="15" fill="rgb(238,70,47)" fg:x="1013" fg:w="1"/><text x="34.6590%" y="1055.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.03%)</title><rect x="34.4090%" y="1029" width="0.0340%" height="15" fill="rgb(231,160,17)" fg:x="1013" fg:w="1"/><text x="34.6590%" y="1039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.03%)</title><rect x="34.4090%" y="1013" width="0.0340%" height="15" fill="rgb(218,68,53)" fg:x="1013" fg:w="1"/><text x="34.6590%" y="1023.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.03%)</title><rect x="34.4090%" y="997" width="0.0340%" height="15" fill="rgb(236,111,10)" fg:x="1013" fg:w="1"/><text x="34.6590%" y="1007.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::spawn_system_task::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="34.4090%" y="981" width="0.0340%" height="15" fill="rgb(224,34,41)" fg:x="1013" fg:w="1"/><text x="34.6590%" y="991.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (1 samples, 0.03%)</title><rect x="34.4090%" y="965" width="0.0340%" height="15" fill="rgb(241,118,19)" fg:x="1013" fg:w="1"/><text x="34.6590%" y="975.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;fn(F0,F1,F2,F3,F4,F5,F6,F7,F8,F9) .&gt; Out&gt;&gt;::run (1 samples, 0.03%)</title><rect x="34.4090%" y="949" width="0.0340%" height="15" fill="rgb(238,129,25)" fg:x="1013" fg:w="1"/><text x="34.6590%" y="959.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;fn(F0,F1,F2,F3,F4,F5,F6,F7,F8,F9) .&gt; Out&gt;&gt;::run::call_inner (1 samples, 0.03%)</title><rect x="34.4090%" y="933" width="0.0340%" height="15" fill="rgb(238,22,31)" fg:x="1013" fg:w="1"/><text x="34.6590%" y="943.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.03%)</title><rect x="34.4090%" y="917" width="0.0340%" height="15" fill="rgb(222,174,48)" fg:x="1013" fg:w="1"/><text x="34.6590%" y="927.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1 samples, 0.03%)</title><rect x="34.4090%" y="901" width="0.0340%" height="15" fill="rgb(206,152,40)" fg:x="1013" fg:w="1"/><text x="34.6590%" y="911.50"></text></g><g><title>game_render::pbr::prepare_materials (1 samples, 0.03%)</title><rect x="34.4090%" y="885" width="0.0340%" height="15" fill="rgb(218,99,54)" fg:x="1013" fg:w="1"/><text x="34.6590%" y="895.50"></text></g><g><title>wgpu::Device::create_texture (1 samples, 0.03%)</title><rect x="34.4090%" y="869" width="0.0340%" height="15" fill="rgb(220,174,26)" fg:x="1013" fg:w="1"/><text x="34.6590%" y="879.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_create_texture (1 samples, 0.03%)</title><rect x="34.4090%" y="853" width="0.0340%" height="15" fill="rgb(245,116,9)" fg:x="1013" fg:w="1"/><text x="34.6590%" y="863.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::device_create_texture (1 samples, 0.03%)</title><rect x="34.4090%" y="837" width="0.0340%" height="15" fill="rgb(209,72,35)" fg:x="1013" fg:w="1"/><text x="34.6590%" y="847.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_texture (1 samples, 0.03%)</title><rect x="34.4090%" y="821" width="0.0340%" height="15" fill="rgb(226,126,21)" fg:x="1013" fg:w="1"/><text x="34.6590%" y="831.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_texture (1 samples, 0.03%)</title><rect x="34.4090%" y="805" width="0.0340%" height="15" fill="rgb(227,192,1)" fg:x="1013" fg:w="1"/><text x="34.6590%" y="815.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_texture (1 samples, 0.03%)</title><rect x="34.4090%" y="789" width="0.0340%" height="15" fill="rgb(237,180,29)" fg:x="1013" fg:w="1"/><text x="34.6590%" y="799.50"></text></g><g><title>ash::device::Device::create_image (1 samples, 0.03%)</title><rect x="34.4090%" y="773" width="0.0340%" height="15" fill="rgb(230,197,35)" fg:x="1013" fg:w="1"/><text x="34.6590%" y="783.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="34.4090%" y="757" width="0.0340%" height="15" fill="rgb(246,193,31)" fg:x="1013" fg:w="1"/><text x="34.6590%" y="767.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="34.4090%" y="741" width="0.0340%" height="15" fill="rgb(241,36,4)" fg:x="1013" fg:w="1"/><text x="34.6590%" y="751.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="34.4090%" y="725" width="0.0340%" height="15" fill="rgb(241,130,17)" fg:x="1013" fg:w="1"/><text x="34.6590%" y="735.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="34.4090%" y="709" width="0.0340%" height="15" fill="rgb(206,137,32)" fg:x="1013" fg:w="1"/><text x="34.6590%" y="719.50"></text></g><g><title>futures_lite::future::block_on (357 samples, 12.13%)</title><rect x="34.4429%" y="1173" width="12.1264%" height="15" fill="rgb(237,228,51)" fg:x="1014" fg:w="357"/><text x="34.6929%" y="1183.50">futures_lite::futu..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (357 samples, 12.13%)</title><rect x="34.4429%" y="1157" width="12.1264%" height="15" fill="rgb(243,6,42)" fg:x="1014" fg:w="357"/><text x="34.6929%" y="1167.50">std::thread::local..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (357 samples, 12.13%)</title><rect x="34.4429%" y="1141" width="12.1264%" height="15" fill="rgb(251,74,28)" fg:x="1014" fg:w="357"/><text x="34.6929%" y="1151.50">std::thread::local..</text></g><g><title>futures_lite::future::block_on::{{closure}} (357 samples, 12.13%)</title><rect x="34.4429%" y="1125" width="12.1264%" height="15" fill="rgb(218,20,49)" fg:x="1014" fg:w="357"/><text x="34.6929%" y="1135.50">futures_lite::futu..</text></g><g><title>async_executor::Executor::run::{{closure}} (357 samples, 12.13%)</title><rect x="34.4429%" y="1109" width="12.1264%" height="15" fill="rgb(238,28,14)" fg:x="1014" fg:w="357"/><text x="34.6929%" y="1119.50">async_executor::Ex..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (357 samples, 12.13%)</title><rect x="34.4429%" y="1093" width="12.1264%" height="15" fill="rgb(229,40,46)" fg:x="1014" fg:w="357"/><text x="34.6929%" y="1103.50">&lt;futures_lite::fut..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (357 samples, 12.13%)</title><rect x="34.4429%" y="1077" width="12.1264%" height="15" fill="rgb(244,195,20)" fg:x="1014" fg:w="357"/><text x="34.6929%" y="1087.50">async_executor::Ex..</text></g><g><title>async_task::runnable::Runnable&lt;M&gt;::run (357 samples, 12.13%)</title><rect x="34.4429%" y="1061" width="12.1264%" height="15" fill="rgb(253,56,35)" fg:x="1014" fg:w="357"/><text x="34.6929%" y="1071.50">async_task::runnab..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::run (357 samples, 12.13%)</title><rect x="34.4429%" y="1045" width="12.1264%" height="15" fill="rgb(210,149,44)" fg:x="1014" fg:w="357"/><text x="34.6929%" y="1055.50">async_task::raw::R..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (357 samples, 12.13%)</title><rect x="34.4429%" y="1029" width="12.1264%" height="15" fill="rgb(240,135,12)" fg:x="1014" fg:w="357"/><text x="34.6929%" y="1039.50">async_executor::Ex..</text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::spawn_system_task::{{closure}} (357 samples, 12.13%)</title><rect x="34.4429%" y="1013" width="12.1264%" height="15" fill="rgb(251,24,50)" fg:x="1014" fg:w="357"/><text x="34.6929%" y="1023.50">bevy_ecs::schedule..</text></g><g><title>std::panic::catch_unwind (357 samples, 12.13%)</title><rect x="34.4429%" y="997" width="12.1264%" height="15" fill="rgb(243,200,47)" fg:x="1014" fg:w="357"/><text x="34.6929%" y="1007.50">std::panic::catch_..</text></g><g><title>std::panicking::try (357 samples, 12.13%)</title><rect x="34.4429%" y="981" width="12.1264%" height="15" fill="rgb(224,166,26)" fg:x="1014" fg:w="357"/><text x="34.6929%" y="991.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (357 samples, 12.13%)</title><rect x="34.4429%" y="965" width="12.1264%" height="15" fill="rgb(233,0,47)" fg:x="1014" fg:w="357"/><text x="34.6929%" y="975.50">std::panicking::tr..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (357 samples, 12.13%)</title><rect x="34.4429%" y="949" width="12.1264%" height="15" fill="rgb(253,80,5)" fg:x="1014" fg:w="357"/><text x="34.6929%" y="959.50">&lt;core::panic::unwi..</text></g><g><title>core::ops::function::FnOnce::call_once (357 samples, 12.13%)</title><rect x="34.4429%" y="933" width="12.1264%" height="15" fill="rgb(214,133,25)" fg:x="1014" fg:w="357"/><text x="34.6929%" y="943.50">core::ops::functio..</text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::spawn_system_task::{{closure}}::{{closure}} (357 samples, 12.13%)</title><rect x="34.4429%" y="917" width="12.1264%" height="15" fill="rgb(209,27,14)" fg:x="1014" fg:w="357"/><text x="34.6929%" y="927.50">bevy_ecs::schedule..</text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (357 samples, 12.13%)</title><rect x="34.4429%" y="901" width="12.1264%" height="15" fill="rgb(219,102,51)" fg:x="1014" fg:w="357"/><text x="34.6929%" y="911.50">&lt;bevy_ecs::system:..</text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;fn(F0,F1,F2,F3,F4,F5,F6,F7,F8,F9) .&gt; Out&gt;&gt;::run (357 samples, 12.13%)</title><rect x="34.4429%" y="885" width="12.1264%" height="15" fill="rgb(237,18,16)" fg:x="1014" fg:w="357"/><text x="34.6929%" y="895.50">&lt;Func as bevy_ecs:..</text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;fn(F0,F1,F2,F3,F4,F5,F6,F7,F8,F9) .&gt; Out&gt;&gt;::run::call_inner (357 samples, 12.13%)</title><rect x="34.4429%" y="869" width="12.1264%" height="15" fill="rgb(241,85,17)" fg:x="1014" fg:w="357"/><text x="34.6929%" y="879.50">&lt;Func as bevy_ecs:..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (357 samples, 12.13%)</title><rect x="34.4429%" y="853" width="12.1264%" height="15" fill="rgb(236,90,42)" fg:x="1014" fg:w="357"/><text x="34.6929%" y="863.50">core::ops::functio..</text></g><g><title>core::ops::function::FnMut::call_mut (357 samples, 12.13%)</title><rect x="34.4429%" y="837" width="12.1264%" height="15" fill="rgb(249,57,21)" fg:x="1014" fg:w="357"/><text x="34.6929%" y="847.50">core::ops::functio..</text></g><g><title>game_render::pbr::prepare_materials (357 samples, 12.13%)</title><rect x="34.4429%" y="821" width="12.1264%" height="15" fill="rgb(243,12,36)" fg:x="1014" fg:w="357"/><text x="34.6929%" y="831.50">game_render::pbr::..</text></g><g><title>wgpu::Queue::write_texture (357 samples, 12.13%)</title><rect x="34.4429%" y="805" width="12.1264%" height="15" fill="rgb(253,128,47)" fg:x="1014" fg:w="357"/><text x="34.6929%" y="815.50">wgpu::Queue::write..</text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::queue_write_texture (357 samples, 12.13%)</title><rect x="34.4429%" y="789" width="12.1264%" height="15" fill="rgb(207,33,20)" fg:x="1014" fg:w="357"/><text x="34.6929%" y="799.50">&lt;T as wgpu::contex..</text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::queue_write_texture (357 samples, 12.13%)</title><rect x="34.4429%" y="773" width="12.1264%" height="15" fill="rgb(233,215,35)" fg:x="1014" fg:w="357"/><text x="34.6929%" y="783.50">&lt;wgpu::backend::di..</text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_texture (357 samples, 12.13%)</title><rect x="34.4429%" y="757" width="12.1264%" height="15" fill="rgb(249,188,52)" fg:x="1014" fg:w="357"/><text x="34.6929%" y="767.50">wgpu_core::device:..</text></g><g><title>core::intrinsics::copy_nonoverlapping (357 samples, 12.13%)</title><rect x="34.4429%" y="741" width="12.1264%" height="15" fill="rgb(225,12,32)" fg:x="1014" fg:w="357"/><text x="34.6929%" y="751.50">core::intrinsics::..</text></g><g><title>[libc.so.6] (357 samples, 12.13%)</title><rect x="34.4429%" y="725" width="12.1264%" height="15" fill="rgb(247,98,14)" fg:x="1014" fg:w="357"/><text x="34.6929%" y="735.50">[libc.so.6]</text></g><g><title>[unknown] (34 samples, 1.15%)</title><rect x="45.4144%" y="709" width="1.1549%" height="15" fill="rgb(247,219,48)" fg:x="1337" fg:w="34"/><text x="45.6644%" y="719.50"></text></g><g><title>[unknown] (29 samples, 0.99%)</title><rect x="45.5842%" y="693" width="0.9851%" height="15" fill="rgb(253,60,48)" fg:x="1342" fg:w="29"/><text x="45.8342%" y="703.50"></text></g><g><title>[unknown] (29 samples, 0.99%)</title><rect x="45.5842%" y="677" width="0.9851%" height="15" fill="rgb(245,15,52)" fg:x="1342" fg:w="29"/><text x="45.8342%" y="687.50"></text></g><g><title>[unknown] (29 samples, 0.99%)</title><rect x="45.5842%" y="661" width="0.9851%" height="15" fill="rgb(220,133,28)" fg:x="1342" fg:w="29"/><text x="45.8342%" y="671.50"></text></g><g><title>[unknown] (29 samples, 0.99%)</title><rect x="45.5842%" y="645" width="0.9851%" height="15" fill="rgb(217,180,4)" fg:x="1342" fg:w="29"/><text x="45.8342%" y="655.50"></text></g><g><title>[unknown] (25 samples, 0.85%)</title><rect x="45.7201%" y="629" width="0.8492%" height="15" fill="rgb(251,24,1)" fg:x="1346" fg:w="25"/><text x="45.9701%" y="639.50"></text></g><g><title>[unknown] (25 samples, 0.85%)</title><rect x="45.7201%" y="613" width="0.8492%" height="15" fill="rgb(212,185,49)" fg:x="1346" fg:w="25"/><text x="45.9701%" y="623.50"></text></g><g><title>[unknown] (25 samples, 0.85%)</title><rect x="45.7201%" y="597" width="0.8492%" height="15" fill="rgb(215,175,22)" fg:x="1346" fg:w="25"/><text x="45.9701%" y="607.50"></text></g><g><title>[unknown] (25 samples, 0.85%)</title><rect x="45.7201%" y="581" width="0.8492%" height="15" fill="rgb(250,205,14)" fg:x="1346" fg:w="25"/><text x="45.9701%" y="591.50"></text></g><g><title>[unknown] (25 samples, 0.85%)</title><rect x="45.7201%" y="565" width="0.8492%" height="15" fill="rgb(225,211,22)" fg:x="1346" fg:w="25"/><text x="45.9701%" y="575.50"></text></g><g><title>[unknown] (22 samples, 0.75%)</title><rect x="45.8220%" y="549" width="0.7473%" height="15" fill="rgb(251,179,42)" fg:x="1349" fg:w="22"/><text x="46.0720%" y="559.50"></text></g><g><title>[unknown] (22 samples, 0.75%)</title><rect x="45.8220%" y="533" width="0.7473%" height="15" fill="rgb(208,216,51)" fg:x="1349" fg:w="22"/><text x="46.0720%" y="543.50"></text></g><g><title>[unknown] (21 samples, 0.71%)</title><rect x="45.8560%" y="517" width="0.7133%" height="15" fill="rgb(235,36,11)" fg:x="1350" fg:w="21"/><text x="46.1060%" y="527.50"></text></g><g><title>[unknown] (20 samples, 0.68%)</title><rect x="45.8899%" y="501" width="0.6793%" height="15" fill="rgb(213,189,28)" fg:x="1351" fg:w="20"/><text x="46.1399%" y="511.50"></text></g><g><title>[unknown] (19 samples, 0.65%)</title><rect x="45.9239%" y="485" width="0.6454%" height="15" fill="rgb(227,203,42)" fg:x="1352" fg:w="19"/><text x="46.1739%" y="495.50"></text></g><g><title>game_render::pbr::prepare_materials (1 samples, 0.03%)</title><rect x="46.5693%" y="1173" width="0.0340%" height="15" fill="rgb(244,72,36)" fg:x="1371" fg:w="1"/><text x="46.8193%" y="1183.50"></text></g><g><title>wgpu::Device::create_texture (1 samples, 0.03%)</title><rect x="46.5693%" y="1157" width="0.0340%" height="15" fill="rgb(213,53,17)" fg:x="1371" fg:w="1"/><text x="46.8193%" y="1167.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_create_texture (1 samples, 0.03%)</title><rect x="46.5693%" y="1141" width="0.0340%" height="15" fill="rgb(207,167,3)" fg:x="1371" fg:w="1"/><text x="46.8193%" y="1151.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::device_create_texture (1 samples, 0.03%)</title><rect x="46.5693%" y="1125" width="0.0340%" height="15" fill="rgb(216,98,30)" fg:x="1371" fg:w="1"/><text x="46.8193%" y="1135.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_texture (1 samples, 0.03%)</title><rect x="46.5693%" y="1109" width="0.0340%" height="15" fill="rgb(236,123,15)" fg:x="1371" fg:w="1"/><text x="46.8193%" y="1119.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_texture (1 samples, 0.03%)</title><rect x="46.5693%" y="1093" width="0.0340%" height="15" fill="rgb(248,81,50)" fg:x="1371" fg:w="1"/><text x="46.8193%" y="1103.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_texture (1 samples, 0.03%)</title><rect x="46.5693%" y="1077" width="0.0340%" height="15" fill="rgb(214,120,4)" fg:x="1371" fg:w="1"/><text x="46.8193%" y="1087.50"></text></g><g><title>ash::device::Device::create_image (1 samples, 0.03%)</title><rect x="46.5693%" y="1061" width="0.0340%" height="15" fill="rgb(208,179,34)" fg:x="1371" fg:w="1"/><text x="46.8193%" y="1071.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="46.5693%" y="1045" width="0.0340%" height="15" fill="rgb(227,140,7)" fg:x="1371" fg:w="1"/><text x="46.8193%" y="1055.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="46.5693%" y="1029" width="0.0340%" height="15" fill="rgb(214,22,6)" fg:x="1371" fg:w="1"/><text x="46.8193%" y="1039.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="46.5693%" y="1013" width="0.0340%" height="15" fill="rgb(207,137,27)" fg:x="1371" fg:w="1"/><text x="46.8193%" y="1023.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="46.5693%" y="997" width="0.0340%" height="15" fill="rgb(210,8,46)" fg:x="1371" fg:w="1"/><text x="46.8193%" y="1007.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="46.5693%" y="981" width="0.0340%" height="15" fill="rgb(240,16,54)" fg:x="1371" fg:w="1"/><text x="46.8193%" y="991.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="46.5693%" y="965" width="0.0340%" height="15" fill="rgb(211,209,29)" fg:x="1371" fg:w="1"/><text x="46.8193%" y="975.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="46.5693%" y="949" width="0.0340%" height="15" fill="rgb(226,228,24)" fg:x="1371" fg:w="1"/><text x="46.8193%" y="959.50"></text></g><g><title>TaskPool_(28) (382 samples, 12.98%)</title><rect x="33.6617%" y="1205" width="12.9755%" height="15" fill="rgb(222,84,9)" fg:x="991" fg:w="382"/><text x="33.9117%" y="1215.50">TaskPool_(28)</text></g><g><title>[unknown] (361 samples, 12.26%)</title><rect x="34.3750%" y="1189" width="12.2622%" height="15" fill="rgb(234,203,30)" fg:x="1012" fg:w="361"/><text x="34.6250%" y="1199.50">[unknown]</text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_texture (1 samples, 0.03%)</title><rect x="46.6033%" y="1173" width="0.0340%" height="15" fill="rgb(238,109,14)" fg:x="1372" fg:w="1"/><text x="46.8533%" y="1183.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::copy_buffer_to_texture (1 samples, 0.03%)</title><rect x="46.6033%" y="1157" width="0.0340%" height="15" fill="rgb(233,206,34)" fg:x="1372" fg:w="1"/><text x="46.8533%" y="1167.50"></text></g><g><title>ash::device::Device::cmd_copy_buffer_to_image (1 samples, 0.03%)</title><rect x="46.6033%" y="1141" width="0.0340%" height="15" fill="rgb(220,167,47)" fg:x="1372" fg:w="1"/><text x="46.8533%" y="1151.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="46.6033%" y="1125" width="0.0340%" height="15" fill="rgb(238,105,10)" fg:x="1372" fg:w="1"/><text x="46.8533%" y="1135.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="46.6033%" y="1109" width="0.0340%" height="15" fill="rgb(213,227,17)" fg:x="1372" fg:w="1"/><text x="46.8533%" y="1119.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="46.6033%" y="1093" width="0.0340%" height="15" fill="rgb(217,132,38)" fg:x="1372" fg:w="1"/><text x="46.8533%" y="1103.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="46.6033%" y="1077" width="0.0340%" height="15" fill="rgb(242,146,4)" fg:x="1372" fg:w="1"/><text x="46.8533%" y="1087.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="46.6033%" y="1061" width="0.0340%" height="15" fill="rgb(212,61,9)" fg:x="1372" fg:w="1"/><text x="46.8533%" y="1071.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (1 samples, 0.03%)</title><rect x="46.6372%" y="773" width="0.0340%" height="15" fill="rgb(247,126,22)" fg:x="1373" fg:w="1"/><text x="46.8872%" y="783.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="46.6372%" y="757" width="0.0340%" height="15" fill="rgb(220,196,2)" fg:x="1373" fg:w="1"/><text x="46.8872%" y="767.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (1 samples, 0.03%)</title><rect x="46.6372%" y="741" width="0.0340%" height="15" fill="rgb(208,46,4)" fg:x="1373" fg:w="1"/><text x="46.8872%" y="751.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (1 samples, 0.03%)</title><rect x="46.6372%" y="725" width="0.0340%" height="15" fill="rgb(252,104,46)" fg:x="1373" fg:w="1"/><text x="46.8872%" y="735.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.03%)</title><rect x="46.6372%" y="709" width="0.0340%" height="15" fill="rgb(237,152,48)" fg:x="1373" fg:w="1"/><text x="46.8872%" y="719.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="46.6372%" y="693" width="0.0340%" height="15" fill="rgb(221,59,37)" fg:x="1373" fg:w="1"/><text x="46.8872%" y="703.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="46.6372%" y="677" width="0.0340%" height="15" fill="rgb(209,202,51)" fg:x="1373" fg:w="1"/><text x="46.8872%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="46.6372%" y="661" width="0.0340%" height="15" fill="rgb(228,81,30)" fg:x="1373" fg:w="1"/><text x="46.8872%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1 samples, 0.03%)</title><rect x="46.6372%" y="645" width="0.0340%" height="15" fill="rgb(227,42,39)" fg:x="1373" fg:w="1"/><text x="46.8872%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.03%)</title><rect x="46.6372%" y="629" width="0.0340%" height="15" fill="rgb(221,26,2)" fg:x="1373" fg:w="1"/><text x="46.8872%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.03%)</title><rect x="46.6372%" y="613" width="0.0340%" height="15" fill="rgb(254,61,31)" fg:x="1373" fg:w="1"/><text x="46.8872%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.03%)</title><rect x="46.6372%" y="597" width="0.0340%" height="15" fill="rgb(222,173,38)" fg:x="1373" fg:w="1"/><text x="46.8872%" y="607.50"></text></g><g><title>TaskPool_(29) (2 samples, 0.07%)</title><rect x="46.6372%" y="1205" width="0.0679%" height="15" fill="rgb(218,50,12)" fg:x="1373" fg:w="2"/><text x="46.8872%" y="1215.50"></text></g><g><title>[libc.so.6] (2 samples, 0.07%)</title><rect x="46.6372%" y="1189" width="0.0679%" height="15" fill="rgb(223,88,40)" fg:x="1373" fg:w="2"/><text x="46.8872%" y="1199.50"></text></g><g><title>[libc.so.6] (2 samples, 0.07%)</title><rect x="46.6372%" y="1173" width="0.0679%" height="15" fill="rgb(237,54,19)" fg:x="1373" fg:w="2"/><text x="46.8872%" y="1183.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (2 samples, 0.07%)</title><rect x="46.6372%" y="1157" width="0.0679%" height="15" fill="rgb(251,129,25)" fg:x="1373" fg:w="2"/><text x="46.8872%" y="1167.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (2 samples, 0.07%)</title><rect x="46.6372%" y="1141" width="0.0679%" height="15" fill="rgb(238,97,19)" fg:x="1373" fg:w="2"/><text x="46.8872%" y="1151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (2 samples, 0.07%)</title><rect x="46.6372%" y="1125" width="0.0679%" height="15" fill="rgb(240,169,18)" fg:x="1373" fg:w="2"/><text x="46.8872%" y="1135.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (2 samples, 0.07%)</title><rect x="46.6372%" y="1109" width="0.0679%" height="15" fill="rgb(230,187,49)" fg:x="1373" fg:w="2"/><text x="46.8872%" y="1119.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (2 samples, 0.07%)</title><rect x="46.6372%" y="1093" width="0.0679%" height="15" fill="rgb(209,44,26)" fg:x="1373" fg:w="2"/><text x="46.8872%" y="1103.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.07%)</title><rect x="46.6372%" y="1077" width="0.0679%" height="15" fill="rgb(244,0,6)" fg:x="1373" fg:w="2"/><text x="46.8872%" y="1087.50"></text></g><g><title>std::panicking::try (2 samples, 0.07%)</title><rect x="46.6372%" y="1061" width="0.0679%" height="15" fill="rgb(248,18,21)" fg:x="1373" fg:w="2"/><text x="46.8872%" y="1071.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.07%)</title><rect x="46.6372%" y="1045" width="0.0679%" height="15" fill="rgb(245,180,19)" fg:x="1373" fg:w="2"/><text x="46.8872%" y="1055.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2 samples, 0.07%)</title><rect x="46.6372%" y="1029" width="0.0679%" height="15" fill="rgb(252,118,36)" fg:x="1373" fg:w="2"/><text x="46.8872%" y="1039.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (2 samples, 0.07%)</title><rect x="46.6372%" y="1013" width="0.0679%" height="15" fill="rgb(210,224,19)" fg:x="1373" fg:w="2"/><text x="46.8872%" y="1023.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (2 samples, 0.07%)</title><rect x="46.6372%" y="997" width="0.0679%" height="15" fill="rgb(218,30,24)" fg:x="1373" fg:w="2"/><text x="46.8872%" y="1007.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (2 samples, 0.07%)</title><rect x="46.6372%" y="981" width="0.0679%" height="15" fill="rgb(219,75,50)" fg:x="1373" fg:w="2"/><text x="46.8872%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.07%)</title><rect x="46.6372%" y="965" width="0.0679%" height="15" fill="rgb(234,72,50)" fg:x="1373" fg:w="2"/><text x="46.8872%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.07%)</title><rect x="46.6372%" y="949" width="0.0679%" height="15" fill="rgb(219,100,48)" fg:x="1373" fg:w="2"/><text x="46.8872%" y="959.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}}::{{closure}} (2 samples, 0.07%)</title><rect x="46.6372%" y="933" width="0.0679%" height="15" fill="rgb(253,5,41)" fg:x="1373" fg:w="2"/><text x="46.8872%" y="943.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.07%)</title><rect x="46.6372%" y="917" width="0.0679%" height="15" fill="rgb(247,181,11)" fg:x="1373" fg:w="2"/><text x="46.8872%" y="927.50"></text></g><g><title>std::panicking::try (2 samples, 0.07%)</title><rect x="46.6372%" y="901" width="0.0679%" height="15" fill="rgb(222,223,25)" fg:x="1373" fg:w="2"/><text x="46.8872%" y="911.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.07%)</title><rect x="46.6372%" y="885" width="0.0679%" height="15" fill="rgb(214,198,28)" fg:x="1373" fg:w="2"/><text x="46.8872%" y="895.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}}::{{closure}}::{{closure}} (2 samples, 0.07%)</title><rect x="46.6372%" y="869" width="0.0679%" height="15" fill="rgb(230,46,43)" fg:x="1373" fg:w="2"/><text x="46.8872%" y="879.50"></text></g><g><title>futures_lite::future::block_on (2 samples, 0.07%)</title><rect x="46.6372%" y="853" width="0.0679%" height="15" fill="rgb(233,65,53)" fg:x="1373" fg:w="2"/><text x="46.8872%" y="863.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.07%)</title><rect x="46.6372%" y="837" width="0.0679%" height="15" fill="rgb(221,121,27)" fg:x="1373" fg:w="2"/><text x="46.8872%" y="847.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.07%)</title><rect x="46.6372%" y="821" width="0.0679%" height="15" fill="rgb(247,70,47)" fg:x="1373" fg:w="2"/><text x="46.8872%" y="831.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (2 samples, 0.07%)</title><rect x="46.6372%" y="805" width="0.0679%" height="15" fill="rgb(228,85,35)" fg:x="1373" fg:w="2"/><text x="46.8872%" y="815.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (2 samples, 0.07%)</title><rect x="46.6372%" y="789" width="0.0679%" height="15" fill="rgb(209,50,18)" fg:x="1373" fg:w="2"/><text x="46.8872%" y="799.50"></text></g><g><title>async_executor::Runner::new (1 samples, 0.03%)</title><rect x="46.6712%" y="773" width="0.0340%" height="15" fill="rgb(250,19,35)" fg:x="1374" fg:w="1"/><text x="46.9212%" y="783.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::bounded (1 samples, 0.03%)</title><rect x="46.6712%" y="757" width="0.0340%" height="15" fill="rgb(253,107,29)" fg:x="1374" fg:w="1"/><text x="46.9212%" y="767.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="46.6712%" y="741" width="0.0340%" height="15" fill="rgb(252,179,29)" fg:x="1374" fg:w="1"/><text x="46.9212%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.03%)</title><rect x="46.6712%" y="725" width="0.0340%" height="15" fill="rgb(238,194,6)" fg:x="1374" fg:w="1"/><text x="46.9212%" y="735.50"></text></g><g><title>core::ptr::write (1 samples, 0.03%)</title><rect x="46.6712%" y="709" width="0.0340%" height="15" fill="rgb(238,164,29)" fg:x="1374" fg:w="1"/><text x="46.9212%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="46.6712%" y="693" width="0.0340%" height="15" fill="rgb(224,25,9)" fg:x="1374" fg:w="1"/><text x="46.9212%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="46.6712%" y="677" width="0.0340%" height="15" fill="rgb(244,153,23)" fg:x="1374" fg:w="1"/><text x="46.9212%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="46.6712%" y="661" width="0.0340%" height="15" fill="rgb(212,203,14)" fg:x="1374" fg:w="1"/><text x="46.9212%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="46.6712%" y="645" width="0.0340%" height="15" fill="rgb(220,164,20)" fg:x="1374" fg:w="1"/><text x="46.9212%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="46.6712%" y="629" width="0.0340%" height="15" fill="rgb(222,203,48)" fg:x="1374" fg:w="1"/><text x="46.9212%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="46.6712%" y="613" width="0.0340%" height="15" fill="rgb(215,159,22)" fg:x="1374" fg:w="1"/><text x="46.9212%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="46.6712%" y="597" width="0.0340%" height="15" fill="rgb(216,183,47)" fg:x="1374" fg:w="1"/><text x="46.9212%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="46.6712%" y="581" width="0.0340%" height="15" fill="rgb(229,195,25)" fg:x="1374" fg:w="1"/><text x="46.9212%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="46.6712%" y="565" width="0.0340%" height="15" fill="rgb(224,132,51)" fg:x="1374" fg:w="1"/><text x="46.9212%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="46.6712%" y="549" width="0.0340%" height="15" fill="rgb(240,63,7)" fg:x="1374" fg:w="1"/><text x="46.9212%" y="559.50"></text></g><g><title>TaskPool_(3) (1 samples, 0.03%)</title><rect x="46.7052%" y="1205" width="0.0340%" height="15" fill="rgb(249,182,41)" fg:x="1375" fg:w="1"/><text x="46.9552%" y="1215.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="46.7052%" y="1189" width="0.0340%" height="15" fill="rgb(243,47,26)" fg:x="1375" fg:w="1"/><text x="46.9552%" y="1199.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="46.7052%" y="1173" width="0.0340%" height="15" fill="rgb(233,48,2)" fg:x="1375" fg:w="1"/><text x="46.9552%" y="1183.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1 samples, 0.03%)</title><rect x="46.7052%" y="1157" width="0.0340%" height="15" fill="rgb(244,165,34)" fg:x="1375" fg:w="1"/><text x="46.9552%" y="1167.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.03%)</title><rect x="46.7052%" y="1141" width="0.0340%" height="15" fill="rgb(207,89,7)" fg:x="1375" fg:w="1"/><text x="46.9552%" y="1151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.03%)</title><rect x="46.7052%" y="1125" width="0.0340%" height="15" fill="rgb(244,117,36)" fg:x="1375" fg:w="1"/><text x="46.9552%" y="1135.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.03%)</title><rect x="46.7052%" y="1109" width="0.0340%" height="15" fill="rgb(226,144,34)" fg:x="1375" fg:w="1"/><text x="46.9552%" y="1119.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (1 samples, 0.03%)</title><rect x="46.7052%" y="1093" width="0.0340%" height="15" fill="rgb(213,23,19)" fg:x="1375" fg:w="1"/><text x="46.9552%" y="1103.50"></text></g><g><title>std::sys::unix::thread::guard::current (1 samples, 0.03%)</title><rect x="46.7052%" y="1077" width="0.0340%" height="15" fill="rgb(217,75,12)" fg:x="1375" fg:w="1"/><text x="46.9552%" y="1087.50"></text></g><g><title>pthread_getattr_np (1 samples, 0.03%)</title><rect x="46.7052%" y="1061" width="0.0340%" height="15" fill="rgb(224,159,17)" fg:x="1375" fg:w="1"/><text x="46.9552%" y="1071.50"></text></g><g><title>malloc (1 samples, 0.03%)</title><rect x="46.7052%" y="1045" width="0.0340%" height="15" fill="rgb(217,118,1)" fg:x="1375" fg:w="1"/><text x="46.9552%" y="1055.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="46.7052%" y="1029" width="0.0340%" height="15" fill="rgb(232,180,48)" fg:x="1375" fg:w="1"/><text x="46.9552%" y="1039.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="46.7052%" y="1013" width="0.0340%" height="15" fill="rgb(230,27,33)" fg:x="1375" fg:w="1"/><text x="46.9552%" y="1023.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="46.7052%" y="997" width="0.0340%" height="15" fill="rgb(205,31,21)" fg:x="1375" fg:w="1"/><text x="46.9552%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="46.7052%" y="981" width="0.0340%" height="15" fill="rgb(253,59,4)" fg:x="1375" fg:w="1"/><text x="46.9552%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="46.7052%" y="965" width="0.0340%" height="15" fill="rgb(224,201,9)" fg:x="1375" fg:w="1"/><text x="46.9552%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="46.7052%" y="949" width="0.0340%" height="15" fill="rgb(229,206,30)" fg:x="1375" fg:w="1"/><text x="46.9552%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="46.7052%" y="933" width="0.0340%" height="15" fill="rgb(212,67,47)" fg:x="1375" fg:w="1"/><text x="46.9552%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="46.7052%" y="917" width="0.0340%" height="15" fill="rgb(211,96,50)" fg:x="1375" fg:w="1"/><text x="46.9552%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="46.7052%" y="901" width="0.0340%" height="15" fill="rgb(252,114,18)" fg:x="1375" fg:w="1"/><text x="46.9552%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="46.7052%" y="885" width="0.0340%" height="15" fill="rgb(223,58,37)" fg:x="1375" fg:w="1"/><text x="46.9552%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="46.7052%" y="869" width="0.0340%" height="15" fill="rgb(237,70,4)" fg:x="1375" fg:w="1"/><text x="46.9552%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="46.7052%" y="853" width="0.0340%" height="15" fill="rgb(244,85,46)" fg:x="1375" fg:w="1"/><text x="46.9552%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="46.7052%" y="837" width="0.0340%" height="15" fill="rgb(223,39,52)" fg:x="1375" fg:w="1"/><text x="46.9552%" y="847.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="46.7391%" y="677" width="0.0340%" height="15" fill="rgb(218,200,14)" fg:x="1376" fg:w="1"/><text x="46.9891%" y="687.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (1 samples, 0.03%)</title><rect x="46.7391%" y="661" width="0.0340%" height="15" fill="rgb(208,171,16)" fg:x="1376" fg:w="1"/><text x="46.9891%" y="671.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (1 samples, 0.03%)</title><rect x="46.7391%" y="645" width="0.0340%" height="15" fill="rgb(234,200,18)" fg:x="1376" fg:w="1"/><text x="46.9891%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.03%)</title><rect x="46.7391%" y="629" width="0.0340%" height="15" fill="rgb(228,45,11)" fg:x="1376" fg:w="1"/><text x="46.9891%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.03%)</title><rect x="46.7391%" y="613" width="0.0340%" height="15" fill="rgb(237,182,11)" fg:x="1376" fg:w="1"/><text x="46.9891%" y="623.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (2 samples, 0.07%)</title><rect x="46.7391%" y="741" width="0.0679%" height="15" fill="rgb(241,175,49)" fg:x="1376" fg:w="2"/><text x="46.9891%" y="751.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (2 samples, 0.07%)</title><rect x="46.7391%" y="725" width="0.0679%" height="15" fill="rgb(247,38,35)" fg:x="1376" fg:w="2"/><text x="46.9891%" y="735.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (2 samples, 0.07%)</title><rect x="46.7391%" y="709" width="0.0679%" height="15" fill="rgb(228,39,49)" fg:x="1376" fg:w="2"/><text x="46.9891%" y="719.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (2 samples, 0.07%)</title><rect x="46.7391%" y="693" width="0.0679%" height="15" fill="rgb(226,101,26)" fg:x="1376" fg:w="2"/><text x="46.9891%" y="703.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (1 samples, 0.03%)</title><rect x="46.7731%" y="677" width="0.0340%" height="15" fill="rgb(206,141,19)" fg:x="1377" fg:w="1"/><text x="47.0231%" y="687.50"></text></g><g><title>futures_lite::future::block_on::parker_and_waker::{{closure}} (1 samples, 0.03%)</title><rect x="46.7731%" y="661" width="0.0340%" height="15" fill="rgb(211,200,13)" fg:x="1377" fg:w="1"/><text x="47.0231%" y="671.50"></text></g><g><title>parking::Unparker::unpark (1 samples, 0.03%)</title><rect x="46.7731%" y="645" width="0.0340%" height="15" fill="rgb(241,121,6)" fg:x="1377" fg:w="1"/><text x="47.0231%" y="655.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.03%)</title><rect x="46.7731%" y="629" width="0.0340%" height="15" fill="rgb(234,221,29)" fg:x="1377" fg:w="1"/><text x="47.0231%" y="639.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::inner (1 samples, 0.03%)</title><rect x="46.7731%" y="613" width="0.0340%" height="15" fill="rgb(229,136,5)" fg:x="1377" fg:w="1"/><text x="47.0231%" y="623.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.03%)</title><rect x="46.7731%" y="597" width="0.0340%" height="15" fill="rgb(238,36,11)" fg:x="1377" fg:w="1"/><text x="47.0231%" y="607.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor as bevy_ecs::schedule::executor::SystemExecutor&gt;::run::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="46.8071%" y="693" width="0.0340%" height="15" fill="rgb(251,55,41)" fg:x="1378" fg:w="1"/><text x="47.0571%" y="703.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::spawn_system_tasks (1 samples, 0.03%)</title><rect x="46.8071%" y="677" width="0.0340%" height="15" fill="rgb(242,34,40)" fg:x="1378" fg:w="1"/><text x="47.0571%" y="687.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::spawn_exclusive_system_task (1 samples, 0.03%)</title><rect x="46.8071%" y="661" width="0.0340%" height="15" fill="rgb(215,42,17)" fg:x="1378" fg:w="1"/><text x="47.0571%" y="671.50"></text></g><g><title>&lt;fixedbitset::FixedBitSet as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="46.8071%" y="645" width="0.0340%" height="15" fill="rgb(207,44,46)" fg:x="1378" fg:w="1"/><text x="47.0571%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="46.8071%" y="629" width="0.0340%" height="15" fill="rgb(211,206,28)" fg:x="1378" fg:w="1"/><text x="47.0571%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.03%)</title><rect x="46.8071%" y="613" width="0.0340%" height="15" fill="rgb(237,167,16)" fg:x="1378" fg:w="1"/><text x="47.0571%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.03%)</title><rect x="46.8071%" y="597" width="0.0340%" height="15" fill="rgb(233,66,6)" fg:x="1378" fg:w="1"/><text x="47.0571%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.03%)</title><rect x="46.8071%" y="581" width="0.0340%" height="15" fill="rgb(246,123,29)" fg:x="1378" fg:w="1"/><text x="47.0571%" y="591.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.03%)</title><rect x="46.8071%" y="565" width="0.0340%" height="15" fill="rgb(209,62,40)" fg:x="1378" fg:w="1"/><text x="47.0571%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.03%)</title><rect x="46.8071%" y="549" width="0.0340%" height="15" fill="rgb(218,4,25)" fg:x="1378" fg:w="1"/><text x="47.0571%" y="559.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="46.8071%" y="533" width="0.0340%" height="15" fill="rgb(253,91,49)" fg:x="1378" fg:w="1"/><text x="47.0571%" y="543.50"></text></g><g><title>&lt;core::slice::iter::ChunksExactMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="46.8410%" y="405" width="0.0340%" height="15" fill="rgb(228,155,29)" fg:x="1379" fg:w="1"/><text x="47.0910%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.07%)</title><rect x="46.8410%" y="453" width="0.0679%" height="15" fill="rgb(243,57,37)" fg:x="1379" fg:w="2"/><text x="47.0910%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (2 samples, 0.07%)</title><rect x="46.8410%" y="437" width="0.0679%" height="15" fill="rgb(244,167,17)" fg:x="1379" fg:w="2"/><text x="47.0910%" y="447.50"></text></g><g><title>&lt;image::buffer_::PixelsMut&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.07%)</title><rect x="46.8410%" y="421" width="0.0679%" height="15" fill="rgb(207,181,38)" fg:x="1379" fg:w="2"/><text x="47.0910%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.03%)</title><rect x="46.8750%" y="405" width="0.0340%" height="15" fill="rgb(211,8,23)" fg:x="1380" fg:w="1"/><text x="47.1250%" y="415.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (7 samples, 0.24%)</title><rect x="46.7391%" y="789" width="0.2378%" height="15" fill="rgb(235,11,44)" fg:x="1376" fg:w="7"/><text x="46.9891%" y="799.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (7 samples, 0.24%)</title><rect x="46.7391%" y="773" width="0.2378%" height="15" fill="rgb(248,18,52)" fg:x="1376" fg:w="7"/><text x="46.9891%" y="783.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (7 samples, 0.24%)</title><rect x="46.7391%" y="757" width="0.2378%" height="15" fill="rgb(208,4,7)" fg:x="1376" fg:w="7"/><text x="46.9891%" y="767.50"></text></g><g><title>async_task::runnable::Runnable&lt;M&gt;::run (5 samples, 0.17%)</title><rect x="46.8071%" y="741" width="0.1698%" height="15" fill="rgb(240,17,39)" fg:x="1378" fg:w="5"/><text x="47.0571%" y="751.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::run (5 samples, 0.17%)</title><rect x="46.8071%" y="725" width="0.1698%" height="15" fill="rgb(207,170,3)" fg:x="1378" fg:w="5"/><text x="47.0571%" y="735.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (5 samples, 0.17%)</title><rect x="46.8071%" y="709" width="0.1698%" height="15" fill="rgb(236,100,52)" fg:x="1378" fg:w="5"/><text x="47.0571%" y="719.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::spawn_system_task::{{closure}} (4 samples, 0.14%)</title><rect x="46.8410%" y="693" width="0.1359%" height="15" fill="rgb(246,78,51)" fg:x="1379" fg:w="4"/><text x="47.0910%" y="703.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.14%)</title><rect x="46.8410%" y="677" width="0.1359%" height="15" fill="rgb(211,17,15)" fg:x="1379" fg:w="4"/><text x="47.0910%" y="687.50"></text></g><g><title>std::panicking::try (4 samples, 0.14%)</title><rect x="46.8410%" y="661" width="0.1359%" height="15" fill="rgb(209,59,46)" fg:x="1379" fg:w="4"/><text x="47.0910%" y="671.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.14%)</title><rect x="46.8410%" y="645" width="0.1359%" height="15" fill="rgb(210,92,25)" fg:x="1379" fg:w="4"/><text x="47.0910%" y="655.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4 samples, 0.14%)</title><rect x="46.8410%" y="629" width="0.1359%" height="15" fill="rgb(238,174,52)" fg:x="1379" fg:w="4"/><text x="47.0910%" y="639.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4 samples, 0.14%)</title><rect x="46.8410%" y="613" width="0.1359%" height="15" fill="rgb(230,73,7)" fg:x="1379" fg:w="4"/><text x="47.0910%" y="623.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::spawn_system_task::{{closure}}::{{closure}} (4 samples, 0.14%)</title><rect x="46.8410%" y="597" width="0.1359%" height="15" fill="rgb(243,124,40)" fg:x="1379" fg:w="4"/><text x="47.0910%" y="607.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (4 samples, 0.14%)</title><rect x="46.8410%" y="581" width="0.1359%" height="15" fill="rgb(244,170,11)" fg:x="1379" fg:w="4"/><text x="47.0910%" y="591.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;fn(F0) .&gt; Out&gt;&gt;::run (4 samples, 0.14%)</title><rect x="46.8410%" y="565" width="0.1359%" height="15" fill="rgb(207,114,54)" fg:x="1379" fg:w="4"/><text x="47.0910%" y="575.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;fn(F0) .&gt; Out&gt;&gt;::run::call_inner (4 samples, 0.14%)</title><rect x="46.8410%" y="549" width="0.1359%" height="15" fill="rgb(205,42,20)" fg:x="1379" fg:w="4"/><text x="47.0910%" y="559.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (4 samples, 0.14%)</title><rect x="46.8410%" y="533" width="0.1359%" height="15" fill="rgb(230,30,28)" fg:x="1379" fg:w="4"/><text x="47.0910%" y="543.50"></text></g><g><title>core::ops::function::FnMut::call_mut (4 samples, 0.14%)</title><rect x="46.8410%" y="517" width="0.1359%" height="15" fill="rgb(205,73,54)" fg:x="1379" fg:w="4"/><text x="47.0910%" y="527.50"></text></g><g><title>game_render::texture::image::load_images (4 samples, 0.14%)</title><rect x="46.8410%" y="501" width="0.1359%" height="15" fill="rgb(254,227,23)" fg:x="1379" fg:w="4"/><text x="47.0910%" y="511.50"></text></g><g><title>image::dynimage::DynamicImage::to_rgba8 (4 samples, 0.14%)</title><rect x="46.8410%" y="485" width="0.1359%" height="15" fill="rgb(228,202,34)" fg:x="1379" fg:w="4"/><text x="47.0910%" y="495.50"></text></g><g><title>&lt;image::buffer_::ImageBuffer&lt;FromType,Container&gt; as image::buffer_::ConvertBuffer&lt;image::buffer_::ImageBuffer&lt;ToType,alloc::vec::Vec&lt;&lt;ToType as image::traits::Pixel&gt;::Subpixel&gt;&gt;&gt;&gt;::convert (4 samples, 0.14%)</title><rect x="46.8410%" y="469" width="0.1359%" height="15" fill="rgb(222,225,37)" fg:x="1379" fg:w="4"/><text x="47.0910%" y="479.50"></text></g><g><title>&lt;image::color::Rgba&lt;T&gt; as image::color::FromColor&lt;image::color::Rgba&lt;S&gt;&gt;&gt;::from_color (2 samples, 0.07%)</title><rect x="46.9090%" y="453" width="0.0679%" height="15" fill="rgb(221,14,54)" fg:x="1381" fg:w="2"/><text x="47.1590%" y="463.50"></text></g><g><title>std::panic::catch_unwind (8 samples, 0.27%)</title><rect x="46.7391%" y="1077" width="0.2717%" height="15" fill="rgb(254,102,2)" fg:x="1376" fg:w="8"/><text x="46.9891%" y="1087.50"></text></g><g><title>std::panicking::try (8 samples, 0.27%)</title><rect x="46.7391%" y="1061" width="0.2717%" height="15" fill="rgb(232,104,17)" fg:x="1376" fg:w="8"/><text x="46.9891%" y="1071.50"></text></g><g><title>std::panicking::try::do_call (8 samples, 0.27%)</title><rect x="46.7391%" y="1045" width="0.2717%" height="15" fill="rgb(250,220,14)" fg:x="1376" fg:w="8"/><text x="46.9891%" y="1055.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (8 samples, 0.27%)</title><rect x="46.7391%" y="1029" width="0.2717%" height="15" fill="rgb(241,158,9)" fg:x="1376" fg:w="8"/><text x="46.9891%" y="1039.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (8 samples, 0.27%)</title><rect x="46.7391%" y="1013" width="0.2717%" height="15" fill="rgb(246,9,43)" fg:x="1376" fg:w="8"/><text x="46.9891%" y="1023.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (8 samples, 0.27%)</title><rect x="46.7391%" y="997" width="0.2717%" height="15" fill="rgb(206,73,33)" fg:x="1376" fg:w="8"/><text x="46.9891%" y="1007.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (8 samples, 0.27%)</title><rect x="46.7391%" y="981" width="0.2717%" height="15" fill="rgb(222,79,8)" fg:x="1376" fg:w="8"/><text x="46.9891%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (8 samples, 0.27%)</title><rect x="46.7391%" y="965" width="0.2717%" height="15" fill="rgb(234,8,54)" fg:x="1376" fg:w="8"/><text x="46.9891%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (8 samples, 0.27%)</title><rect x="46.7391%" y="949" width="0.2717%" height="15" fill="rgb(209,134,38)" fg:x="1376" fg:w="8"/><text x="46.9891%" y="959.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}}::{{closure}} (8 samples, 0.27%)</title><rect x="46.7391%" y="933" width="0.2717%" height="15" fill="rgb(230,127,29)" fg:x="1376" fg:w="8"/><text x="46.9891%" y="943.50"></text></g><g><title>std::panic::catch_unwind (8 samples, 0.27%)</title><rect x="46.7391%" y="917" width="0.2717%" height="15" fill="rgb(242,44,41)" fg:x="1376" fg:w="8"/><text x="46.9891%" y="927.50"></text></g><g><title>std::panicking::try (8 samples, 0.27%)</title><rect x="46.7391%" y="901" width="0.2717%" height="15" fill="rgb(222,56,43)" fg:x="1376" fg:w="8"/><text x="46.9891%" y="911.50"></text></g><g><title>std::panicking::try::do_call (8 samples, 0.27%)</title><rect x="46.7391%" y="885" width="0.2717%" height="15" fill="rgb(238,39,47)" fg:x="1376" fg:w="8"/><text x="46.9891%" y="895.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}}::{{closure}}::{{closure}} (8 samples, 0.27%)</title><rect x="46.7391%" y="869" width="0.2717%" height="15" fill="rgb(226,79,43)" fg:x="1376" fg:w="8"/><text x="46.9891%" y="879.50"></text></g><g><title>futures_lite::future::block_on (8 samples, 0.27%)</title><rect x="46.7391%" y="853" width="0.2717%" height="15" fill="rgb(242,105,53)" fg:x="1376" fg:w="8"/><text x="46.9891%" y="863.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (8 samples, 0.27%)</title><rect x="46.7391%" y="837" width="0.2717%" height="15" fill="rgb(251,132,46)" fg:x="1376" fg:w="8"/><text x="46.9891%" y="847.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (8 samples, 0.27%)</title><rect x="46.7391%" y="821" width="0.2717%" height="15" fill="rgb(231,77,14)" fg:x="1376" fg:w="8"/><text x="46.9891%" y="831.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (8 samples, 0.27%)</title><rect x="46.7391%" y="805" width="0.2717%" height="15" fill="rgb(240,135,9)" fg:x="1376" fg:w="8"/><text x="46.9891%" y="815.50"></text></g><g><title>parking::Inner::park (1 samples, 0.03%)</title><rect x="46.9769%" y="789" width="0.0340%" height="15" fill="rgb(248,109,14)" fg:x="1383" fg:w="1"/><text x="47.2269%" y="799.50"></text></g><g><title>std::sync::condvar::Condvar::wait (1 samples, 0.03%)</title><rect x="46.9769%" y="773" width="0.0340%" height="15" fill="rgb(227,146,52)" fg:x="1383" fg:w="1"/><text x="47.2269%" y="783.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait (1 samples, 0.03%)</title><rect x="46.9769%" y="757" width="0.0340%" height="15" fill="rgb(232,54,3)" fg:x="1383" fg:w="1"/><text x="47.2269%" y="767.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait_optional_timeout (1 samples, 0.03%)</title><rect x="46.9769%" y="741" width="0.0340%" height="15" fill="rgb(229,201,43)" fg:x="1383" fg:w="1"/><text x="47.2269%" y="751.50"></text></g><g><title>std::sys::unix::futex::futex_wait (1 samples, 0.03%)</title><rect x="46.9769%" y="725" width="0.0340%" height="15" fill="rgb(252,161,33)" fg:x="1383" fg:w="1"/><text x="47.2269%" y="735.50"></text></g><g><title>syscall (1 samples, 0.03%)</title><rect x="46.9769%" y="709" width="0.0340%" height="15" fill="rgb(226,146,40)" fg:x="1383" fg:w="1"/><text x="47.2269%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="46.9769%" y="693" width="0.0340%" height="15" fill="rgb(219,47,25)" fg:x="1383" fg:w="1"/><text x="47.2269%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="46.9769%" y="677" width="0.0340%" height="15" fill="rgb(250,135,13)" fg:x="1383" fg:w="1"/><text x="47.2269%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="46.9769%" y="661" width="0.0340%" height="15" fill="rgb(219,229,18)" fg:x="1383" fg:w="1"/><text x="47.2269%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="46.9769%" y="645" width="0.0340%" height="15" fill="rgb(217,152,27)" fg:x="1383" fg:w="1"/><text x="47.2269%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="46.9769%" y="629" width="0.0340%" height="15" fill="rgb(225,71,47)" fg:x="1383" fg:w="1"/><text x="47.2269%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="46.9769%" y="613" width="0.0340%" height="15" fill="rgb(220,139,14)" fg:x="1383" fg:w="1"/><text x="47.2269%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="46.9769%" y="597" width="0.0340%" height="15" fill="rgb(247,54,32)" fg:x="1383" fg:w="1"/><text x="47.2269%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="46.9769%" y="581" width="0.0340%" height="15" fill="rgb(252,131,39)" fg:x="1383" fg:w="1"/><text x="47.2269%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="46.9769%" y="565" width="0.0340%" height="15" fill="rgb(210,108,39)" fg:x="1383" fg:w="1"/><text x="47.2269%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="46.9769%" y="549" width="0.0340%" height="15" fill="rgb(205,23,29)" fg:x="1383" fg:w="1"/><text x="47.2269%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="46.9769%" y="533" width="0.0340%" height="15" fill="rgb(246,139,46)" fg:x="1383" fg:w="1"/><text x="47.2269%" y="543.50"></text></g><g><title>[libc.so.6] (9 samples, 0.31%)</title><rect x="46.7391%" y="1189" width="0.3057%" height="15" fill="rgb(250,81,26)" fg:x="1376" fg:w="9"/><text x="46.9891%" y="1199.50"></text></g><g><title>[libc.so.6] (9 samples, 0.31%)</title><rect x="46.7391%" y="1173" width="0.3057%" height="15" fill="rgb(214,104,7)" fg:x="1376" fg:w="9"/><text x="46.9891%" y="1183.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (9 samples, 0.31%)</title><rect x="46.7391%" y="1157" width="0.3057%" height="15" fill="rgb(233,189,8)" fg:x="1376" fg:w="9"/><text x="46.9891%" y="1167.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (9 samples, 0.31%)</title><rect x="46.7391%" y="1141" width="0.3057%" height="15" fill="rgb(228,141,17)" fg:x="1376" fg:w="9"/><text x="46.9891%" y="1151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (9 samples, 0.31%)</title><rect x="46.7391%" y="1125" width="0.3057%" height="15" fill="rgb(247,157,1)" fg:x="1376" fg:w="9"/><text x="46.9891%" y="1135.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (9 samples, 0.31%)</title><rect x="46.7391%" y="1109" width="0.3057%" height="15" fill="rgb(249,225,5)" fg:x="1376" fg:w="9"/><text x="46.9891%" y="1119.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (9 samples, 0.31%)</title><rect x="46.7391%" y="1093" width="0.3057%" height="15" fill="rgb(242,55,13)" fg:x="1376" fg:w="9"/><text x="46.9891%" y="1103.50"></text></g><g><title>std::sys::unix::thread::guard::current (1 samples, 0.03%)</title><rect x="47.0109%" y="1077" width="0.0340%" height="15" fill="rgb(230,49,50)" fg:x="1384" fg:w="1"/><text x="47.2609%" y="1087.50"></text></g><g><title>pthread_getattr_np (1 samples, 0.03%)</title><rect x="47.0109%" y="1061" width="0.0340%" height="15" fill="rgb(241,111,38)" fg:x="1384" fg:w="1"/><text x="47.2609%" y="1071.50"></text></g><g><title>malloc (1 samples, 0.03%)</title><rect x="47.0109%" y="1045" width="0.0340%" height="15" fill="rgb(252,155,4)" fg:x="1384" fg:w="1"/><text x="47.2609%" y="1055.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::copy_buffer_to_texture (1 samples, 0.03%)</title><rect x="47.0448%" y="805" width="0.0340%" height="15" fill="rgb(212,69,32)" fg:x="1385" fg:w="1"/><text x="47.2948%" y="815.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::FromIterator&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::from_iter (1 samples, 0.03%)</title><rect x="47.0448%" y="789" width="0.0340%" height="15" fill="rgb(243,107,47)" fg:x="1385" fg:w="1"/><text x="47.2948%" y="799.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (1 samples, 0.03%)</title><rect x="47.0448%" y="773" width="0.0340%" height="15" fill="rgb(247,130,12)" fg:x="1385" fg:w="1"/><text x="47.2948%" y="783.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::reserve (1 samples, 0.03%)</title><rect x="47.0448%" y="757" width="0.0340%" height="15" fill="rgb(233,74,16)" fg:x="1385" fg:w="1"/><text x="47.2948%" y="767.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::try_reserve (1 samples, 0.03%)</title><rect x="47.0448%" y="741" width="0.0340%" height="15" fill="rgb(208,58,18)" fg:x="1385" fg:w="1"/><text x="47.2948%" y="751.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (2 samples, 0.07%)</title><rect x="47.0448%" y="1173" width="0.0679%" height="15" fill="rgb(242,225,1)" fg:x="1385" fg:w="2"/><text x="47.2948%" y="1183.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (2 samples, 0.07%)</title><rect x="47.0448%" y="1157" width="0.0679%" height="15" fill="rgb(249,39,40)" fg:x="1385" fg:w="2"/><text x="47.2948%" y="1167.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (2 samples, 0.07%)</title><rect x="47.0448%" y="1141" width="0.0679%" height="15" fill="rgb(207,72,44)" fg:x="1385" fg:w="2"/><text x="47.2948%" y="1151.50"></text></g><g><title>async_task::runnable::Runnable&lt;M&gt;::run (2 samples, 0.07%)</title><rect x="47.0448%" y="1125" width="0.0679%" height="15" fill="rgb(215,193,12)" fg:x="1385" fg:w="2"/><text x="47.2948%" y="1135.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::run (2 samples, 0.07%)</title><rect x="47.0448%" y="1109" width="0.0679%" height="15" fill="rgb(248,41,39)" fg:x="1385" fg:w="2"/><text x="47.2948%" y="1119.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (2 samples, 0.07%)</title><rect x="47.0448%" y="1093" width="0.0679%" height="15" fill="rgb(253,85,4)" fg:x="1385" fg:w="2"/><text x="47.2948%" y="1103.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::spawn_system_task::{{closure}} (2 samples, 0.07%)</title><rect x="47.0448%" y="1077" width="0.0679%" height="15" fill="rgb(243,70,31)" fg:x="1385" fg:w="2"/><text x="47.2948%" y="1087.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.07%)</title><rect x="47.0448%" y="1061" width="0.0679%" height="15" fill="rgb(253,195,26)" fg:x="1385" fg:w="2"/><text x="47.2948%" y="1071.50"></text></g><g><title>std::panicking::try (2 samples, 0.07%)</title><rect x="47.0448%" y="1045" width="0.0679%" height="15" fill="rgb(243,42,11)" fg:x="1385" fg:w="2"/><text x="47.2948%" y="1055.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.07%)</title><rect x="47.0448%" y="1029" width="0.0679%" height="15" fill="rgb(239,66,17)" fg:x="1385" fg:w="2"/><text x="47.2948%" y="1039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2 samples, 0.07%)</title><rect x="47.0448%" y="1013" width="0.0679%" height="15" fill="rgb(217,132,21)" fg:x="1385" fg:w="2"/><text x="47.2948%" y="1023.50"></text></g><g><title>core::ops::function::FnOnce::call_once (2 samples, 0.07%)</title><rect x="47.0448%" y="997" width="0.0679%" height="15" fill="rgb(252,202,21)" fg:x="1385" fg:w="2"/><text x="47.2948%" y="1007.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::spawn_system_task::{{closure}}::{{closure}} (2 samples, 0.07%)</title><rect x="47.0448%" y="981" width="0.0679%" height="15" fill="rgb(233,98,36)" fg:x="1385" fg:w="2"/><text x="47.2948%" y="991.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (2 samples, 0.07%)</title><rect x="47.0448%" y="965" width="0.0679%" height="15" fill="rgb(216,153,54)" fg:x="1385" fg:w="2"/><text x="47.2948%" y="975.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;fn(F0,F1,F2,F3,F4,F5,F6,F7,F8,F9) .&gt; Out&gt;&gt;::run (2 samples, 0.07%)</title><rect x="47.0448%" y="949" width="0.0679%" height="15" fill="rgb(250,99,7)" fg:x="1385" fg:w="2"/><text x="47.2948%" y="959.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;fn(F0,F1,F2,F3,F4,F5,F6,F7,F8,F9) .&gt; Out&gt;&gt;::run::call_inner (2 samples, 0.07%)</title><rect x="47.0448%" y="933" width="0.0679%" height="15" fill="rgb(207,56,50)" fg:x="1385" fg:w="2"/><text x="47.2948%" y="943.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2 samples, 0.07%)</title><rect x="47.0448%" y="917" width="0.0679%" height="15" fill="rgb(244,61,34)" fg:x="1385" fg:w="2"/><text x="47.2948%" y="927.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2 samples, 0.07%)</title><rect x="47.0448%" y="901" width="0.0679%" height="15" fill="rgb(241,50,38)" fg:x="1385" fg:w="2"/><text x="47.2948%" y="911.50"></text></g><g><title>game_render::pbr::prepare_materials (2 samples, 0.07%)</title><rect x="47.0448%" y="885" width="0.0679%" height="15" fill="rgb(212,166,30)" fg:x="1385" fg:w="2"/><text x="47.2948%" y="895.50"></text></g><g><title>wgpu::Queue::write_texture (2 samples, 0.07%)</title><rect x="47.0448%" y="869" width="0.0679%" height="15" fill="rgb(249,127,32)" fg:x="1385" fg:w="2"/><text x="47.2948%" y="879.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::queue_write_texture (2 samples, 0.07%)</title><rect x="47.0448%" y="853" width="0.0679%" height="15" fill="rgb(209,103,0)" fg:x="1385" fg:w="2"/><text x="47.2948%" y="863.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::queue_write_texture (2 samples, 0.07%)</title><rect x="47.0448%" y="837" width="0.0679%" height="15" fill="rgb(238,209,51)" fg:x="1385" fg:w="2"/><text x="47.2948%" y="847.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_texture (2 samples, 0.07%)</title><rect x="47.0448%" y="821" width="0.0679%" height="15" fill="rgb(237,56,23)" fg:x="1385" fg:w="2"/><text x="47.2948%" y="831.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::transition_textures (1 samples, 0.03%)</title><rect x="47.0788%" y="805" width="0.0340%" height="15" fill="rgb(215,153,46)" fg:x="1386" fg:w="1"/><text x="47.3288%" y="815.50"></text></g><g><title>ash::vk::definitions::ImageMemoryBarrier::builder (1 samples, 0.03%)</title><rect x="47.0788%" y="789" width="0.0340%" height="15" fill="rgb(224,49,31)" fg:x="1386" fg:w="1"/><text x="47.3288%" y="799.50"></text></g><g><title>futures_lite::future::block_on (502 samples, 17.05%)</title><rect x="47.1128%" y="1173" width="17.0516%" height="15" fill="rgb(250,18,42)" fg:x="1387" fg:w="502"/><text x="47.3628%" y="1183.50">futures_lite::future::bloc..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (502 samples, 17.05%)</title><rect x="47.1128%" y="1157" width="17.0516%" height="15" fill="rgb(215,176,39)" fg:x="1387" fg:w="502"/><text x="47.3628%" y="1167.50">std::thread::local::LocalK..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (502 samples, 17.05%)</title><rect x="47.1128%" y="1141" width="17.0516%" height="15" fill="rgb(223,77,29)" fg:x="1387" fg:w="502"/><text x="47.3628%" y="1151.50">std::thread::local::LocalK..</text></g><g><title>futures_lite::future::block_on::{{closure}} (502 samples, 17.05%)</title><rect x="47.1128%" y="1125" width="17.0516%" height="15" fill="rgb(234,94,52)" fg:x="1387" fg:w="502"/><text x="47.3628%" y="1135.50">futures_lite::future::bloc..</text></g><g><title>async_executor::Executor::run::{{closure}} (502 samples, 17.05%)</title><rect x="47.1128%" y="1109" width="17.0516%" height="15" fill="rgb(220,154,50)" fg:x="1387" fg:w="502"/><text x="47.3628%" y="1119.50">async_executor::Executor::..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (502 samples, 17.05%)</title><rect x="47.1128%" y="1093" width="17.0516%" height="15" fill="rgb(212,11,10)" fg:x="1387" fg:w="502"/><text x="47.3628%" y="1103.50">&lt;futures_lite::future::Or&lt;..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (502 samples, 17.05%)</title><rect x="47.1128%" y="1077" width="17.0516%" height="15" fill="rgb(205,166,19)" fg:x="1387" fg:w="502"/><text x="47.3628%" y="1087.50">async_executor::Executor::..</text></g><g><title>async_task::runnable::Runnable&lt;M&gt;::run (502 samples, 17.05%)</title><rect x="47.1128%" y="1061" width="17.0516%" height="15" fill="rgb(244,198,16)" fg:x="1387" fg:w="502"/><text x="47.3628%" y="1071.50">async_task::runnable::Runn..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::run (502 samples, 17.05%)</title><rect x="47.1128%" y="1045" width="17.0516%" height="15" fill="rgb(219,69,12)" fg:x="1387" fg:w="502"/><text x="47.3628%" y="1055.50">async_task::raw::RawTask&lt;F..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (502 samples, 17.05%)</title><rect x="47.1128%" y="1029" width="17.0516%" height="15" fill="rgb(245,30,7)" fg:x="1387" fg:w="502"/><text x="47.3628%" y="1039.50">async_executor::Executor::..</text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::spawn_system_task::{{closure}} (502 samples, 17.05%)</title><rect x="47.1128%" y="1013" width="17.0516%" height="15" fill="rgb(218,221,48)" fg:x="1387" fg:w="502"/><text x="47.3628%" y="1023.50">bevy_ecs::schedule::execut..</text></g><g><title>std::panic::catch_unwind (502 samples, 17.05%)</title><rect x="47.1128%" y="997" width="17.0516%" height="15" fill="rgb(216,66,15)" fg:x="1387" fg:w="502"/><text x="47.3628%" y="1007.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (502 samples, 17.05%)</title><rect x="47.1128%" y="981" width="17.0516%" height="15" fill="rgb(226,122,50)" fg:x="1387" fg:w="502"/><text x="47.3628%" y="991.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (502 samples, 17.05%)</title><rect x="47.1128%" y="965" width="17.0516%" height="15" fill="rgb(239,156,16)" fg:x="1387" fg:w="502"/><text x="47.3628%" y="975.50">std::panicking::try::do_ca..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (502 samples, 17.05%)</title><rect x="47.1128%" y="949" width="17.0516%" height="15" fill="rgb(224,27,38)" fg:x="1387" fg:w="502"/><text x="47.3628%" y="959.50">&lt;core::panic::unwind_safe:..</text></g><g><title>core::ops::function::FnOnce::call_once (502 samples, 17.05%)</title><rect x="47.1128%" y="933" width="17.0516%" height="15" fill="rgb(224,39,27)" fg:x="1387" fg:w="502"/><text x="47.3628%" y="943.50">core::ops::function::FnOnc..</text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::spawn_system_task::{{closure}}::{{closure}} (502 samples, 17.05%)</title><rect x="47.1128%" y="917" width="17.0516%" height="15" fill="rgb(215,92,29)" fg:x="1387" fg:w="502"/><text x="47.3628%" y="927.50">bevy_ecs::schedule::execut..</text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (502 samples, 17.05%)</title><rect x="47.1128%" y="901" width="17.0516%" height="15" fill="rgb(207,159,16)" fg:x="1387" fg:w="502"/><text x="47.3628%" y="911.50">&lt;bevy_ecs::system::functio..</text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;fn(F0,F1,F2,F3,F4,F5,F6,F7,F8,F9) .&gt; Out&gt;&gt;::run (502 samples, 17.05%)</title><rect x="47.1128%" y="885" width="17.0516%" height="15" fill="rgb(238,163,47)" fg:x="1387" fg:w="502"/><text x="47.3628%" y="895.50">&lt;Func as bevy_ecs::system:..</text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;fn(F0,F1,F2,F3,F4,F5,F6,F7,F8,F9) .&gt; Out&gt;&gt;::run::call_inner (502 samples, 17.05%)</title><rect x="47.1128%" y="869" width="17.0516%" height="15" fill="rgb(219,91,49)" fg:x="1387" fg:w="502"/><text x="47.3628%" y="879.50">&lt;Func as bevy_ecs::system:..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (502 samples, 17.05%)</title><rect x="47.1128%" y="853" width="17.0516%" height="15" fill="rgb(227,167,31)" fg:x="1387" fg:w="502"/><text x="47.3628%" y="863.50">core::ops::function::impls..</text></g><g><title>core::ops::function::FnMut::call_mut (502 samples, 17.05%)</title><rect x="47.1128%" y="837" width="17.0516%" height="15" fill="rgb(234,80,54)" fg:x="1387" fg:w="502"/><text x="47.3628%" y="847.50">core::ops::function::FnMut..</text></g><g><title>game_render::pbr::prepare_materials (502 samples, 17.05%)</title><rect x="47.1128%" y="821" width="17.0516%" height="15" fill="rgb(212,114,2)" fg:x="1387" fg:w="502"/><text x="47.3628%" y="831.50">game_render::pbr::prepare_..</text></g><g><title>wgpu::Queue::write_texture (502 samples, 17.05%)</title><rect x="47.1128%" y="805" width="17.0516%" height="15" fill="rgb(234,50,24)" fg:x="1387" fg:w="502"/><text x="47.3628%" y="815.50">wgpu::Queue::write_texture</text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::queue_write_texture (502 samples, 17.05%)</title><rect x="47.1128%" y="789" width="17.0516%" height="15" fill="rgb(221,68,8)" fg:x="1387" fg:w="502"/><text x="47.3628%" y="799.50">&lt;T as wgpu::context::DynCo..</text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::queue_write_texture (502 samples, 17.05%)</title><rect x="47.1128%" y="773" width="17.0516%" height="15" fill="rgb(254,180,31)" fg:x="1387" fg:w="502"/><text x="47.3628%" y="783.50">&lt;wgpu::backend::direct::Co..</text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_texture (502 samples, 17.05%)</title><rect x="47.1128%" y="757" width="17.0516%" height="15" fill="rgb(247,130,50)" fg:x="1387" fg:w="502"/><text x="47.3628%" y="767.50">wgpu_core::device::queue::..</text></g><g><title>core::intrinsics::copy_nonoverlapping (502 samples, 17.05%)</title><rect x="47.1128%" y="741" width="17.0516%" height="15" fill="rgb(211,109,4)" fg:x="1387" fg:w="502"/><text x="47.3628%" y="751.50">core::intrinsics::copy_non..</text></g><g><title>[libc.so.6] (502 samples, 17.05%)</title><rect x="47.1128%" y="725" width="17.0516%" height="15" fill="rgb(238,50,21)" fg:x="1387" fg:w="502"/><text x="47.3628%" y="735.50">[libc.so.6]</text></g><g><title>[unknown] (52 samples, 1.77%)</title><rect x="62.3981%" y="709" width="1.7663%" height="15" fill="rgb(225,57,45)" fg:x="1837" fg:w="52"/><text x="62.6481%" y="719.50"></text></g><g><title>[unknown] (42 samples, 1.43%)</title><rect x="62.7378%" y="693" width="1.4266%" height="15" fill="rgb(209,196,50)" fg:x="1847" fg:w="42"/><text x="62.9878%" y="703.50"></text></g><g><title>[unknown] (39 samples, 1.32%)</title><rect x="62.8397%" y="677" width="1.3247%" height="15" fill="rgb(242,140,13)" fg:x="1850" fg:w="39"/><text x="63.0897%" y="687.50"></text></g><g><title>[unknown] (39 samples, 1.32%)</title><rect x="62.8397%" y="661" width="1.3247%" height="15" fill="rgb(217,111,7)" fg:x="1850" fg:w="39"/><text x="63.0897%" y="671.50"></text></g><g><title>[unknown] (38 samples, 1.29%)</title><rect x="62.8736%" y="645" width="1.2908%" height="15" fill="rgb(253,193,51)" fg:x="1851" fg:w="38"/><text x="63.1236%" y="655.50"></text></g><g><title>[unknown] (36 samples, 1.22%)</title><rect x="62.9416%" y="629" width="1.2228%" height="15" fill="rgb(252,70,29)" fg:x="1853" fg:w="36"/><text x="63.1916%" y="639.50"></text></g><g><title>[unknown] (34 samples, 1.15%)</title><rect x="63.0095%" y="613" width="1.1549%" height="15" fill="rgb(232,127,12)" fg:x="1855" fg:w="34"/><text x="63.2595%" y="623.50"></text></g><g><title>[unknown] (33 samples, 1.12%)</title><rect x="63.0435%" y="597" width="1.1209%" height="15" fill="rgb(211,180,21)" fg:x="1856" fg:w="33"/><text x="63.2935%" y="607.50"></text></g><g><title>[unknown] (33 samples, 1.12%)</title><rect x="63.0435%" y="581" width="1.1209%" height="15" fill="rgb(229,72,13)" fg:x="1856" fg:w="33"/><text x="63.2935%" y="591.50"></text></g><g><title>[unknown] (29 samples, 0.99%)</title><rect x="63.1793%" y="565" width="0.9851%" height="15" fill="rgb(240,211,49)" fg:x="1860" fg:w="29"/><text x="63.4293%" y="575.50"></text></g><g><title>[unknown] (28 samples, 0.95%)</title><rect x="63.2133%" y="549" width="0.9511%" height="15" fill="rgb(219,149,40)" fg:x="1861" fg:w="28"/><text x="63.4633%" y="559.50"></text></g><g><title>[unknown] (27 samples, 0.92%)</title><rect x="63.2473%" y="533" width="0.9171%" height="15" fill="rgb(210,127,46)" fg:x="1862" fg:w="27"/><text x="63.4973%" y="543.50"></text></g><g><title>[unknown] (24 samples, 0.82%)</title><rect x="63.3492%" y="517" width="0.8152%" height="15" fill="rgb(220,106,7)" fg:x="1865" fg:w="24"/><text x="63.5992%" y="527.50"></text></g><g><title>[unknown] (24 samples, 0.82%)</title><rect x="63.3492%" y="501" width="0.8152%" height="15" fill="rgb(249,31,22)" fg:x="1865" fg:w="24"/><text x="63.5992%" y="511.50"></text></g><g><title>[unknown] (19 samples, 0.65%)</title><rect x="63.5190%" y="485" width="0.6454%" height="15" fill="rgb(253,1,49)" fg:x="1870" fg:w="19"/><text x="63.7690%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="64.1304%" y="469" width="0.0340%" height="15" fill="rgb(227,144,33)" fg:x="1888" fg:w="1"/><text x="64.3804%" y="479.50"></text></g><g><title>core::num::&lt;impl u8&gt;::wrapping_add (6 samples, 0.20%)</title><rect x="64.2323%" y="949" width="0.2038%" height="15" fill="rgb(249,163,44)" fg:x="1891" fg:w="6"/><text x="64.4823%" y="959.50"></text></g><g><title>core::convert::num::&lt;impl core::convert::From&lt;u8&gt; for i16&gt;::from (5 samples, 0.17%)</title><rect x="65.3872%" y="933" width="0.1698%" height="15" fill="rgb(234,15,39)" fg:x="1925" fg:w="5"/><text x="65.6372%" y="943.50"></text></g><g><title>png::decoder::Reader&lt;R&gt;::next_raw_interlaced_row (54 samples, 1.83%)</title><rect x="64.1644%" y="981" width="1.8342%" height="15" fill="rgb(207,66,16)" fg:x="1889" fg:w="54"/><text x="64.4144%" y="991.50">p..</text></g><g><title>png::filter::unfilter (54 samples, 1.83%)</title><rect x="64.1644%" y="965" width="1.8342%" height="15" fill="rgb(233,112,24)" fg:x="1889" fg:w="54"/><text x="64.4144%" y="975.50">p..</text></g><g><title>png::filter::filter_paeth_decode (46 samples, 1.56%)</title><rect x="64.4361%" y="949" width="1.5625%" height="15" fill="rgb(230,90,22)" fg:x="1897" fg:w="46"/><text x="64.6861%" y="959.50"></text></g><g><title>core::num::&lt;impl i16&gt;::abs (13 samples, 0.44%)</title><rect x="65.5571%" y="933" width="0.4416%" height="15" fill="rgb(229,61,13)" fg:x="1930" fg:w="13"/><text x="65.8071%" y="943.50"></text></g><g><title>image::io::free_functions::load (55 samples, 1.87%)</title><rect x="64.1644%" y="1173" width="1.8682%" height="15" fill="rgb(225,57,24)" fg:x="1889" fg:w="55"/><text x="64.4144%" y="1183.50">i..</text></g><g><title>image::io::free_functions::load_inner (55 samples, 1.87%)</title><rect x="64.1644%" y="1157" width="1.8682%" height="15" fill="rgb(208,169,48)" fg:x="1889" fg:w="55"/><text x="64.4144%" y="1167.50">i..</text></g><g><title>image::io::free_functions::load_decoder (55 samples, 1.87%)</title><rect x="64.1644%" y="1141" width="1.8682%" height="15" fill="rgb(244,218,51)" fg:x="1889" fg:w="55"/><text x="64.4144%" y="1151.50">i..</text></g><g><title>&lt;image::io::free_functions::load_inner::LoadVisitor as image::io::free_functions::DecoderVisitor&gt;::visit_decoder (55 samples, 1.87%)</title><rect x="64.1644%" y="1125" width="1.8682%" height="15" fill="rgb(214,148,10)" fg:x="1889" fg:w="55"/><text x="64.4144%" y="1135.50">&lt;..</text></g><g><title>image::dynimage::DynamicImage::from_decoder (55 samples, 1.87%)</title><rect x="64.1644%" y="1109" width="1.8682%" height="15" fill="rgb(225,174,27)" fg:x="1889" fg:w="55"/><text x="64.4144%" y="1119.50">i..</text></g><g><title>image::dynimage::decoder_to_image (55 samples, 1.87%)</title><rect x="64.1644%" y="1093" width="1.8682%" height="15" fill="rgb(230,96,26)" fg:x="1889" fg:w="55"/><text x="64.4144%" y="1103.50">i..</text></g><g><title>image::image::decoder_to_vec (55 samples, 1.87%)</title><rect x="64.1644%" y="1077" width="1.8682%" height="15" fill="rgb(232,10,30)" fg:x="1889" fg:w="55"/><text x="64.4144%" y="1087.50">i..</text></g><g><title>&lt;image::codecs::png::PngDecoder&lt;R&gt; as image::image::ImageDecoder&gt;::read_image (55 samples, 1.87%)</title><rect x="64.1644%" y="1061" width="1.8682%" height="15" fill="rgb(222,8,50)" fg:x="1889" fg:w="55"/><text x="64.4144%" y="1071.50">&lt;..</text></g><g><title>png::decoder::Reader&lt;R&gt;::next_frame (55 samples, 1.87%)</title><rect x="64.1644%" y="1045" width="1.8682%" height="15" fill="rgb(213,81,27)" fg:x="1889" fg:w="55"/><text x="64.4144%" y="1055.50">p..</text></g><g><title>png::decoder::Reader&lt;R&gt;::next_row (55 samples, 1.87%)</title><rect x="64.1644%" y="1029" width="1.8682%" height="15" fill="rgb(245,50,10)" fg:x="1889" fg:w="55"/><text x="64.4144%" y="1039.50">p..</text></g><g><title>png::decoder::Reader&lt;R&gt;::next_interlaced_row (55 samples, 1.87%)</title><rect x="64.1644%" y="1013" width="1.8682%" height="15" fill="rgb(216,100,18)" fg:x="1889" fg:w="55"/><text x="64.4144%" y="1023.50">p..</text></g><g><title>png::decoder::Reader&lt;R&gt;::next_interlaced_row_impl (55 samples, 1.87%)</title><rect x="64.1644%" y="997" width="1.8682%" height="15" fill="rgb(236,147,54)" fg:x="1889" fg:w="55"/><text x="64.4144%" y="1007.50">p..</text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write_all (1 samples, 0.03%)</title><rect x="65.9986%" y="981" width="0.0340%" height="15" fill="rgb(205,143,26)" fg:x="1943" fg:w="1"/><text x="66.2486%" y="991.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut [u8]&gt;::write (1 samples, 0.03%)</title><rect x="65.9986%" y="965" width="0.0340%" height="15" fill="rgb(236,26,9)" fg:x="1943" fg:w="1"/><text x="66.2486%" y="975.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.03%)</title><rect x="65.9986%" y="949" width="0.0340%" height="15" fill="rgb(221,165,53)" fg:x="1943" fg:w="1"/><text x="66.2486%" y="959.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.03%)</title><rect x="65.9986%" y="933" width="0.0340%" height="15" fill="rgb(214,110,17)" fg:x="1943" fg:w="1"/><text x="66.2486%" y="943.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="65.9986%" y="917" width="0.0340%" height="15" fill="rgb(237,197,12)" fg:x="1943" fg:w="1"/><text x="66.2486%" y="927.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.03%)</title><rect x="66.0326%" y="1141" width="0.0340%" height="15" fill="rgb(205,84,17)" fg:x="1944" fg:w="1"/><text x="66.2826%" y="1151.50"></text></g><g><title>crc32fast::Hasher::update (1 samples, 0.03%)</title><rect x="66.0666%" y="1141" width="0.0340%" height="15" fill="rgb(237,18,45)" fg:x="1945" fg:w="1"/><text x="66.3166%" y="1151.50"></text></g><g><title>crc32fast::specialized::pclmulqdq::State::update (1 samples, 0.03%)</title><rect x="66.0666%" y="1125" width="0.0340%" height="15" fill="rgb(221,87,14)" fg:x="1945" fg:w="1"/><text x="66.3166%" y="1135.50"></text></g><g><title>crc32fast::specialized::pclmulqdq::calculate (1 samples, 0.03%)</title><rect x="66.0666%" y="1109" width="0.0340%" height="15" fill="rgb(238,186,15)" fg:x="1945" fg:w="1"/><text x="66.3166%" y="1119.50"></text></g><g><title>crc32fast::specialized::pclmulqdq::reduce128 (1 samples, 0.03%)</title><rect x="66.0666%" y="1093" width="0.0340%" height="15" fill="rgb(208,115,11)" fg:x="1945" fg:w="1"/><text x="66.3166%" y="1103.50"></text></g><g><title>core::core_arch::x86::pclmulqdq::_mm_clmulepi64_si128 (1 samples, 0.03%)</title><rect x="66.0666%" y="1077" width="0.0340%" height="15" fill="rgb(254,175,0)" fg:x="1945" fg:w="1"/><text x="66.3166%" y="1087.50"></text></g><g><title>fdeflate::decompress::Decompressor::read_block_header (1 samples, 0.03%)</title><rect x="66.1345%" y="1109" width="0.0340%" height="15" fill="rgb(227,24,42)" fg:x="1947" fg:w="1"/><text x="66.3845%" y="1119.50"></text></g><g><title>fdeflate::compute_codes (1 samples, 0.03%)</title><rect x="66.1345%" y="1093" width="0.0340%" height="15" fill="rgb(223,211,37)" fg:x="1947" fg:w="1"/><text x="66.3845%" y="1103.50"></text></g><g><title>fdeflate::decompress::Decompressor::read_code_lengths (3 samples, 0.10%)</title><rect x="66.1685%" y="1109" width="0.1019%" height="15" fill="rgb(235,49,27)" fg:x="1948" fg:w="3"/><text x="66.4185%" y="1119.50"></text></g><g><title>fdeflate::decompress::Decompressor::build_tables (3 samples, 0.10%)</title><rect x="66.1685%" y="1093" width="0.1019%" height="15" fill="rgb(254,97,51)" fg:x="1948" fg:w="3"/><text x="66.4185%" y="1103.50"></text></g><g><title>fdeflate::compute_codes (2 samples, 0.07%)</title><rect x="66.2024%" y="1077" width="0.0679%" height="15" fill="rgb(249,51,40)" fg:x="1949" fg:w="2"/><text x="66.4524%" y="1087.50"></text></g><g><title>core::num::&lt;impl u16&gt;::reverse_bits (1 samples, 0.03%)</title><rect x="66.2364%" y="1061" width="0.0340%" height="15" fill="rgb(210,128,45)" fg:x="1950" fg:w="1"/><text x="66.4864%" y="1071.50"></text></g><g><title>[libc.so.6] (15 samples, 0.51%)</title><rect x="68.0027%" y="1093" width="0.5095%" height="15" fill="rgb(224,137,50)" fg:x="2002" fg:w="15"/><text x="68.2527%" y="1103.50"></text></g><g><title>core::cmp::Ord::min (4 samples, 0.14%)</title><rect x="68.5122%" y="1093" width="0.1359%" height="15" fill="rgb(242,15,9)" fg:x="2017" fg:w="4"/><text x="68.7622%" y="1103.50"></text></g><g><title>core::cmp::min_by (4 samples, 0.14%)</title><rect x="68.5122%" y="1077" width="0.1359%" height="15" fill="rgb(233,187,41)" fg:x="2017" fg:w="4"/><text x="68.7622%" y="1087.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.03%)</title><rect x="68.6481%" y="1077" width="0.0340%" height="15" fill="rgb(227,2,29)" fg:x="2021" fg:w="1"/><text x="68.8981%" y="1087.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_within (3 samples, 0.10%)</title><rect x="68.6481%" y="1093" width="0.1019%" height="15" fill="rgb(222,70,3)" fg:x="2021" fg:w="3"/><text x="68.8981%" y="1103.50"></text></g><g><title>core::slice::index::range (2 samples, 0.07%)</title><rect x="68.6821%" y="1077" width="0.0679%" height="15" fill="rgb(213,11,42)" fg:x="2022" fg:w="2"/><text x="68.9321%" y="1087.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.03%)</title><rect x="68.7500%" y="1093" width="0.0340%" height="15" fill="rgb(225,150,9)" fg:x="2024" fg:w="1"/><text x="69.0000%" y="1103.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.03%)</title><rect x="68.7500%" y="1077" width="0.0340%" height="15" fill="rgb(230,162,45)" fg:x="2024" fg:w="1"/><text x="69.0000%" y="1087.50"></text></g><g><title>fdeflate::decompress::Decompressor::consume_bits (3 samples, 0.10%)</title><rect x="68.7840%" y="1093" width="0.1019%" height="15" fill="rgb(222,14,52)" fg:x="2025" fg:w="3"/><text x="69.0340%" y="1103.50"></text></g><g><title>fdeflate::decompress::Decompressor::read (87 samples, 2.96%)</title><rect x="66.1005%" y="1125" width="2.9552%" height="15" fill="rgb(254,198,14)" fg:x="1946" fg:w="87"/><text x="66.3505%" y="1135.50">fde..</text></g><g><title>fdeflate::decompress::Decompressor::read_compressed (82 samples, 2.79%)</title><rect x="66.2704%" y="1109" width="2.7853%" height="15" fill="rgb(220,217,30)" fg:x="1951" fg:w="82"/><text x="66.5204%" y="1119.50">fd..</text></g><g><title>fdeflate::decompress::Decompressor::fill_buffer (5 samples, 0.17%)</title><rect x="68.8859%" y="1093" width="0.1698%" height="15" fill="rgb(215,146,41)" fg:x="2028" fg:w="5"/><text x="69.1359%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (2 samples, 0.07%)</title><rect x="69.0557%" y="1029" width="0.0679%" height="15" fill="rgb(217,27,36)" fg:x="2033" fg:w="2"/><text x="69.3057%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::{{closure}} (2 samples, 0.07%)</title><rect x="69.0557%" y="1013" width="0.0679%" height="15" fill="rgb(219,218,39)" fg:x="2033" fg:w="2"/><text x="69.3057%" y="1023.50"></text></g><g><title>core::ptr::write (2 samples, 0.07%)</title><rect x="69.0557%" y="997" width="0.0679%" height="15" fill="rgb(219,4,42)" fg:x="2033" fg:w="2"/><text x="69.3057%" y="1007.50"></text></g><g><title>png::decoder::stream::StreamingDecoder::update (94 samples, 3.19%)</title><rect x="66.0326%" y="1173" width="3.1929%" height="15" fill="rgb(249,119,36)" fg:x="1944" fg:w="94"/><text x="66.2826%" y="1183.50">png..</text></g><g><title>png::decoder::stream::StreamingDecoder::next_state (94 samples, 3.19%)</title><rect x="66.0326%" y="1157" width="3.1929%" height="15" fill="rgb(209,23,33)" fg:x="1944" fg:w="94"/><text x="66.2826%" y="1167.50">png..</text></g><g><title>png::decoder::zlib::ZlibStream::decompress (92 samples, 3.12%)</title><rect x="66.1005%" y="1141" width="3.1250%" height="15" fill="rgb(211,10,0)" fg:x="1946" fg:w="92"/><text x="66.3505%" y="1151.50">png..</text></g><g><title>png::decoder::zlib::ZlibStream::transfer_finished_data (5 samples, 0.17%)</title><rect x="69.0557%" y="1125" width="0.1698%" height="15" fill="rgb(208,99,37)" fg:x="2033" fg:w="5"/><text x="69.3057%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (5 samples, 0.17%)</title><rect x="69.0557%" y="1109" width="0.1698%" height="15" fill="rgb(213,132,31)" fg:x="2033" fg:w="5"/><text x="69.3057%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.17%)</title><rect x="69.0557%" y="1093" width="0.1698%" height="15" fill="rgb(243,129,40)" fg:x="2033" fg:w="5"/><text x="69.3057%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (5 samples, 0.17%)</title><rect x="69.0557%" y="1077" width="0.1698%" height="15" fill="rgb(210,66,33)" fg:x="2033" fg:w="5"/><text x="69.3057%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (5 samples, 0.17%)</title><rect x="69.0557%" y="1061" width="0.1698%" height="15" fill="rgb(209,189,4)" fg:x="2033" fg:w="5"/><text x="69.3057%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (5 samples, 0.17%)</title><rect x="69.0557%" y="1045" width="0.1698%" height="15" fill="rgb(214,107,37)" fg:x="2033" fg:w="5"/><text x="69.3057%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;u8&gt;&gt; (3 samples, 0.10%)</title><rect x="69.1236%" y="1029" width="0.1019%" height="15" fill="rgb(245,88,54)" fg:x="2035" fg:w="3"/><text x="69.3736%" y="1039.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.10%)</title><rect x="69.1236%" y="1013" width="0.1019%" height="15" fill="rgb(205,146,20)" fg:x="2035" fg:w="3"/><text x="69.3736%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;u8,alloc::alloc::Global&gt;&gt; (3 samples, 0.10%)</title><rect x="69.1236%" y="997" width="0.1019%" height="15" fill="rgb(220,161,25)" fg:x="2035" fg:w="3"/><text x="69.3736%" y="1007.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.10%)</title><rect x="69.1236%" y="981" width="0.1019%" height="15" fill="rgb(215,152,15)" fg:x="2035" fg:w="3"/><text x="69.3736%" y="991.50"></text></g><g><title>core::intrinsics::copy (3 samples, 0.10%)</title><rect x="69.1236%" y="965" width="0.1019%" height="15" fill="rgb(233,192,44)" fg:x="2035" fg:w="3"/><text x="69.3736%" y="975.50"></text></g><g><title>[libc.so.6] (3 samples, 0.10%)</title><rect x="69.1236%" y="949" width="0.1019%" height="15" fill="rgb(240,170,46)" fg:x="2035" fg:w="3"/><text x="69.3736%" y="959.50"></text></g><g><title>TaskPool_(30) (664 samples, 22.55%)</title><rect x="46.7391%" y="1205" width="22.5543%" height="15" fill="rgb(207,104,33)" fg:x="1376" fg:w="664"/><text x="46.9891%" y="1215.50">TaskPool_(30)</text></g><g><title>[unknown] (655 samples, 22.25%)</title><rect x="47.0448%" y="1189" width="22.2486%" height="15" fill="rgb(219,21,39)" fg:x="1385" fg:w="655"/><text x="47.2948%" y="1199.50">[unknown]</text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_texture (2 samples, 0.07%)</title><rect x="69.2255%" y="1173" width="0.0679%" height="15" fill="rgb(214,133,29)" fg:x="2038" fg:w="2"/><text x="69.4755%" y="1183.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::copy_buffer_to_texture (2 samples, 0.07%)</title><rect x="69.2255%" y="1157" width="0.0679%" height="15" fill="rgb(226,93,6)" fg:x="2038" fg:w="2"/><text x="69.4755%" y="1167.50"></text></g><g><title>ash::device::Device::cmd_copy_buffer_to_image (2 samples, 0.07%)</title><rect x="69.2255%" y="1141" width="0.0679%" height="15" fill="rgb(252,222,34)" fg:x="2038" fg:w="2"/><text x="69.4755%" y="1151.50"></text></g><g><title>[libvulkan_radeon.so] (2 samples, 0.07%)</title><rect x="69.2255%" y="1125" width="0.0679%" height="15" fill="rgb(252,92,48)" fg:x="2038" fg:w="2"/><text x="69.4755%" y="1135.50"></text></g><g><title>[libvulkan_radeon.so] (2 samples, 0.07%)</title><rect x="69.2255%" y="1109" width="0.0679%" height="15" fill="rgb(245,223,24)" fg:x="2038" fg:w="2"/><text x="69.4755%" y="1119.50"></text></g><g><title>[libvulkan_radeon.so] (2 samples, 0.07%)</title><rect x="69.2255%" y="1093" width="0.0679%" height="15" fill="rgb(205,176,3)" fg:x="2038" fg:w="2"/><text x="69.4755%" y="1103.50"></text></g><g><title>[libvulkan_radeon.so] (2 samples, 0.07%)</title><rect x="69.2255%" y="1077" width="0.0679%" height="15" fill="rgb(235,151,15)" fg:x="2038" fg:w="2"/><text x="69.4755%" y="1087.50"></text></g><g><title>[libvulkan_radeon.so] (2 samples, 0.07%)</title><rect x="69.2255%" y="1061" width="0.0679%" height="15" fill="rgb(237,209,11)" fg:x="2038" fg:w="2"/><text x="69.4755%" y="1071.50"></text></g><g><title>[libvulkan_radeon.so] (2 samples, 0.07%)</title><rect x="69.2255%" y="1045" width="0.0679%" height="15" fill="rgb(243,227,24)" fg:x="2038" fg:w="2"/><text x="69.4755%" y="1055.50"></text></g><g><title>[libvulkan_radeon.so] (2 samples, 0.07%)</title><rect x="69.2255%" y="1029" width="0.0679%" height="15" fill="rgb(239,193,16)" fg:x="2038" fg:w="2"/><text x="69.4755%" y="1039.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.03%)</title><rect x="69.2935%" y="741" width="0.0340%" height="15" fill="rgb(231,27,9)" fg:x="2040" fg:w="1"/><text x="69.5435%" y="751.50"></text></g><g><title>async_channel::Recv&lt;T&gt;::run_with_strategy (1 samples, 0.03%)</title><rect x="69.2935%" y="725" width="0.0340%" height="15" fill="rgb(219,169,10)" fg:x="2040" fg:w="1"/><text x="69.5435%" y="735.50"></text></g><g><title>&lt;async_channel::NonBlocking as async_channel::Strategy&gt;::poll (1 samples, 0.03%)</title><rect x="69.2935%" y="709" width="0.0340%" height="15" fill="rgb(244,229,43)" fg:x="2040" fg:w="1"/><text x="69.5435%" y="719.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (1 samples, 0.03%)</title><rect x="69.2935%" y="693" width="0.0340%" height="15" fill="rgb(254,38,20)" fg:x="2040" fg:w="1"/><text x="69.5435%" y="703.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.03%)</title><rect x="69.2935%" y="677" width="0.0340%" height="15" fill="rgb(250,47,30)" fg:x="2040" fg:w="1"/><text x="69.5435%" y="687.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (3 samples, 0.10%)</title><rect x="69.2935%" y="757" width="0.1019%" height="15" fill="rgb(224,124,36)" fg:x="2040" fg:w="3"/><text x="69.5435%" y="767.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}}::{{closure}}::{{closure}}::{{closure}} (2 samples, 0.07%)</title><rect x="69.3274%" y="741" width="0.0679%" height="15" fill="rgb(246,68,51)" fg:x="2041" fg:w="2"/><text x="69.5774%" y="751.50"></text></g><g><title>async_executor::LocalExecutor::tick::{{closure}} (2 samples, 0.07%)</title><rect x="69.3274%" y="725" width="0.0679%" height="15" fill="rgb(253,43,49)" fg:x="2041" fg:w="2"/><text x="69.5774%" y="735.50"></text></g><g><title>async_executor::Executor::tick::{{closure}} (2 samples, 0.07%)</title><rect x="69.3274%" y="709" width="0.0679%" height="15" fill="rgb(219,54,36)" fg:x="2041" fg:w="2"/><text x="69.5774%" y="719.50"></text></g><g><title>async_executor::Ticker::runnable::{{closure}} (2 samples, 0.07%)</title><rect x="69.3274%" y="693" width="0.0679%" height="15" fill="rgb(227,133,34)" fg:x="2041" fg:w="2"/><text x="69.5774%" y="703.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (1 samples, 0.03%)</title><rect x="69.3614%" y="677" width="0.0340%" height="15" fill="rgb(247,227,15)" fg:x="2042" fg:w="1"/><text x="69.6114%" y="687.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.03%)</title><rect x="69.3614%" y="661" width="0.0340%" height="15" fill="rgb(229,96,14)" fg:x="2042" fg:w="1"/><text x="69.6114%" y="671.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="69.3614%" y="645" width="0.0340%" height="15" fill="rgb(220,79,17)" fg:x="2042" fg:w="1"/><text x="69.6114%" y="655.50"></text></g><g><title>async_executor::Ticker::sleep (1 samples, 0.03%)</title><rect x="69.3614%" y="629" width="0.0340%" height="15" fill="rgb(205,131,53)" fg:x="2042" fg:w="1"/><text x="69.6114%" y="639.50"></text></g><g><title>async_executor::steal (5 samples, 0.17%)</title><rect x="69.4293%" y="661" width="0.1698%" height="15" fill="rgb(209,50,29)" fg:x="2044" fg:w="5"/><text x="69.6793%" y="671.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::len (5 samples, 0.17%)</title><rect x="69.4293%" y="645" width="0.1698%" height="15" fill="rgb(245,86,46)" fg:x="2044" fg:w="5"/><text x="69.6793%" y="655.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::len (3 samples, 0.10%)</title><rect x="69.4973%" y="629" width="0.1019%" height="15" fill="rgb(235,66,46)" fg:x="2046" fg:w="3"/><text x="69.7473%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.03%)</title><rect x="69.5652%" y="613" width="0.0340%" height="15" fill="rgb(232,148,31)" fg:x="2048" fg:w="1"/><text x="69.8152%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.03%)</title><rect x="69.5652%" y="597" width="0.0340%" height="15" fill="rgb(217,149,8)" fg:x="2048" fg:w="1"/><text x="69.8152%" y="607.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (7 samples, 0.24%)</title><rect x="69.3954%" y="741" width="0.2378%" height="15" fill="rgb(209,183,11)" fg:x="2043" fg:w="7"/><text x="69.6454%" y="751.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (6 samples, 0.20%)</title><rect x="69.4293%" y="725" width="0.2038%" height="15" fill="rgb(208,55,20)" fg:x="2044" fg:w="6"/><text x="69.6793%" y="735.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (6 samples, 0.20%)</title><rect x="69.4293%" y="709" width="0.2038%" height="15" fill="rgb(218,39,14)" fg:x="2044" fg:w="6"/><text x="69.6793%" y="719.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (6 samples, 0.20%)</title><rect x="69.4293%" y="693" width="0.2038%" height="15" fill="rgb(216,169,33)" fg:x="2044" fg:w="6"/><text x="69.6793%" y="703.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (6 samples, 0.20%)</title><rect x="69.4293%" y="677" width="0.2038%" height="15" fill="rgb(233,80,24)" fg:x="2044" fg:w="6"/><text x="69.6793%" y="687.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (1 samples, 0.03%)</title><rect x="69.5992%" y="661" width="0.0340%" height="15" fill="rgb(213,179,31)" fg:x="2049" fg:w="1"/><text x="69.8492%" y="671.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (1 samples, 0.03%)</title><rect x="69.5992%" y="645" width="0.0340%" height="15" fill="rgb(209,19,5)" fg:x="2049" fg:w="1"/><text x="69.8492%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.03%)</title><rect x="69.5992%" y="629" width="0.0340%" height="15" fill="rgb(219,18,35)" fg:x="2049" fg:w="1"/><text x="69.8492%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.03%)</title><rect x="69.5992%" y="613" width="0.0340%" height="15" fill="rgb(209,169,16)" fg:x="2049" fg:w="1"/><text x="69.8492%" y="623.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor as bevy_ecs::schedule::executor::SystemExecutor&gt;::run::{{closure}}::{{closure}} (2 samples, 0.07%)</title><rect x="69.6332%" y="693" width="0.0679%" height="15" fill="rgb(245,90,51)" fg:x="2050" fg:w="2"/><text x="69.8832%" y="703.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::spawn_system_tasks (2 samples, 0.07%)</title><rect x="69.6332%" y="677" width="0.0679%" height="15" fill="rgb(220,99,45)" fg:x="2050" fg:w="2"/><text x="69.8832%" y="687.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::spawn_exclusive_system_task (2 samples, 0.07%)</title><rect x="69.6332%" y="661" width="0.0679%" height="15" fill="rgb(249,89,25)" fg:x="2050" fg:w="2"/><text x="69.8832%" y="671.50"></text></g><g><title>bevy_tasks::task_pool::Scope&lt;T&gt;::spawn_on_scope (2 samples, 0.07%)</title><rect x="69.6332%" y="645" width="0.0679%" height="15" fill="rgb(239,193,0)" fg:x="2050" fg:w="2"/><text x="69.8832%" y="655.50"></text></g><g><title>bevy_tasks::thread_executor::ThreadExecutor::spawn (2 samples, 0.07%)</title><rect x="69.6332%" y="629" width="0.0679%" height="15" fill="rgb(231,126,1)" fg:x="2050" fg:w="2"/><text x="69.8832%" y="639.50"></text></g><g><title>async_executor::Executor::spawn (2 samples, 0.07%)</title><rect x="69.6332%" y="613" width="0.0679%" height="15" fill="rgb(243,166,3)" fg:x="2050" fg:w="2"/><text x="69.8832%" y="623.50"></text></g><g><title>async_task::runnable::Runnable&lt;M&gt;::schedule (2 samples, 0.07%)</title><rect x="69.6332%" y="597" width="0.0679%" height="15" fill="rgb(223,22,34)" fg:x="2050" fg:w="2"/><text x="69.8832%" y="607.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::schedule (2 samples, 0.07%)</title><rect x="69.6332%" y="581" width="0.0679%" height="15" fill="rgb(251,52,51)" fg:x="2050" fg:w="2"/><text x="69.8832%" y="591.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (2 samples, 0.07%)</title><rect x="69.6332%" y="565" width="0.0679%" height="15" fill="rgb(221,165,28)" fg:x="2050" fg:w="2"/><text x="69.8832%" y="575.50"></text></g><g><title>futures_lite::future::block_on::parker_and_waker::{{closure}} (2 samples, 0.07%)</title><rect x="69.6332%" y="549" width="0.0679%" height="15" fill="rgb(218,121,47)" fg:x="2050" fg:w="2"/><text x="69.8832%" y="559.50"></text></g><g><title>parking::Unparker::unpark (2 samples, 0.07%)</title><rect x="69.6332%" y="533" width="0.0679%" height="15" fill="rgb(209,120,9)" fg:x="2050" fg:w="2"/><text x="69.8832%" y="543.50"></text></g><g><title>parking::Inner::unpark (2 samples, 0.07%)</title><rect x="69.6332%" y="517" width="0.0679%" height="15" fill="rgb(236,68,12)" fg:x="2050" fg:w="2"/><text x="69.8832%" y="527.50"></text></g><g><title>syscall (2 samples, 0.07%)</title><rect x="69.6332%" y="501" width="0.0679%" height="15" fill="rgb(225,194,26)" fg:x="2050" fg:w="2"/><text x="69.8832%" y="511.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="69.6332%" y="485" width="0.0679%" height="15" fill="rgb(231,84,39)" fg:x="2050" fg:w="2"/><text x="69.8832%" y="495.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="69.6332%" y="469" width="0.0679%" height="15" fill="rgb(210,11,45)" fg:x="2050" fg:w="2"/><text x="69.8832%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="69.6332%" y="453" width="0.0679%" height="15" fill="rgb(224,54,52)" fg:x="2050" fg:w="2"/><text x="69.8832%" y="463.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="69.6332%" y="437" width="0.0679%" height="15" fill="rgb(238,102,14)" fg:x="2050" fg:w="2"/><text x="69.8832%" y="447.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="69.6332%" y="421" width="0.0679%" height="15" fill="rgb(243,160,52)" fg:x="2050" fg:w="2"/><text x="69.8832%" y="431.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="69.6332%" y="405" width="0.0679%" height="15" fill="rgb(216,114,19)" fg:x="2050" fg:w="2"/><text x="69.8832%" y="415.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="69.6332%" y="389" width="0.0679%" height="15" fill="rgb(244,166,37)" fg:x="2050" fg:w="2"/><text x="69.8832%" y="399.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="69.6332%" y="373" width="0.0679%" height="15" fill="rgb(246,29,44)" fg:x="2050" fg:w="2"/><text x="69.8832%" y="383.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="69.6332%" y="357" width="0.0679%" height="15" fill="rgb(215,56,53)" fg:x="2050" fg:w="2"/><text x="69.8832%" y="367.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::buffer_unmap (1 samples, 0.03%)</title><rect x="69.7011%" y="469" width="0.0340%" height="15" fill="rgb(217,60,2)" fg:x="2052" fg:w="1"/><text x="69.9511%" y="479.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::buffer_unmap (1 samples, 0.03%)</title><rect x="69.7011%" y="453" width="0.0340%" height="15" fill="rgb(207,26,24)" fg:x="2052" fg:w="1"/><text x="69.9511%" y="463.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_unmap (1 samples, 0.03%)</title><rect x="69.7011%" y="437" width="0.0340%" height="15" fill="rgb(252,210,15)" fg:x="2052" fg:w="1"/><text x="69.9511%" y="447.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_unmap_inner (1 samples, 0.03%)</title><rect x="69.7011%" y="421" width="0.0340%" height="15" fill="rgb(253,209,26)" fg:x="2052" fg:w="1"/><text x="69.9511%" y="431.50"></text></g><g><title>wgpu_core::device::queue::PendingWrites&lt;A&gt;::activate (1 samples, 0.03%)</title><rect x="69.7011%" y="405" width="0.0340%" height="15" fill="rgb(238,170,14)" fg:x="2052" fg:w="1"/><text x="69.9511%" y="415.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_encoding (1 samples, 0.03%)</title><rect x="69.7011%" y="389" width="0.0340%" height="15" fill="rgb(216,178,15)" fg:x="2052" fg:w="1"/><text x="69.9511%" y="399.50"></text></g><g><title>ash::device::Device::begin_command_buffer (1 samples, 0.03%)</title><rect x="69.7011%" y="373" width="0.0340%" height="15" fill="rgb(250,197,2)" fg:x="2052" fg:w="1"/><text x="69.9511%" y="383.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="69.7011%" y="357" width="0.0340%" height="15" fill="rgb(212,70,42)" fg:x="2052" fg:w="1"/><text x="69.9511%" y="367.50"></text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (2 samples, 0.07%)</title><rect x="69.7011%" y="485" width="0.0679%" height="15" fill="rgb(227,213,9)" fg:x="2052" fg:w="2"/><text x="69.9511%" y="495.50"></text></g><g><title>wgpu::BufferSlice::get_mapped_range_mut (1 samples, 0.03%)</title><rect x="69.7351%" y="469" width="0.0340%" height="15" fill="rgb(245,99,25)" fg:x="2053" fg:w="1"/><text x="69.9851%" y="479.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::buffer_get_mapped_range (1 samples, 0.03%)</title><rect x="69.7351%" y="453" width="0.0340%" height="15" fill="rgb(250,82,29)" fg:x="2053" fg:w="1"/><text x="69.9851%" y="463.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::buffer_get_mapped_range (1 samples, 0.03%)</title><rect x="69.7351%" y="437" width="0.0340%" height="15" fill="rgb(241,226,54)" fg:x="2053" fg:w="1"/><text x="69.9851%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::Texture&gt; (1 samples, 0.03%)</title><rect x="69.7690%" y="485" width="0.0340%" height="15" fill="rgb(221,99,41)" fg:x="2054" fg:w="1"/><text x="70.0190%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Sync+core::marker::Send&gt;&gt; (1 samples, 0.03%)</title><rect x="69.7690%" y="469" width="0.0340%" height="15" fill="rgb(213,90,21)" fg:x="2054" fg:w="1"/><text x="70.0190%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::backend::direct::Queue&gt; (1 samples, 0.03%)</title><rect x="69.7690%" y="453" width="0.0340%" height="15" fill="rgb(205,208,24)" fg:x="2054" fg:w="1"/><text x="70.0190%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;lock_api::mutex::Mutex&lt;parking_lot::raw_mutex::RawMutex,wgpu::backend::direct::ErrorSinkRaw&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="69.7690%" y="437" width="0.0340%" height="15" fill="rgb(246,31,12)" fg:x="2054" fg:w="1"/><text x="70.0190%" y="447.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="69.7690%" y="421" width="0.0340%" height="15" fill="rgb(213,154,6)" fg:x="2054" fg:w="1"/><text x="70.0190%" y="431.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::inner (1 samples, 0.03%)</title><rect x="69.7690%" y="405" width="0.0340%" height="15" fill="rgb(222,163,29)" fg:x="2054" fg:w="1"/><text x="70.0190%" y="415.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.03%)</title><rect x="69.7690%" y="389" width="0.0340%" height="15" fill="rgb(227,201,8)" fg:x="2054" fg:w="1"/><text x="70.0190%" y="399.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (16 samples, 0.54%)</title><rect x="69.2935%" y="789" width="0.5435%" height="15" fill="rgb(233,9,32)" fg:x="2040" fg:w="16"/><text x="69.5435%" y="799.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (16 samples, 0.54%)</title><rect x="69.2935%" y="773" width="0.5435%" height="15" fill="rgb(217,54,24)" fg:x="2040" fg:w="16"/><text x="69.5435%" y="783.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (13 samples, 0.44%)</title><rect x="69.3954%" y="757" width="0.4416%" height="15" fill="rgb(235,192,0)" fg:x="2043" fg:w="13"/><text x="69.6454%" y="767.50"></text></g><g><title>async_task::runnable::Runnable&lt;M&gt;::run (6 samples, 0.20%)</title><rect x="69.6332%" y="741" width="0.2038%" height="15" fill="rgb(235,45,9)" fg:x="2050" fg:w="6"/><text x="69.8832%" y="751.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::run (6 samples, 0.20%)</title><rect x="69.6332%" y="725" width="0.2038%" height="15" fill="rgb(246,42,40)" fg:x="2050" fg:w="6"/><text x="69.8832%" y="735.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (6 samples, 0.20%)</title><rect x="69.6332%" y="709" width="0.2038%" height="15" fill="rgb(248,111,24)" fg:x="2050" fg:w="6"/><text x="69.8832%" y="719.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::spawn_system_task::{{closure}} (4 samples, 0.14%)</title><rect x="69.7011%" y="693" width="0.1359%" height="15" fill="rgb(249,65,22)" fg:x="2052" fg:w="4"/><text x="69.9511%" y="703.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.14%)</title><rect x="69.7011%" y="677" width="0.1359%" height="15" fill="rgb(238,111,51)" fg:x="2052" fg:w="4"/><text x="69.9511%" y="687.50"></text></g><g><title>std::panicking::try (4 samples, 0.14%)</title><rect x="69.7011%" y="661" width="0.1359%" height="15" fill="rgb(250,118,22)" fg:x="2052" fg:w="4"/><text x="69.9511%" y="671.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.14%)</title><rect x="69.7011%" y="645" width="0.1359%" height="15" fill="rgb(234,84,26)" fg:x="2052" fg:w="4"/><text x="69.9511%" y="655.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4 samples, 0.14%)</title><rect x="69.7011%" y="629" width="0.1359%" height="15" fill="rgb(243,172,12)" fg:x="2052" fg:w="4"/><text x="69.9511%" y="639.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4 samples, 0.14%)</title><rect x="69.7011%" y="613" width="0.1359%" height="15" fill="rgb(236,150,49)" fg:x="2052" fg:w="4"/><text x="69.9511%" y="623.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::spawn_system_task::{{closure}}::{{closure}} (4 samples, 0.14%)</title><rect x="69.7011%" y="597" width="0.1359%" height="15" fill="rgb(225,197,26)" fg:x="2052" fg:w="4"/><text x="69.9511%" y="607.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (4 samples, 0.14%)</title><rect x="69.7011%" y="581" width="0.1359%" height="15" fill="rgb(214,17,42)" fg:x="2052" fg:w="4"/><text x="69.9511%" y="591.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;fn(F0,F1,F2,F3,F4,F5,F6,F7,F8,F9) .&gt; Out&gt;&gt;::run (4 samples, 0.14%)</title><rect x="69.7011%" y="565" width="0.1359%" height="15" fill="rgb(224,165,40)" fg:x="2052" fg:w="4"/><text x="69.9511%" y="575.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;fn(F0,F1,F2,F3,F4,F5,F6,F7,F8,F9) .&gt; Out&gt;&gt;::run::call_inner (4 samples, 0.14%)</title><rect x="69.7011%" y="549" width="0.1359%" height="15" fill="rgb(246,100,4)" fg:x="2052" fg:w="4"/><text x="69.9511%" y="559.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (4 samples, 0.14%)</title><rect x="69.7011%" y="533" width="0.1359%" height="15" fill="rgb(222,103,0)" fg:x="2052" fg:w="4"/><text x="69.9511%" y="543.50"></text></g><g><title>core::ops::function::FnMut::call_mut (4 samples, 0.14%)</title><rect x="69.7011%" y="517" width="0.1359%" height="15" fill="rgb(227,189,26)" fg:x="2052" fg:w="4"/><text x="69.9511%" y="527.50"></text></g><g><title>game_render::pbr::prepare_materials (4 samples, 0.14%)</title><rect x="69.7011%" y="501" width="0.1359%" height="15" fill="rgb(214,202,17)" fg:x="2052" fg:w="4"/><text x="69.9511%" y="511.50"></text></g><g><title>wgpu::Device::create_bind_group (1 samples, 0.03%)</title><rect x="69.8030%" y="485" width="0.0340%" height="15" fill="rgb(229,111,3)" fg:x="2055" fg:w="1"/><text x="70.0530%" y="495.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_create_bind_group (1 samples, 0.03%)</title><rect x="69.8030%" y="469" width="0.0340%" height="15" fill="rgb(229,172,15)" fg:x="2055" fg:w="1"/><text x="70.0530%" y="479.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::device_create_bind_group (1 samples, 0.03%)</title><rect x="69.8030%" y="453" width="0.0340%" height="15" fill="rgb(230,224,35)" fg:x="2055" fg:w="1"/><text x="70.0530%" y="463.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_bind_group (1 samples, 0.03%)</title><rect x="69.8030%" y="437" width="0.0340%" height="15" fill="rgb(251,141,6)" fg:x="2055" fg:w="1"/><text x="70.0530%" y="447.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="69.8030%" y="421" width="0.0340%" height="15" fill="rgb(225,208,6)" fg:x="2055" fg:w="1"/><text x="70.0530%" y="431.50"></text></g><g><title>[libc.so.6] (17 samples, 0.58%)</title><rect x="69.2935%" y="1189" width="0.5774%" height="15" fill="rgb(246,181,16)" fg:x="2040" fg:w="17"/><text x="69.5435%" y="1199.50"></text></g><g><title>[libc.so.6] (17 samples, 0.58%)</title><rect x="69.2935%" y="1173" width="0.5774%" height="15" fill="rgb(227,129,36)" fg:x="2040" fg:w="17"/><text x="69.5435%" y="1183.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (17 samples, 0.58%)</title><rect x="69.2935%" y="1157" width="0.5774%" height="15" fill="rgb(248,117,24)" fg:x="2040" fg:w="17"/><text x="69.5435%" y="1167.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (17 samples, 0.58%)</title><rect x="69.2935%" y="1141" width="0.5774%" height="15" fill="rgb(214,185,35)" fg:x="2040" fg:w="17"/><text x="69.5435%" y="1151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (17 samples, 0.58%)</title><rect x="69.2935%" y="1125" width="0.5774%" height="15" fill="rgb(236,150,34)" fg:x="2040" fg:w="17"/><text x="69.5435%" y="1135.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (17 samples, 0.58%)</title><rect x="69.2935%" y="1109" width="0.5774%" height="15" fill="rgb(243,228,27)" fg:x="2040" fg:w="17"/><text x="69.5435%" y="1119.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (17 samples, 0.58%)</title><rect x="69.2935%" y="1093" width="0.5774%" height="15" fill="rgb(245,77,44)" fg:x="2040" fg:w="17"/><text x="69.5435%" y="1103.50"></text></g><g><title>std::panic::catch_unwind (17 samples, 0.58%)</title><rect x="69.2935%" y="1077" width="0.5774%" height="15" fill="rgb(235,214,42)" fg:x="2040" fg:w="17"/><text x="69.5435%" y="1087.50"></text></g><g><title>std::panicking::try (17 samples, 0.58%)</title><rect x="69.2935%" y="1061" width="0.5774%" height="15" fill="rgb(221,74,3)" fg:x="2040" fg:w="17"/><text x="69.5435%" y="1071.50"></text></g><g><title>std::panicking::try::do_call (17 samples, 0.58%)</title><rect x="69.2935%" y="1045" width="0.5774%" height="15" fill="rgb(206,121,29)" fg:x="2040" fg:w="17"/><text x="69.5435%" y="1055.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (17 samples, 0.58%)</title><rect x="69.2935%" y="1029" width="0.5774%" height="15" fill="rgb(249,131,53)" fg:x="2040" fg:w="17"/><text x="69.5435%" y="1039.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (17 samples, 0.58%)</title><rect x="69.2935%" y="1013" width="0.5774%" height="15" fill="rgb(236,170,29)" fg:x="2040" fg:w="17"/><text x="69.5435%" y="1023.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (17 samples, 0.58%)</title><rect x="69.2935%" y="997" width="0.5774%" height="15" fill="rgb(247,96,15)" fg:x="2040" fg:w="17"/><text x="69.5435%" y="1007.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (17 samples, 0.58%)</title><rect x="69.2935%" y="981" width="0.5774%" height="15" fill="rgb(211,210,7)" fg:x="2040" fg:w="17"/><text x="69.5435%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (17 samples, 0.58%)</title><rect x="69.2935%" y="965" width="0.5774%" height="15" fill="rgb(240,88,50)" fg:x="2040" fg:w="17"/><text x="69.5435%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (17 samples, 0.58%)</title><rect x="69.2935%" y="949" width="0.5774%" height="15" fill="rgb(209,229,26)" fg:x="2040" fg:w="17"/><text x="69.5435%" y="959.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}}::{{closure}} (17 samples, 0.58%)</title><rect x="69.2935%" y="933" width="0.5774%" height="15" fill="rgb(210,68,23)" fg:x="2040" fg:w="17"/><text x="69.5435%" y="943.50"></text></g><g><title>std::panic::catch_unwind (17 samples, 0.58%)</title><rect x="69.2935%" y="917" width="0.5774%" height="15" fill="rgb(229,180,13)" fg:x="2040" fg:w="17"/><text x="69.5435%" y="927.50"></text></g><g><title>std::panicking::try (17 samples, 0.58%)</title><rect x="69.2935%" y="901" width="0.5774%" height="15" fill="rgb(236,53,44)" fg:x="2040" fg:w="17"/><text x="69.5435%" y="911.50"></text></g><g><title>std::panicking::try::do_call (17 samples, 0.58%)</title><rect x="69.2935%" y="885" width="0.5774%" height="15" fill="rgb(244,214,29)" fg:x="2040" fg:w="17"/><text x="69.5435%" y="895.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}}::{{closure}}::{{closure}} (17 samples, 0.58%)</title><rect x="69.2935%" y="869" width="0.5774%" height="15" fill="rgb(220,75,29)" fg:x="2040" fg:w="17"/><text x="69.5435%" y="879.50"></text></g><g><title>futures_lite::future::block_on (17 samples, 0.58%)</title><rect x="69.2935%" y="853" width="0.5774%" height="15" fill="rgb(214,183,37)" fg:x="2040" fg:w="17"/><text x="69.5435%" y="863.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (17 samples, 0.58%)</title><rect x="69.2935%" y="837" width="0.5774%" height="15" fill="rgb(239,117,29)" fg:x="2040" fg:w="17"/><text x="69.5435%" y="847.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (17 samples, 0.58%)</title><rect x="69.2935%" y="821" width="0.5774%" height="15" fill="rgb(237,171,35)" fg:x="2040" fg:w="17"/><text x="69.5435%" y="831.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (17 samples, 0.58%)</title><rect x="69.2935%" y="805" width="0.5774%" height="15" fill="rgb(229,178,53)" fg:x="2040" fg:w="17"/><text x="69.5435%" y="815.50"></text></g><g><title>parking::Inner::park (1 samples, 0.03%)</title><rect x="69.8370%" y="789" width="0.0340%" height="15" fill="rgb(210,102,19)" fg:x="2056" fg:w="1"/><text x="70.0870%" y="799.50"></text></g><g><title>std::sync::condvar::Condvar::wait (1 samples, 0.03%)</title><rect x="69.8370%" y="773" width="0.0340%" height="15" fill="rgb(235,127,22)" fg:x="2056" fg:w="1"/><text x="70.0870%" y="783.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait (1 samples, 0.03%)</title><rect x="69.8370%" y="757" width="0.0340%" height="15" fill="rgb(244,31,31)" fg:x="2056" fg:w="1"/><text x="70.0870%" y="767.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait_optional_timeout (1 samples, 0.03%)</title><rect x="69.8370%" y="741" width="0.0340%" height="15" fill="rgb(231,43,21)" fg:x="2056" fg:w="1"/><text x="70.0870%" y="751.50"></text></g><g><title>std::sys::unix::futex::futex_wait (1 samples, 0.03%)</title><rect x="69.8370%" y="725" width="0.0340%" height="15" fill="rgb(217,131,35)" fg:x="2056" fg:w="1"/><text x="70.0870%" y="735.50"></text></g><g><title>syscall (1 samples, 0.03%)</title><rect x="69.8370%" y="709" width="0.0340%" height="15" fill="rgb(221,149,4)" fg:x="2056" fg:w="1"/><text x="70.0870%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="69.8370%" y="693" width="0.0340%" height="15" fill="rgb(232,170,28)" fg:x="2056" fg:w="1"/><text x="70.0870%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="69.8370%" y="677" width="0.0340%" height="15" fill="rgb(238,56,10)" fg:x="2056" fg:w="1"/><text x="70.0870%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="69.8370%" y="661" width="0.0340%" height="15" fill="rgb(235,196,14)" fg:x="2056" fg:w="1"/><text x="70.0870%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="69.8370%" y="645" width="0.0340%" height="15" fill="rgb(216,45,48)" fg:x="2056" fg:w="1"/><text x="70.0870%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="69.8370%" y="629" width="0.0340%" height="15" fill="rgb(238,213,17)" fg:x="2056" fg:w="1"/><text x="70.0870%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="69.8370%" y="613" width="0.0340%" height="15" fill="rgb(212,13,2)" fg:x="2056" fg:w="1"/><text x="70.0870%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="69.8370%" y="597" width="0.0340%" height="15" fill="rgb(240,114,20)" fg:x="2056" fg:w="1"/><text x="70.0870%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="69.8370%" y="581" width="0.0340%" height="15" fill="rgb(228,41,40)" fg:x="2056" fg:w="1"/><text x="70.0870%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="69.8370%" y="565" width="0.0340%" height="15" fill="rgb(244,132,35)" fg:x="2056" fg:w="1"/><text x="70.0870%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="69.8370%" y="549" width="0.0340%" height="15" fill="rgb(253,189,4)" fg:x="2056" fg:w="1"/><text x="70.0870%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="69.8370%" y="533" width="0.0340%" height="15" fill="rgb(224,37,19)" fg:x="2056" fg:w="1"/><text x="70.0870%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="69.8370%" y="517" width="0.0340%" height="15" fill="rgb(235,223,18)" fg:x="2056" fg:w="1"/><text x="70.0870%" y="527.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="69.8709%" y="1173" width="0.0340%" height="15" fill="rgb(235,163,25)" fg:x="2057" fg:w="1"/><text x="70.1209%" y="1183.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1 samples, 0.03%)</title><rect x="69.8709%" y="1157" width="0.0340%" height="15" fill="rgb(217,145,28)" fg:x="2057" fg:w="1"/><text x="70.1209%" y="1167.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.03%)</title><rect x="69.8709%" y="1141" width="0.0340%" height="15" fill="rgb(223,223,32)" fg:x="2057" fg:w="1"/><text x="70.1209%" y="1151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.03%)</title><rect x="69.8709%" y="1125" width="0.0340%" height="15" fill="rgb(227,189,39)" fg:x="2057" fg:w="1"/><text x="70.1209%" y="1135.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.03%)</title><rect x="69.8709%" y="1109" width="0.0340%" height="15" fill="rgb(248,10,22)" fg:x="2057" fg:w="1"/><text x="70.1209%" y="1119.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (1 samples, 0.03%)</title><rect x="69.8709%" y="1093" width="0.0340%" height="15" fill="rgb(248,46,39)" fg:x="2057" fg:w="1"/><text x="70.1209%" y="1103.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.03%)</title><rect x="69.8709%" y="1077" width="0.0340%" height="15" fill="rgb(248,113,48)" fg:x="2057" fg:w="1"/><text x="70.1209%" y="1087.50"></text></g><g><title>std::panicking::try (1 samples, 0.03%)</title><rect x="69.8709%" y="1061" width="0.0340%" height="15" fill="rgb(245,16,25)" fg:x="2057" fg:w="1"/><text x="70.1209%" y="1071.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.03%)</title><rect x="69.8709%" y="1045" width="0.0340%" height="15" fill="rgb(249,152,16)" fg:x="2057" fg:w="1"/><text x="70.1209%" y="1055.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.03%)</title><rect x="69.8709%" y="1029" width="0.0340%" height="15" fill="rgb(250,16,1)" fg:x="2057" fg:w="1"/><text x="70.1209%" y="1039.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="69.8709%" y="1013" width="0.0340%" height="15" fill="rgb(249,138,3)" fg:x="2057" fg:w="1"/><text x="70.1209%" y="1023.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.03%)</title><rect x="69.8709%" y="997" width="0.0340%" height="15" fill="rgb(227,71,41)" fg:x="2057" fg:w="1"/><text x="70.1209%" y="1007.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="69.8709%" y="981" width="0.0340%" height="15" fill="rgb(209,184,23)" fg:x="2057" fg:w="1"/><text x="70.1209%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.03%)</title><rect x="69.8709%" y="965" width="0.0340%" height="15" fill="rgb(223,215,31)" fg:x="2057" fg:w="1"/><text x="70.1209%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.03%)</title><rect x="69.8709%" y="949" width="0.0340%" height="15" fill="rgb(210,146,28)" fg:x="2057" fg:w="1"/><text x="70.1209%" y="959.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="69.8709%" y="933" width="0.0340%" height="15" fill="rgb(209,183,41)" fg:x="2057" fg:w="1"/><text x="70.1209%" y="943.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.03%)</title><rect x="69.8709%" y="917" width="0.0340%" height="15" fill="rgb(209,224,45)" fg:x="2057" fg:w="1"/><text x="70.1209%" y="927.50"></text></g><g><title>std::panicking::try (1 samples, 0.03%)</title><rect x="69.8709%" y="901" width="0.0340%" height="15" fill="rgb(224,209,51)" fg:x="2057" fg:w="1"/><text x="70.1209%" y="911.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.03%)</title><rect x="69.8709%" y="885" width="0.0340%" height="15" fill="rgb(223,17,39)" fg:x="2057" fg:w="1"/><text x="70.1209%" y="895.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="69.8709%" y="869" width="0.0340%" height="15" fill="rgb(234,204,37)" fg:x="2057" fg:w="1"/><text x="70.1209%" y="879.50"></text></g><g><title>futures_lite::future::block_on (1 samples, 0.03%)</title><rect x="69.8709%" y="853" width="0.0340%" height="15" fill="rgb(236,120,5)" fg:x="2057" fg:w="1"/><text x="70.1209%" y="863.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.03%)</title><rect x="69.8709%" y="837" width="0.0340%" height="15" fill="rgb(248,97,27)" fg:x="2057" fg:w="1"/><text x="70.1209%" y="847.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.03%)</title><rect x="69.8709%" y="821" width="0.0340%" height="15" fill="rgb(240,66,17)" fg:x="2057" fg:w="1"/><text x="70.1209%" y="831.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (1 samples, 0.03%)</title><rect x="69.8709%" y="805" width="0.0340%" height="15" fill="rgb(210,79,3)" fg:x="2057" fg:w="1"/><text x="70.1209%" y="815.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (1 samples, 0.03%)</title><rect x="69.8709%" y="789" width="0.0340%" height="15" fill="rgb(214,176,27)" fg:x="2057" fg:w="1"/><text x="70.1209%" y="799.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (1 samples, 0.03%)</title><rect x="69.8709%" y="773" width="0.0340%" height="15" fill="rgb(235,185,3)" fg:x="2057" fg:w="1"/><text x="70.1209%" y="783.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="69.8709%" y="757" width="0.0340%" height="15" fill="rgb(227,24,12)" fg:x="2057" fg:w="1"/><text x="70.1209%" y="767.50"></text></g><g><title>async_task::runnable::Runnable&lt;M&gt;::run (1 samples, 0.03%)</title><rect x="69.8709%" y="741" width="0.0340%" height="15" fill="rgb(252,169,48)" fg:x="2057" fg:w="1"/><text x="70.1209%" y="751.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::run (1 samples, 0.03%)</title><rect x="69.8709%" y="725" width="0.0340%" height="15" fill="rgb(212,65,1)" fg:x="2057" fg:w="1"/><text x="70.1209%" y="735.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (1 samples, 0.03%)</title><rect x="69.8709%" y="709" width="0.0340%" height="15" fill="rgb(242,39,24)" fg:x="2057" fg:w="1"/><text x="70.1209%" y="719.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::spawn_system_task::{{closure}} (1 samples, 0.03%)</title><rect x="69.8709%" y="693" width="0.0340%" height="15" fill="rgb(249,32,23)" fg:x="2057" fg:w="1"/><text x="70.1209%" y="703.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.03%)</title><rect x="69.8709%" y="677" width="0.0340%" height="15" fill="rgb(251,195,23)" fg:x="2057" fg:w="1"/><text x="70.1209%" y="687.50"></text></g><g><title>std::panicking::try (1 samples, 0.03%)</title><rect x="69.8709%" y="661" width="0.0340%" height="15" fill="rgb(236,174,8)" fg:x="2057" fg:w="1"/><text x="70.1209%" y="671.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.03%)</title><rect x="69.8709%" y="645" width="0.0340%" height="15" fill="rgb(220,197,8)" fg:x="2057" fg:w="1"/><text x="70.1209%" y="655.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.03%)</title><rect x="69.8709%" y="629" width="0.0340%" height="15" fill="rgb(240,108,37)" fg:x="2057" fg:w="1"/><text x="70.1209%" y="639.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.03%)</title><rect x="69.8709%" y="613" width="0.0340%" height="15" fill="rgb(232,176,24)" fg:x="2057" fg:w="1"/><text x="70.1209%" y="623.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::spawn_system_task::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="69.8709%" y="597" width="0.0340%" height="15" fill="rgb(243,35,29)" fg:x="2057" fg:w="1"/><text x="70.1209%" y="607.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (1 samples, 0.03%)</title><rect x="69.8709%" y="581" width="0.0340%" height="15" fill="rgb(210,37,18)" fg:x="2057" fg:w="1"/><text x="70.1209%" y="591.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;fn(F0,F1,F2,F3,F4,F5,F6,F7,F8,F9) .&gt; Out&gt;&gt;::run (1 samples, 0.03%)</title><rect x="69.8709%" y="565" width="0.0340%" height="15" fill="rgb(224,184,40)" fg:x="2057" fg:w="1"/><text x="70.1209%" y="575.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;fn(F0,F1,F2,F3,F4,F5,F6,F7,F8,F9) .&gt; Out&gt;&gt;::run::call_inner (1 samples, 0.03%)</title><rect x="69.8709%" y="549" width="0.0340%" height="15" fill="rgb(236,39,29)" fg:x="2057" fg:w="1"/><text x="70.1209%" y="559.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.03%)</title><rect x="69.8709%" y="533" width="0.0340%" height="15" fill="rgb(232,48,39)" fg:x="2057" fg:w="1"/><text x="70.1209%" y="543.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1 samples, 0.03%)</title><rect x="69.8709%" y="517" width="0.0340%" height="15" fill="rgb(236,34,42)" fg:x="2057" fg:w="1"/><text x="70.1209%" y="527.50"></text></g><g><title>game_render::pbr::prepare_materials (1 samples, 0.03%)</title><rect x="69.8709%" y="501" width="0.0340%" height="15" fill="rgb(243,106,37)" fg:x="2057" fg:w="1"/><text x="70.1209%" y="511.50"></text></g><g><title>wgpu::Device::create_bind_group (1 samples, 0.03%)</title><rect x="69.8709%" y="485" width="0.0340%" height="15" fill="rgb(218,96,6)" fg:x="2057" fg:w="1"/><text x="70.1209%" y="495.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_create_bind_group (1 samples, 0.03%)</title><rect x="69.8709%" y="469" width="0.0340%" height="15" fill="rgb(235,130,12)" fg:x="2057" fg:w="1"/><text x="70.1209%" y="479.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::device_create_bind_group (1 samples, 0.03%)</title><rect x="69.8709%" y="453" width="0.0340%" height="15" fill="rgb(231,95,0)" fg:x="2057" fg:w="1"/><text x="70.1209%" y="463.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_bind_group (1 samples, 0.03%)</title><rect x="69.8709%" y="437" width="0.0340%" height="15" fill="rgb(228,12,23)" fg:x="2057" fg:w="1"/><text x="70.1209%" y="447.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_bind_group (1 samples, 0.03%)</title><rect x="69.8709%" y="421" width="0.0340%" height="15" fill="rgb(216,12,1)" fg:x="2057" fg:w="1"/><text x="70.1209%" y="431.50"></text></g><g><title>wgpu_core::LifeGuard::add_ref (1 samples, 0.03%)</title><rect x="69.8709%" y="405" width="0.0340%" height="15" fill="rgb(219,59,3)" fg:x="2057" fg:w="1"/><text x="70.1209%" y="415.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="69.8709%" y="389" width="0.0340%" height="15" fill="rgb(215,208,46)" fg:x="2057" fg:w="1"/><text x="70.1209%" y="399.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="69.8709%" y="373" width="0.0340%" height="15" fill="rgb(254,224,29)" fg:x="2057" fg:w="1"/><text x="70.1209%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.03%)</title><rect x="69.9049%" y="469" width="0.0340%" height="15" fill="rgb(232,14,29)" fg:x="2058" fg:w="1"/><text x="70.1549%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.03%)</title><rect x="69.9049%" y="453" width="0.0340%" height="15" fill="rgb(208,45,52)" fg:x="2058" fg:w="1"/><text x="70.1549%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.03%)</title><rect x="69.9049%" y="437" width="0.0340%" height="15" fill="rgb(234,191,28)" fg:x="2058" fg:w="1"/><text x="70.1549%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.03%)</title><rect x="69.9049%" y="421" width="0.0340%" height="15" fill="rgb(244,67,43)" fg:x="2058" fg:w="1"/><text x="70.1549%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.03%)</title><rect x="69.9049%" y="405" width="0.0340%" height="15" fill="rgb(236,189,24)" fg:x="2058" fg:w="1"/><text x="70.1549%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.03%)</title><rect x="69.9049%" y="389" width="0.0340%" height="15" fill="rgb(239,214,33)" fg:x="2058" fg:w="1"/><text x="70.1549%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="69.9049%" y="373" width="0.0340%" height="15" fill="rgb(226,176,41)" fg:x="2058" fg:w="1"/><text x="70.1549%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="69.9049%" y="357" width="0.0340%" height="15" fill="rgb(248,47,8)" fg:x="2058" fg:w="1"/><text x="70.1549%" y="367.50"></text></g><g><title>core::iter::adapters::flatten::and_then_or_clear (1 samples, 0.03%)</title><rect x="69.9049%" y="341" width="0.0340%" height="15" fill="rgb(218,81,44)" fg:x="2058" fg:w="1"/><text x="70.1549%" y="351.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (2 samples, 0.07%)</title><rect x="69.9049%" y="1173" width="0.0679%" height="15" fill="rgb(213,98,6)" fg:x="2058" fg:w="2"/><text x="70.1549%" y="1183.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (2 samples, 0.07%)</title><rect x="69.9049%" y="1157" width="0.0679%" height="15" fill="rgb(222,85,22)" fg:x="2058" fg:w="2"/><text x="70.1549%" y="1167.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.07%)</title><rect x="69.9049%" y="1141" width="0.0679%" height="15" fill="rgb(239,46,39)" fg:x="2058" fg:w="2"/><text x="70.1549%" y="1151.50"></text></g><g><title>std::panicking::try (2 samples, 0.07%)</title><rect x="69.9049%" y="1125" width="0.0679%" height="15" fill="rgb(237,12,29)" fg:x="2058" fg:w="2"/><text x="70.1549%" y="1135.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.07%)</title><rect x="69.9049%" y="1109" width="0.0679%" height="15" fill="rgb(214,77,8)" fg:x="2058" fg:w="2"/><text x="70.1549%" y="1119.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2 samples, 0.07%)</title><rect x="69.9049%" y="1093" width="0.0679%" height="15" fill="rgb(217,168,37)" fg:x="2058" fg:w="2"/><text x="70.1549%" y="1103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (2 samples, 0.07%)</title><rect x="69.9049%" y="1077" width="0.0679%" height="15" fill="rgb(221,217,23)" fg:x="2058" fg:w="2"/><text x="70.1549%" y="1087.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (2 samples, 0.07%)</title><rect x="69.9049%" y="1061" width="0.0679%" height="15" fill="rgb(243,229,36)" fg:x="2058" fg:w="2"/><text x="70.1549%" y="1071.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (2 samples, 0.07%)</title><rect x="69.9049%" y="1045" width="0.0679%" height="15" fill="rgb(251,163,40)" fg:x="2058" fg:w="2"/><text x="70.1549%" y="1055.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.07%)</title><rect x="69.9049%" y="1029" width="0.0679%" height="15" fill="rgb(237,222,12)" fg:x="2058" fg:w="2"/><text x="70.1549%" y="1039.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.07%)</title><rect x="69.9049%" y="1013" width="0.0679%" height="15" fill="rgb(248,132,6)" fg:x="2058" fg:w="2"/><text x="70.1549%" y="1023.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}}::{{closure}} (2 samples, 0.07%)</title><rect x="69.9049%" y="997" width="0.0679%" height="15" fill="rgb(227,167,50)" fg:x="2058" fg:w="2"/><text x="70.1549%" y="1007.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.07%)</title><rect x="69.9049%" y="981" width="0.0679%" height="15" fill="rgb(242,84,37)" fg:x="2058" fg:w="2"/><text x="70.1549%" y="991.50"></text></g><g><title>std::panicking::try (2 samples, 0.07%)</title><rect x="69.9049%" y="965" width="0.0679%" height="15" fill="rgb(212,4,50)" fg:x="2058" fg:w="2"/><text x="70.1549%" y="975.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.07%)</title><rect x="69.9049%" y="949" width="0.0679%" height="15" fill="rgb(230,228,32)" fg:x="2058" fg:w="2"/><text x="70.1549%" y="959.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}}::{{closure}}::{{closure}} (2 samples, 0.07%)</title><rect x="69.9049%" y="933" width="0.0679%" height="15" fill="rgb(248,217,23)" fg:x="2058" fg:w="2"/><text x="70.1549%" y="943.50"></text></g><g><title>futures_lite::future::block_on (2 samples, 0.07%)</title><rect x="69.9049%" y="917" width="0.0679%" height="15" fill="rgb(238,197,32)" fg:x="2058" fg:w="2"/><text x="70.1549%" y="927.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.07%)</title><rect x="69.9049%" y="901" width="0.0679%" height="15" fill="rgb(236,106,1)" fg:x="2058" fg:w="2"/><text x="70.1549%" y="911.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.07%)</title><rect x="69.9049%" y="885" width="0.0679%" height="15" fill="rgb(219,228,13)" fg:x="2058" fg:w="2"/><text x="70.1549%" y="895.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (2 samples, 0.07%)</title><rect x="69.9049%" y="869" width="0.0679%" height="15" fill="rgb(238,30,35)" fg:x="2058" fg:w="2"/><text x="70.1549%" y="879.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (2 samples, 0.07%)</title><rect x="69.9049%" y="853" width="0.0679%" height="15" fill="rgb(236,70,23)" fg:x="2058" fg:w="2"/><text x="70.1549%" y="863.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (2 samples, 0.07%)</title><rect x="69.9049%" y="837" width="0.0679%" height="15" fill="rgb(249,104,48)" fg:x="2058" fg:w="2"/><text x="70.1549%" y="847.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (2 samples, 0.07%)</title><rect x="69.9049%" y="821" width="0.0679%" height="15" fill="rgb(254,117,50)" fg:x="2058" fg:w="2"/><text x="70.1549%" y="831.50"></text></g><g><title>async_task::runnable::Runnable&lt;M&gt;::run (2 samples, 0.07%)</title><rect x="69.9049%" y="805" width="0.0679%" height="15" fill="rgb(223,152,4)" fg:x="2058" fg:w="2"/><text x="70.1549%" y="815.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::run (2 samples, 0.07%)</title><rect x="69.9049%" y="789" width="0.0679%" height="15" fill="rgb(245,6,2)" fg:x="2058" fg:w="2"/><text x="70.1549%" y="799.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (2 samples, 0.07%)</title><rect x="69.9049%" y="773" width="0.0679%" height="15" fill="rgb(249,150,24)" fg:x="2058" fg:w="2"/><text x="70.1549%" y="783.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::spawn_system_task::{{closure}} (2 samples, 0.07%)</title><rect x="69.9049%" y="757" width="0.0679%" height="15" fill="rgb(228,185,42)" fg:x="2058" fg:w="2"/><text x="70.1549%" y="767.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.07%)</title><rect x="69.9049%" y="741" width="0.0679%" height="15" fill="rgb(226,39,33)" fg:x="2058" fg:w="2"/><text x="70.1549%" y="751.50"></text></g><g><title>std::panicking::try (2 samples, 0.07%)</title><rect x="69.9049%" y="725" width="0.0679%" height="15" fill="rgb(221,166,19)" fg:x="2058" fg:w="2"/><text x="70.1549%" y="735.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.07%)</title><rect x="69.9049%" y="709" width="0.0679%" height="15" fill="rgb(209,109,2)" fg:x="2058" fg:w="2"/><text x="70.1549%" y="719.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2 samples, 0.07%)</title><rect x="69.9049%" y="693" width="0.0679%" height="15" fill="rgb(252,216,26)" fg:x="2058" fg:w="2"/><text x="70.1549%" y="703.50"></text></g><g><title>core::ops::function::FnOnce::call_once (2 samples, 0.07%)</title><rect x="69.9049%" y="677" width="0.0679%" height="15" fill="rgb(227,173,36)" fg:x="2058" fg:w="2"/><text x="70.1549%" y="687.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::spawn_system_task::{{closure}}::{{closure}} (2 samples, 0.07%)</title><rect x="69.9049%" y="661" width="0.0679%" height="15" fill="rgb(209,90,7)" fg:x="2058" fg:w="2"/><text x="70.1549%" y="671.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (2 samples, 0.07%)</title><rect x="69.9049%" y="645" width="0.0679%" height="15" fill="rgb(250,194,11)" fg:x="2058" fg:w="2"/><text x="70.1549%" y="655.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;fn(F0,F1,F2,F3,F4,F5,F6,F7,F8,F9) .&gt; Out&gt;&gt;::run (2 samples, 0.07%)</title><rect x="69.9049%" y="629" width="0.0679%" height="15" fill="rgb(220,72,50)" fg:x="2058" fg:w="2"/><text x="70.1549%" y="639.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;fn(F0,F1,F2,F3,F4,F5,F6,F7,F8,F9) .&gt; Out&gt;&gt;::run::call_inner (2 samples, 0.07%)</title><rect x="69.9049%" y="613" width="0.0679%" height="15" fill="rgb(222,106,48)" fg:x="2058" fg:w="2"/><text x="70.1549%" y="623.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2 samples, 0.07%)</title><rect x="69.9049%" y="597" width="0.0679%" height="15" fill="rgb(216,220,45)" fg:x="2058" fg:w="2"/><text x="70.1549%" y="607.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2 samples, 0.07%)</title><rect x="69.9049%" y="581" width="0.0679%" height="15" fill="rgb(234,112,18)" fg:x="2058" fg:w="2"/><text x="70.1549%" y="591.50"></text></g><g><title>game_render::pbr::prepare_materials (2 samples, 0.07%)</title><rect x="69.9049%" y="565" width="0.0679%" height="15" fill="rgb(206,179,9)" fg:x="2058" fg:w="2"/><text x="70.1549%" y="575.50"></text></g><g><title>wgpu::Device::create_bind_group (2 samples, 0.07%)</title><rect x="69.9049%" y="549" width="0.0679%" height="15" fill="rgb(215,115,40)" fg:x="2058" fg:w="2"/><text x="70.1549%" y="559.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_create_bind_group (2 samples, 0.07%)</title><rect x="69.9049%" y="533" width="0.0679%" height="15" fill="rgb(222,69,34)" fg:x="2058" fg:w="2"/><text x="70.1549%" y="543.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::device_create_bind_group (2 samples, 0.07%)</title><rect x="69.9049%" y="517" width="0.0679%" height="15" fill="rgb(209,161,10)" fg:x="2058" fg:w="2"/><text x="70.1549%" y="527.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_bind_group (2 samples, 0.07%)</title><rect x="69.9049%" y="501" width="0.0679%" height="15" fill="rgb(217,6,38)" fg:x="2058" fg:w="2"/><text x="70.1549%" y="511.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_bind_group (2 samples, 0.07%)</title><rect x="69.9049%" y="485" width="0.0679%" height="15" fill="rgb(229,229,48)" fg:x="2058" fg:w="2"/><text x="70.1549%" y="495.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_buffer_binding (1 samples, 0.03%)</title><rect x="69.9389%" y="469" width="0.0340%" height="15" fill="rgb(225,21,28)" fg:x="2059" fg:w="1"/><text x="70.1889%" y="479.50"></text></g><g><title>wgpu_core::track::buffer::BufferBindGroupState&lt;A&gt;::add_single (1 samples, 0.03%)</title><rect x="69.9389%" y="453" width="0.0340%" height="15" fill="rgb(206,33,13)" fg:x="2059" fg:w="1"/><text x="70.1889%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.03%)</title><rect x="69.9389%" y="437" width="0.0340%" height="15" fill="rgb(242,178,17)" fg:x="2059" fg:w="1"/><text x="70.1889%" y="447.50"></text></g><g><title>core::ptr::write (1 samples, 0.03%)</title><rect x="69.9389%" y="421" width="0.0340%" height="15" fill="rgb(220,162,5)" fg:x="2059" fg:w="1"/><text x="70.1889%" y="431.50"></text></g><g><title>futures_lite::future::block_on (367 samples, 12.47%)</title><rect x="69.9728%" y="1173" width="12.4660%" height="15" fill="rgb(210,33,43)" fg:x="2060" fg:w="367"/><text x="70.2228%" y="1183.50">futures_lite::futur..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (367 samples, 12.47%)</title><rect x="69.9728%" y="1157" width="12.4660%" height="15" fill="rgb(216,116,54)" fg:x="2060" fg:w="367"/><text x="70.2228%" y="1167.50">std::thread::local:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (367 samples, 12.47%)</title><rect x="69.9728%" y="1141" width="12.4660%" height="15" fill="rgb(249,92,24)" fg:x="2060" fg:w="367"/><text x="70.2228%" y="1151.50">std::thread::local:..</text></g><g><title>futures_lite::future::block_on::{{closure}} (367 samples, 12.47%)</title><rect x="69.9728%" y="1125" width="12.4660%" height="15" fill="rgb(231,189,14)" fg:x="2060" fg:w="367"/><text x="70.2228%" y="1135.50">futures_lite::futur..</text></g><g><title>async_executor::Executor::run::{{closure}} (367 samples, 12.47%)</title><rect x="69.9728%" y="1109" width="12.4660%" height="15" fill="rgb(230,8,41)" fg:x="2060" fg:w="367"/><text x="70.2228%" y="1119.50">async_executor::Exe..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (367 samples, 12.47%)</title><rect x="69.9728%" y="1093" width="12.4660%" height="15" fill="rgb(249,7,27)" fg:x="2060" fg:w="367"/><text x="70.2228%" y="1103.50">&lt;futures_lite::futu..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (367 samples, 12.47%)</title><rect x="69.9728%" y="1077" width="12.4660%" height="15" fill="rgb(232,86,5)" fg:x="2060" fg:w="367"/><text x="70.2228%" y="1087.50">async_executor::Exe..</text></g><g><title>async_task::runnable::Runnable&lt;M&gt;::run (367 samples, 12.47%)</title><rect x="69.9728%" y="1061" width="12.4660%" height="15" fill="rgb(224,175,18)" fg:x="2060" fg:w="367"/><text x="70.2228%" y="1071.50">async_task::runnabl..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::run (367 samples, 12.47%)</title><rect x="69.9728%" y="1045" width="12.4660%" height="15" fill="rgb(220,129,12)" fg:x="2060" fg:w="367"/><text x="70.2228%" y="1055.50">async_task::raw::Ra..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (367 samples, 12.47%)</title><rect x="69.9728%" y="1029" width="12.4660%" height="15" fill="rgb(210,19,36)" fg:x="2060" fg:w="367"/><text x="70.2228%" y="1039.50">async_executor::Exe..</text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::spawn_system_task::{{closure}} (367 samples, 12.47%)</title><rect x="69.9728%" y="1013" width="12.4660%" height="15" fill="rgb(219,96,14)" fg:x="2060" fg:w="367"/><text x="70.2228%" y="1023.50">bevy_ecs::schedule:..</text></g><g><title>std::panic::catch_unwind (367 samples, 12.47%)</title><rect x="69.9728%" y="997" width="12.4660%" height="15" fill="rgb(249,106,1)" fg:x="2060" fg:w="367"/><text x="70.2228%" y="1007.50">std::panic::catch_u..</text></g><g><title>std::panicking::try (367 samples, 12.47%)</title><rect x="69.9728%" y="981" width="12.4660%" height="15" fill="rgb(249,155,20)" fg:x="2060" fg:w="367"/><text x="70.2228%" y="991.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (367 samples, 12.47%)</title><rect x="69.9728%" y="965" width="12.4660%" height="15" fill="rgb(244,168,9)" fg:x="2060" fg:w="367"/><text x="70.2228%" y="975.50">std::panicking::try..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (367 samples, 12.47%)</title><rect x="69.9728%" y="949" width="12.4660%" height="15" fill="rgb(216,23,50)" fg:x="2060" fg:w="367"/><text x="70.2228%" y="959.50">&lt;core::panic::unwin..</text></g><g><title>core::ops::function::FnOnce::call_once (367 samples, 12.47%)</title><rect x="69.9728%" y="933" width="12.4660%" height="15" fill="rgb(224,219,20)" fg:x="2060" fg:w="367"/><text x="70.2228%" y="943.50">core::ops::function..</text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::spawn_system_task::{{closure}}::{{closure}} (367 samples, 12.47%)</title><rect x="69.9728%" y="917" width="12.4660%" height="15" fill="rgb(222,156,15)" fg:x="2060" fg:w="367"/><text x="70.2228%" y="927.50">bevy_ecs::schedule:..</text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (367 samples, 12.47%)</title><rect x="69.9728%" y="901" width="12.4660%" height="15" fill="rgb(231,97,17)" fg:x="2060" fg:w="367"/><text x="70.2228%" y="911.50">&lt;bevy_ecs::system::..</text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;fn(F0,F1,F2,F3,F4,F5,F6,F7,F8,F9) .&gt; Out&gt;&gt;::run (367 samples, 12.47%)</title><rect x="69.9728%" y="885" width="12.4660%" height="15" fill="rgb(218,70,48)" fg:x="2060" fg:w="367"/><text x="70.2228%" y="895.50">&lt;Func as bevy_ecs::..</text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;fn(F0,F1,F2,F3,F4,F5,F6,F7,F8,F9) .&gt; Out&gt;&gt;::run::call_inner (367 samples, 12.47%)</title><rect x="69.9728%" y="869" width="12.4660%" height="15" fill="rgb(212,196,52)" fg:x="2060" fg:w="367"/><text x="70.2228%" y="879.50">&lt;Func as bevy_ecs::..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (367 samples, 12.47%)</title><rect x="69.9728%" y="853" width="12.4660%" height="15" fill="rgb(243,203,18)" fg:x="2060" fg:w="367"/><text x="70.2228%" y="863.50">core::ops::function..</text></g><g><title>core::ops::function::FnMut::call_mut (367 samples, 12.47%)</title><rect x="69.9728%" y="837" width="12.4660%" height="15" fill="rgb(252,125,41)" fg:x="2060" fg:w="367"/><text x="70.2228%" y="847.50">core::ops::function..</text></g><g><title>game_render::pbr::prepare_materials (367 samples, 12.47%)</title><rect x="69.9728%" y="821" width="12.4660%" height="15" fill="rgb(223,180,33)" fg:x="2060" fg:w="367"/><text x="70.2228%" y="831.50">game_render::pbr::p..</text></g><g><title>wgpu::Queue::write_texture (367 samples, 12.47%)</title><rect x="69.9728%" y="805" width="12.4660%" height="15" fill="rgb(254,159,46)" fg:x="2060" fg:w="367"/><text x="70.2228%" y="815.50">wgpu::Queue::write_..</text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::queue_write_texture (367 samples, 12.47%)</title><rect x="69.9728%" y="789" width="12.4660%" height="15" fill="rgb(254,38,10)" fg:x="2060" fg:w="367"/><text x="70.2228%" y="799.50">&lt;T as wgpu::context..</text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::queue_write_texture (367 samples, 12.47%)</title><rect x="69.9728%" y="773" width="12.4660%" height="15" fill="rgb(208,217,32)" fg:x="2060" fg:w="367"/><text x="70.2228%" y="783.50">&lt;wgpu::backend::dir..</text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_texture (367 samples, 12.47%)</title><rect x="69.9728%" y="757" width="12.4660%" height="15" fill="rgb(221,120,13)" fg:x="2060" fg:w="367"/><text x="70.2228%" y="767.50">wgpu_core::device::..</text></g><g><title>core::intrinsics::copy_nonoverlapping (367 samples, 12.47%)</title><rect x="69.9728%" y="741" width="12.4660%" height="15" fill="rgb(246,54,52)" fg:x="2060" fg:w="367"/><text x="70.2228%" y="751.50">core::intrinsics::c..</text></g><g><title>[libc.so.6] (367 samples, 12.47%)</title><rect x="69.9728%" y="725" width="12.4660%" height="15" fill="rgb(242,34,25)" fg:x="2060" fg:w="367"/><text x="70.2228%" y="735.50">[libc.so.6]</text></g><g><title>[unknown] (35 samples, 1.19%)</title><rect x="81.2500%" y="709" width="1.1889%" height="15" fill="rgb(247,209,9)" fg:x="2392" fg:w="35"/><text x="81.5000%" y="719.50"></text></g><g><title>[unknown] (23 samples, 0.78%)</title><rect x="81.6576%" y="693" width="0.7812%" height="15" fill="rgb(228,71,26)" fg:x="2404" fg:w="23"/><text x="81.9076%" y="703.50"></text></g><g><title>[unknown] (21 samples, 0.71%)</title><rect x="81.7255%" y="677" width="0.7133%" height="15" fill="rgb(222,145,49)" fg:x="2406" fg:w="21"/><text x="81.9755%" y="687.50"></text></g><g><title>[unknown] (21 samples, 0.71%)</title><rect x="81.7255%" y="661" width="0.7133%" height="15" fill="rgb(218,121,17)" fg:x="2406" fg:w="21"/><text x="81.9755%" y="671.50"></text></g><g><title>[unknown] (20 samples, 0.68%)</title><rect x="81.7595%" y="645" width="0.6793%" height="15" fill="rgb(244,50,7)" fg:x="2407" fg:w="20"/><text x="82.0095%" y="655.50"></text></g><g><title>[unknown] (16 samples, 0.54%)</title><rect x="81.8954%" y="629" width="0.5435%" height="15" fill="rgb(246,229,37)" fg:x="2411" fg:w="16"/><text x="82.1454%" y="639.50"></text></g><g><title>[unknown] (16 samples, 0.54%)</title><rect x="81.8954%" y="613" width="0.5435%" height="15" fill="rgb(225,18,5)" fg:x="2411" fg:w="16"/><text x="82.1454%" y="623.50"></text></g><g><title>[unknown] (14 samples, 0.48%)</title><rect x="81.9633%" y="597" width="0.4755%" height="15" fill="rgb(213,204,8)" fg:x="2413" fg:w="14"/><text x="82.2133%" y="607.50"></text></g><g><title>[unknown] (14 samples, 0.48%)</title><rect x="81.9633%" y="581" width="0.4755%" height="15" fill="rgb(238,103,6)" fg:x="2413" fg:w="14"/><text x="82.2133%" y="591.50"></text></g><g><title>[unknown] (13 samples, 0.44%)</title><rect x="81.9973%" y="565" width="0.4416%" height="15" fill="rgb(222,25,35)" fg:x="2414" fg:w="13"/><text x="82.2473%" y="575.50"></text></g><g><title>[unknown] (11 samples, 0.37%)</title><rect x="82.0652%" y="549" width="0.3736%" height="15" fill="rgb(213,203,35)" fg:x="2416" fg:w="11"/><text x="82.3152%" y="559.50"></text></g><g><title>[unknown] (10 samples, 0.34%)</title><rect x="82.0992%" y="533" width="0.3397%" height="15" fill="rgb(221,79,53)" fg:x="2417" fg:w="10"/><text x="82.3492%" y="543.50"></text></g><g><title>[unknown] (9 samples, 0.31%)</title><rect x="82.1332%" y="517" width="0.3057%" height="15" fill="rgb(243,200,35)" fg:x="2418" fg:w="9"/><text x="82.3832%" y="527.50"></text></g><g><title>[unknown] (9 samples, 0.31%)</title><rect x="82.1332%" y="501" width="0.3057%" height="15" fill="rgb(248,60,25)" fg:x="2418" fg:w="9"/><text x="82.3832%" y="511.50"></text></g><g><title>[unknown] (9 samples, 0.31%)</title><rect x="82.1332%" y="485" width="0.3057%" height="15" fill="rgb(227,53,46)" fg:x="2418" fg:w="9"/><text x="82.3832%" y="495.50"></text></g><g><title>ash::device::Device::update_descriptor_sets (1 samples, 0.03%)</title><rect x="82.4389%" y="565" width="0.0340%" height="15" fill="rgb(216,120,32)" fg:x="2427" fg:w="1"/><text x="82.6889%" y="575.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="82.4389%" y="549" width="0.0340%" height="15" fill="rgb(220,134,1)" fg:x="2427" fg:w="1"/><text x="82.6889%" y="559.50"></text></g><g><title>ash::vk::definitions::WriteDescriptorSetBuilder::build (1 samples, 0.03%)</title><rect x="82.4728%" y="565" width="0.0340%" height="15" fill="rgb(237,168,5)" fg:x="2428" fg:w="1"/><text x="82.7228%" y="575.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (3 samples, 0.10%)</title><rect x="82.4389%" y="1173" width="0.1019%" height="15" fill="rgb(231,100,33)" fg:x="2427" fg:w="3"/><text x="82.6889%" y="1183.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (3 samples, 0.10%)</title><rect x="82.4389%" y="1157" width="0.1019%" height="15" fill="rgb(236,177,47)" fg:x="2427" fg:w="3"/><text x="82.6889%" y="1167.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3 samples, 0.10%)</title><rect x="82.4389%" y="1141" width="0.1019%" height="15" fill="rgb(235,7,49)" fg:x="2427" fg:w="3"/><text x="82.6889%" y="1151.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3 samples, 0.10%)</title><rect x="82.4389%" y="1125" width="0.1019%" height="15" fill="rgb(232,119,22)" fg:x="2427" fg:w="3"/><text x="82.6889%" y="1135.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}}::{{closure}} (3 samples, 0.10%)</title><rect x="82.4389%" y="1109" width="0.1019%" height="15" fill="rgb(254,73,53)" fg:x="2427" fg:w="3"/><text x="82.6889%" y="1119.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 0.10%)</title><rect x="82.4389%" y="1093" width="0.1019%" height="15" fill="rgb(251,35,20)" fg:x="2427" fg:w="3"/><text x="82.6889%" y="1103.50"></text></g><g><title>std::panicking::try (3 samples, 0.10%)</title><rect x="82.4389%" y="1077" width="0.1019%" height="15" fill="rgb(241,119,20)" fg:x="2427" fg:w="3"/><text x="82.6889%" y="1087.50"></text></g><g><title>std::panicking::try::do_call (3 samples, 0.10%)</title><rect x="82.4389%" y="1061" width="0.1019%" height="15" fill="rgb(207,102,14)" fg:x="2427" fg:w="3"/><text x="82.6889%" y="1071.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}}::{{closure}}::{{closure}} (3 samples, 0.10%)</title><rect x="82.4389%" y="1045" width="0.1019%" height="15" fill="rgb(248,201,50)" fg:x="2427" fg:w="3"/><text x="82.6889%" y="1055.50"></text></g><g><title>futures_lite::future::block_on (3 samples, 0.10%)</title><rect x="82.4389%" y="1029" width="0.1019%" height="15" fill="rgb(222,185,44)" fg:x="2427" fg:w="3"/><text x="82.6889%" y="1039.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3 samples, 0.10%)</title><rect x="82.4389%" y="1013" width="0.1019%" height="15" fill="rgb(218,107,18)" fg:x="2427" fg:w="3"/><text x="82.6889%" y="1023.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3 samples, 0.10%)</title><rect x="82.4389%" y="997" width="0.1019%" height="15" fill="rgb(237,177,39)" fg:x="2427" fg:w="3"/><text x="82.6889%" y="1007.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (3 samples, 0.10%)</title><rect x="82.4389%" y="981" width="0.1019%" height="15" fill="rgb(246,69,6)" fg:x="2427" fg:w="3"/><text x="82.6889%" y="991.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (3 samples, 0.10%)</title><rect x="82.4389%" y="965" width="0.1019%" height="15" fill="rgb(234,208,37)" fg:x="2427" fg:w="3"/><text x="82.6889%" y="975.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (3 samples, 0.10%)</title><rect x="82.4389%" y="949" width="0.1019%" height="15" fill="rgb(225,4,6)" fg:x="2427" fg:w="3"/><text x="82.6889%" y="959.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (3 samples, 0.10%)</title><rect x="82.4389%" y="933" width="0.1019%" height="15" fill="rgb(233,45,0)" fg:x="2427" fg:w="3"/><text x="82.6889%" y="943.50"></text></g><g><title>async_task::runnable::Runnable&lt;M&gt;::run (3 samples, 0.10%)</title><rect x="82.4389%" y="917" width="0.1019%" height="15" fill="rgb(226,136,5)" fg:x="2427" fg:w="3"/><text x="82.6889%" y="927.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::run (3 samples, 0.10%)</title><rect x="82.4389%" y="901" width="0.1019%" height="15" fill="rgb(211,91,47)" fg:x="2427" fg:w="3"/><text x="82.6889%" y="911.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (3 samples, 0.10%)</title><rect x="82.4389%" y="885" width="0.1019%" height="15" fill="rgb(242,88,51)" fg:x="2427" fg:w="3"/><text x="82.6889%" y="895.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::spawn_system_task::{{closure}} (3 samples, 0.10%)</title><rect x="82.4389%" y="869" width="0.1019%" height="15" fill="rgb(230,91,28)" fg:x="2427" fg:w="3"/><text x="82.6889%" y="879.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 0.10%)</title><rect x="82.4389%" y="853" width="0.1019%" height="15" fill="rgb(254,186,29)" fg:x="2427" fg:w="3"/><text x="82.6889%" y="863.50"></text></g><g><title>std::panicking::try (3 samples, 0.10%)</title><rect x="82.4389%" y="837" width="0.1019%" height="15" fill="rgb(238,6,4)" fg:x="2427" fg:w="3"/><text x="82.6889%" y="847.50"></text></g><g><title>std::panicking::try::do_call (3 samples, 0.10%)</title><rect x="82.4389%" y="821" width="0.1019%" height="15" fill="rgb(221,151,16)" fg:x="2427" fg:w="3"/><text x="82.6889%" y="831.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3 samples, 0.10%)</title><rect x="82.4389%" y="805" width="0.1019%" height="15" fill="rgb(251,143,52)" fg:x="2427" fg:w="3"/><text x="82.6889%" y="815.50"></text></g><g><title>core::ops::function::FnOnce::call_once (3 samples, 0.10%)</title><rect x="82.4389%" y="789" width="0.1019%" height="15" fill="rgb(206,90,15)" fg:x="2427" fg:w="3"/><text x="82.6889%" y="799.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::spawn_system_task::{{closure}}::{{closure}} (3 samples, 0.10%)</title><rect x="82.4389%" y="773" width="0.1019%" height="15" fill="rgb(218,35,8)" fg:x="2427" fg:w="3"/><text x="82.6889%" y="783.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (3 samples, 0.10%)</title><rect x="82.4389%" y="757" width="0.1019%" height="15" fill="rgb(239,215,6)" fg:x="2427" fg:w="3"/><text x="82.6889%" y="767.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;fn(F0,F1,F2,F3,F4,F5,F6,F7,F8,F9) .&gt; Out&gt;&gt;::run (3 samples, 0.10%)</title><rect x="82.4389%" y="741" width="0.1019%" height="15" fill="rgb(245,116,39)" fg:x="2427" fg:w="3"/><text x="82.6889%" y="751.50"></text></g><g><title>&lt;Func as bevy_ecs::system::function_system::SystemParamFunction&lt;fn(F0,F1,F2,F3,F4,F5,F6,F7,F8,F9) .&gt; Out&gt;&gt;::run::call_inner (3 samples, 0.10%)</title><rect x="82.4389%" y="725" width="0.1019%" height="15" fill="rgb(242,65,28)" fg:x="2427" fg:w="3"/><text x="82.6889%" y="735.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (3 samples, 0.10%)</title><rect x="82.4389%" y="709" width="0.1019%" height="15" fill="rgb(252,132,53)" fg:x="2427" fg:w="3"/><text x="82.6889%" y="719.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3 samples, 0.10%)</title><rect x="82.4389%" y="693" width="0.1019%" height="15" fill="rgb(224,159,50)" fg:x="2427" fg:w="3"/><text x="82.6889%" y="703.50"></text></g><g><title>game_render::pbr::prepare_materials (3 samples, 0.10%)</title><rect x="82.4389%" y="677" width="0.1019%" height="15" fill="rgb(224,93,4)" fg:x="2427" fg:w="3"/><text x="82.6889%" y="687.50"></text></g><g><title>wgpu::Device::create_bind_group (3 samples, 0.10%)</title><rect x="82.4389%" y="661" width="0.1019%" height="15" fill="rgb(208,81,34)" fg:x="2427" fg:w="3"/><text x="82.6889%" y="671.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_create_bind_group (3 samples, 0.10%)</title><rect x="82.4389%" y="645" width="0.1019%" height="15" fill="rgb(233,92,54)" fg:x="2427" fg:w="3"/><text x="82.6889%" y="655.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::device_create_bind_group (3 samples, 0.10%)</title><rect x="82.4389%" y="629" width="0.1019%" height="15" fill="rgb(237,21,14)" fg:x="2427" fg:w="3"/><text x="82.6889%" y="639.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_bind_group (3 samples, 0.10%)</title><rect x="82.4389%" y="613" width="0.1019%" height="15" fill="rgb(249,128,51)" fg:x="2427" fg:w="3"/><text x="82.6889%" y="623.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_bind_group (3 samples, 0.10%)</title><rect x="82.4389%" y="597" width="0.1019%" height="15" fill="rgb(223,129,24)" fg:x="2427" fg:w="3"/><text x="82.6889%" y="607.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_bind_group (3 samples, 0.10%)</title><rect x="82.4389%" y="581" width="0.1019%" height="15" fill="rgb(231,168,25)" fg:x="2427" fg:w="3"/><text x="82.6889%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;gpu_descriptor::allocator::DescriptorSet&lt;ash::vk::definitions::DescriptorSet&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="82.5068%" y="565" width="0.0340%" height="15" fill="rgb(224,39,20)" fg:x="2429" fg:w="1"/><text x="82.7568%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;gpu_descriptor::allocator::DescriptorSet&lt;ash::vk::definitions::DescriptorSet&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="82.5068%" y="549" width="0.0340%" height="15" fill="rgb(225,152,53)" fg:x="2429" fg:w="1"/><text x="82.7568%" y="559.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="82.5068%" y="533" width="0.0340%" height="15" fill="rgb(252,17,24)" fg:x="2429" fg:w="1"/><text x="82.7568%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.03%)</title><rect x="82.5068%" y="517" width="0.0340%" height="15" fill="rgb(250,114,30)" fg:x="2429" fg:w="1"/><text x="82.7568%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.03%)</title><rect x="82.5068%" y="501" width="0.0340%" height="15" fill="rgb(229,5,4)" fg:x="2429" fg:w="1"/><text x="82.7568%" y="511.50"></text></g><g><title>cfree (1 samples, 0.03%)</title><rect x="82.5068%" y="485" width="0.0340%" height="15" fill="rgb(225,176,49)" fg:x="2429" fg:w="1"/><text x="82.7568%" y="495.50"></text></g><g><title>TaskPool_(31) (391 samples, 13.28%)</title><rect x="69.2935%" y="1205" width="13.2812%" height="15" fill="rgb(224,221,49)" fg:x="2040" fg:w="391"/><text x="69.5435%" y="1215.50">TaskPool_(31)</text></g><g><title>[unknown] (374 samples, 12.70%)</title><rect x="69.8709%" y="1189" width="12.7038%" height="15" fill="rgb(253,169,27)" fg:x="2057" fg:w="374"/><text x="70.1209%" y="1199.50">[unknown]</text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_texture (1 samples, 0.03%)</title><rect x="82.5408%" y="1173" width="0.0340%" height="15" fill="rgb(211,206,16)" fg:x="2430" fg:w="1"/><text x="82.7908%" y="1183.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::copy_buffer_to_texture (1 samples, 0.03%)</title><rect x="82.5408%" y="1157" width="0.0340%" height="15" fill="rgb(244,87,35)" fg:x="2430" fg:w="1"/><text x="82.7908%" y="1167.50"></text></g><g><title>ash::device::Device::cmd_copy_buffer_to_image (1 samples, 0.03%)</title><rect x="82.5408%" y="1141" width="0.0340%" height="15" fill="rgb(246,28,10)" fg:x="2430" fg:w="1"/><text x="82.7908%" y="1151.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="82.5408%" y="1125" width="0.0340%" height="15" fill="rgb(229,12,44)" fg:x="2430" fg:w="1"/><text x="82.7908%" y="1135.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="82.5408%" y="1109" width="0.0340%" height="15" fill="rgb(210,145,37)" fg:x="2430" fg:w="1"/><text x="82.7908%" y="1119.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="82.5408%" y="1093" width="0.0340%" height="15" fill="rgb(227,112,52)" fg:x="2430" fg:w="1"/><text x="82.7908%" y="1103.50"></text></g><g><title>TaskPool_(4) (1 samples, 0.03%)</title><rect x="82.5747%" y="1205" width="0.0340%" height="15" fill="rgb(238,155,34)" fg:x="2431" fg:w="1"/><text x="82.8247%" y="1215.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="82.5747%" y="1189" width="0.0340%" height="15" fill="rgb(239,226,36)" fg:x="2431" fg:w="1"/><text x="82.8247%" y="1199.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="82.5747%" y="1173" width="0.0340%" height="15" fill="rgb(230,16,23)" fg:x="2431" fg:w="1"/><text x="82.8247%" y="1183.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1 samples, 0.03%)</title><rect x="82.5747%" y="1157" width="0.0340%" height="15" fill="rgb(236,171,36)" fg:x="2431" fg:w="1"/><text x="82.8247%" y="1167.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.03%)</title><rect x="82.5747%" y="1141" width="0.0340%" height="15" fill="rgb(221,22,14)" fg:x="2431" fg:w="1"/><text x="82.8247%" y="1151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.03%)</title><rect x="82.5747%" y="1125" width="0.0340%" height="15" fill="rgb(242,43,11)" fg:x="2431" fg:w="1"/><text x="82.8247%" y="1135.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.03%)</title><rect x="82.5747%" y="1109" width="0.0340%" height="15" fill="rgb(232,69,23)" fg:x="2431" fg:w="1"/><text x="82.8247%" y="1119.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (1 samples, 0.03%)</title><rect x="82.5747%" y="1093" width="0.0340%" height="15" fill="rgb(216,180,54)" fg:x="2431" fg:w="1"/><text x="82.8247%" y="1103.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.03%)</title><rect x="82.5747%" y="1077" width="0.0340%" height="15" fill="rgb(216,5,24)" fg:x="2431" fg:w="1"/><text x="82.8247%" y="1087.50"></text></g><g><title>std::panicking::try (1 samples, 0.03%)</title><rect x="82.5747%" y="1061" width="0.0340%" height="15" fill="rgb(225,89,9)" fg:x="2431" fg:w="1"/><text x="82.8247%" y="1071.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.03%)</title><rect x="82.5747%" y="1045" width="0.0340%" height="15" fill="rgb(243,75,33)" fg:x="2431" fg:w="1"/><text x="82.8247%" y="1055.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.03%)</title><rect x="82.5747%" y="1029" width="0.0340%" height="15" fill="rgb(247,141,45)" fg:x="2431" fg:w="1"/><text x="82.8247%" y="1039.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="82.5747%" y="1013" width="0.0340%" height="15" fill="rgb(232,177,36)" fg:x="2431" fg:w="1"/><text x="82.8247%" y="1023.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.03%)</title><rect x="82.5747%" y="997" width="0.0340%" height="15" fill="rgb(219,125,36)" fg:x="2431" fg:w="1"/><text x="82.8247%" y="1007.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="82.5747%" y="981" width="0.0340%" height="15" fill="rgb(227,94,9)" fg:x="2431" fg:w="1"/><text x="82.8247%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.03%)</title><rect x="82.5747%" y="965" width="0.0340%" height="15" fill="rgb(240,34,52)" fg:x="2431" fg:w="1"/><text x="82.8247%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.03%)</title><rect x="82.5747%" y="949" width="0.0340%" height="15" fill="rgb(216,45,12)" fg:x="2431" fg:w="1"/><text x="82.8247%" y="959.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="82.5747%" y="933" width="0.0340%" height="15" fill="rgb(246,21,19)" fg:x="2431" fg:w="1"/><text x="82.8247%" y="943.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.03%)</title><rect x="82.5747%" y="917" width="0.0340%" height="15" fill="rgb(213,98,42)" fg:x="2431" fg:w="1"/><text x="82.8247%" y="927.50"></text></g><g><title>std::panicking::try (1 samples, 0.03%)</title><rect x="82.5747%" y="901" width="0.0340%" height="15" fill="rgb(250,136,47)" fg:x="2431" fg:w="1"/><text x="82.8247%" y="911.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.03%)</title><rect x="82.5747%" y="885" width="0.0340%" height="15" fill="rgb(251,124,27)" fg:x="2431" fg:w="1"/><text x="82.8247%" y="895.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="82.5747%" y="869" width="0.0340%" height="15" fill="rgb(229,180,14)" fg:x="2431" fg:w="1"/><text x="82.8247%" y="879.50"></text></g><g><title>futures_lite::future::block_on (1 samples, 0.03%)</title><rect x="82.5747%" y="853" width="0.0340%" height="15" fill="rgb(245,216,25)" fg:x="2431" fg:w="1"/><text x="82.8247%" y="863.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.03%)</title><rect x="82.5747%" y="837" width="0.0340%" height="15" fill="rgb(251,43,5)" fg:x="2431" fg:w="1"/><text x="82.8247%" y="847.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.03%)</title><rect x="82.5747%" y="821" width="0.0340%" height="15" fill="rgb(250,128,24)" fg:x="2431" fg:w="1"/><text x="82.8247%" y="831.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (1 samples, 0.03%)</title><rect x="82.5747%" y="805" width="0.0340%" height="15" fill="rgb(217,117,27)" fg:x="2431" fg:w="1"/><text x="82.8247%" y="815.50"></text></g><g><title>parking::Inner::park (1 samples, 0.03%)</title><rect x="82.5747%" y="789" width="0.0340%" height="15" fill="rgb(245,147,4)" fg:x="2431" fg:w="1"/><text x="82.8247%" y="799.50"></text></g><g><title>std::sync::condvar::Condvar::wait (1 samples, 0.03%)</title><rect x="82.5747%" y="773" width="0.0340%" height="15" fill="rgb(242,201,35)" fg:x="2431" fg:w="1"/><text x="82.8247%" y="783.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait (1 samples, 0.03%)</title><rect x="82.5747%" y="757" width="0.0340%" height="15" fill="rgb(218,181,1)" fg:x="2431" fg:w="1"/><text x="82.8247%" y="767.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait_optional_timeout (1 samples, 0.03%)</title><rect x="82.5747%" y="741" width="0.0340%" height="15" fill="rgb(222,6,29)" fg:x="2431" fg:w="1"/><text x="82.8247%" y="751.50"></text></g><g><title>std::sys::unix::futex::futex_wait (1 samples, 0.03%)</title><rect x="82.5747%" y="725" width="0.0340%" height="15" fill="rgb(208,186,3)" fg:x="2431" fg:w="1"/><text x="82.8247%" y="735.50"></text></g><g><title>syscall (1 samples, 0.03%)</title><rect x="82.5747%" y="709" width="0.0340%" height="15" fill="rgb(216,36,26)" fg:x="2431" fg:w="1"/><text x="82.8247%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="82.5747%" y="693" width="0.0340%" height="15" fill="rgb(248,201,23)" fg:x="2431" fg:w="1"/><text x="82.8247%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="82.5747%" y="677" width="0.0340%" height="15" fill="rgb(251,170,31)" fg:x="2431" fg:w="1"/><text x="82.8247%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="82.5747%" y="661" width="0.0340%" height="15" fill="rgb(207,110,25)" fg:x="2431" fg:w="1"/><text x="82.8247%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="82.5747%" y="645" width="0.0340%" height="15" fill="rgb(250,54,15)" fg:x="2431" fg:w="1"/><text x="82.8247%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="82.5747%" y="629" width="0.0340%" height="15" fill="rgb(227,68,33)" fg:x="2431" fg:w="1"/><text x="82.8247%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="82.5747%" y="613" width="0.0340%" height="15" fill="rgb(238,34,41)" fg:x="2431" fg:w="1"/><text x="82.8247%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="82.5747%" y="597" width="0.0340%" height="15" fill="rgb(220,11,15)" fg:x="2431" fg:w="1"/><text x="82.8247%" y="607.50"></text></g><g><title>TaskPool_(5) (1 samples, 0.03%)</title><rect x="82.6087%" y="1205" width="0.0340%" height="15" fill="rgb(246,111,35)" fg:x="2432" fg:w="1"/><text x="82.8587%" y="1215.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="82.6087%" y="1189" width="0.0340%" height="15" fill="rgb(209,88,53)" fg:x="2432" fg:w="1"/><text x="82.8587%" y="1199.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="82.6087%" y="1173" width="0.0340%" height="15" fill="rgb(231,185,47)" fg:x="2432" fg:w="1"/><text x="82.8587%" y="1183.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1 samples, 0.03%)</title><rect x="82.6087%" y="1157" width="0.0340%" height="15" fill="rgb(233,154,1)" fg:x="2432" fg:w="1"/><text x="82.8587%" y="1167.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.03%)</title><rect x="82.6087%" y="1141" width="0.0340%" height="15" fill="rgb(225,15,46)" fg:x="2432" fg:w="1"/><text x="82.8587%" y="1151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.03%)</title><rect x="82.6087%" y="1125" width="0.0340%" height="15" fill="rgb(211,135,41)" fg:x="2432" fg:w="1"/><text x="82.8587%" y="1135.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.03%)</title><rect x="82.6087%" y="1109" width="0.0340%" height="15" fill="rgb(208,54,0)" fg:x="2432" fg:w="1"/><text x="82.8587%" y="1119.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (1 samples, 0.03%)</title><rect x="82.6087%" y="1093" width="0.0340%" height="15" fill="rgb(244,136,14)" fg:x="2432" fg:w="1"/><text x="82.8587%" y="1103.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.03%)</title><rect x="82.6087%" y="1077" width="0.0340%" height="15" fill="rgb(241,56,14)" fg:x="2432" fg:w="1"/><text x="82.8587%" y="1087.50"></text></g><g><title>std::panicking::try (1 samples, 0.03%)</title><rect x="82.6087%" y="1061" width="0.0340%" height="15" fill="rgb(205,80,24)" fg:x="2432" fg:w="1"/><text x="82.8587%" y="1071.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.03%)</title><rect x="82.6087%" y="1045" width="0.0340%" height="15" fill="rgb(220,57,4)" fg:x="2432" fg:w="1"/><text x="82.8587%" y="1055.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.03%)</title><rect x="82.6087%" y="1029" width="0.0340%" height="15" fill="rgb(226,193,50)" fg:x="2432" fg:w="1"/><text x="82.8587%" y="1039.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="82.6087%" y="1013" width="0.0340%" height="15" fill="rgb(231,168,22)" fg:x="2432" fg:w="1"/><text x="82.8587%" y="1023.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.03%)</title><rect x="82.6087%" y="997" width="0.0340%" height="15" fill="rgb(254,215,14)" fg:x="2432" fg:w="1"/><text x="82.8587%" y="1007.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="82.6087%" y="981" width="0.0340%" height="15" fill="rgb(211,115,16)" fg:x="2432" fg:w="1"/><text x="82.8587%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.03%)</title><rect x="82.6087%" y="965" width="0.0340%" height="15" fill="rgb(236,210,16)" fg:x="2432" fg:w="1"/><text x="82.8587%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.03%)</title><rect x="82.6087%" y="949" width="0.0340%" height="15" fill="rgb(221,94,12)" fg:x="2432" fg:w="1"/><text x="82.8587%" y="959.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="82.6087%" y="933" width="0.0340%" height="15" fill="rgb(235,218,49)" fg:x="2432" fg:w="1"/><text x="82.8587%" y="943.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.03%)</title><rect x="82.6087%" y="917" width="0.0340%" height="15" fill="rgb(217,114,14)" fg:x="2432" fg:w="1"/><text x="82.8587%" y="927.50"></text></g><g><title>std::panicking::try (1 samples, 0.03%)</title><rect x="82.6087%" y="901" width="0.0340%" height="15" fill="rgb(216,145,22)" fg:x="2432" fg:w="1"/><text x="82.8587%" y="911.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.03%)</title><rect x="82.6087%" y="885" width="0.0340%" height="15" fill="rgb(217,112,39)" fg:x="2432" fg:w="1"/><text x="82.8587%" y="895.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="82.6087%" y="869" width="0.0340%" height="15" fill="rgb(225,85,32)" fg:x="2432" fg:w="1"/><text x="82.8587%" y="879.50"></text></g><g><title>futures_lite::future::block_on (1 samples, 0.03%)</title><rect x="82.6087%" y="853" width="0.0340%" height="15" fill="rgb(245,209,47)" fg:x="2432" fg:w="1"/><text x="82.8587%" y="863.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.03%)</title><rect x="82.6087%" y="837" width="0.0340%" height="15" fill="rgb(218,220,15)" fg:x="2432" fg:w="1"/><text x="82.8587%" y="847.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.03%)</title><rect x="82.6087%" y="821" width="0.0340%" height="15" fill="rgb(222,202,31)" fg:x="2432" fg:w="1"/><text x="82.8587%" y="831.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (1 samples, 0.03%)</title><rect x="82.6087%" y="805" width="0.0340%" height="15" fill="rgb(243,203,4)" fg:x="2432" fg:w="1"/><text x="82.8587%" y="815.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (1 samples, 0.03%)</title><rect x="82.6087%" y="789" width="0.0340%" height="15" fill="rgb(237,92,17)" fg:x="2432" fg:w="1"/><text x="82.8587%" y="799.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (1 samples, 0.03%)</title><rect x="82.6087%" y="773" width="0.0340%" height="15" fill="rgb(231,119,7)" fg:x="2432" fg:w="1"/><text x="82.8587%" y="783.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="82.6087%" y="757" width="0.0340%" height="15" fill="rgb(237,82,41)" fg:x="2432" fg:w="1"/><text x="82.8587%" y="767.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (1 samples, 0.03%)</title><rect x="82.6087%" y="741" width="0.0340%" height="15" fill="rgb(226,81,48)" fg:x="2432" fg:w="1"/><text x="82.8587%" y="751.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (1 samples, 0.03%)</title><rect x="82.6087%" y="725" width="0.0340%" height="15" fill="rgb(234,70,51)" fg:x="2432" fg:w="1"/><text x="82.8587%" y="735.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.03%)</title><rect x="82.6087%" y="709" width="0.0340%" height="15" fill="rgb(251,86,4)" fg:x="2432" fg:w="1"/><text x="82.8587%" y="719.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="82.6087%" y="693" width="0.0340%" height="15" fill="rgb(244,144,28)" fg:x="2432" fg:w="1"/><text x="82.8587%" y="703.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="82.6087%" y="677" width="0.0340%" height="15" fill="rgb(232,161,39)" fg:x="2432" fg:w="1"/><text x="82.8587%" y="687.50"></text></g><g><title>async_executor::steal (1 samples, 0.03%)</title><rect x="82.6087%" y="661" width="0.0340%" height="15" fill="rgb(247,34,51)" fg:x="2432" fg:w="1"/><text x="82.8587%" y="671.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::len (1 samples, 0.03%)</title><rect x="82.6087%" y="645" width="0.0340%" height="15" fill="rgb(225,132,2)" fg:x="2432" fg:w="1"/><text x="82.8587%" y="655.50"></text></g><g><title>TaskPool_(6) (1 samples, 0.03%)</title><rect x="82.6427%" y="1205" width="0.0340%" height="15" fill="rgb(209,159,44)" fg:x="2433" fg:w="1"/><text x="82.8927%" y="1215.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="82.6427%" y="1189" width="0.0340%" height="15" fill="rgb(251,214,1)" fg:x="2433" fg:w="1"/><text x="82.8927%" y="1199.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="82.6427%" y="1173" width="0.0340%" height="15" fill="rgb(247,84,47)" fg:x="2433" fg:w="1"/><text x="82.8927%" y="1183.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1 samples, 0.03%)</title><rect x="82.6427%" y="1157" width="0.0340%" height="15" fill="rgb(240,111,43)" fg:x="2433" fg:w="1"/><text x="82.8927%" y="1167.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.03%)</title><rect x="82.6427%" y="1141" width="0.0340%" height="15" fill="rgb(215,214,35)" fg:x="2433" fg:w="1"/><text x="82.8927%" y="1151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.03%)</title><rect x="82.6427%" y="1125" width="0.0340%" height="15" fill="rgb(248,207,23)" fg:x="2433" fg:w="1"/><text x="82.8927%" y="1135.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.03%)</title><rect x="82.6427%" y="1109" width="0.0340%" height="15" fill="rgb(214,186,4)" fg:x="2433" fg:w="1"/><text x="82.8927%" y="1119.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (1 samples, 0.03%)</title><rect x="82.6427%" y="1093" width="0.0340%" height="15" fill="rgb(220,133,22)" fg:x="2433" fg:w="1"/><text x="82.8927%" y="1103.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.03%)</title><rect x="82.6427%" y="1077" width="0.0340%" height="15" fill="rgb(239,134,19)" fg:x="2433" fg:w="1"/><text x="82.8927%" y="1087.50"></text></g><g><title>std::panicking::try (1 samples, 0.03%)</title><rect x="82.6427%" y="1061" width="0.0340%" height="15" fill="rgb(250,140,9)" fg:x="2433" fg:w="1"/><text x="82.8927%" y="1071.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.03%)</title><rect x="82.6427%" y="1045" width="0.0340%" height="15" fill="rgb(225,59,14)" fg:x="2433" fg:w="1"/><text x="82.8927%" y="1055.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.03%)</title><rect x="82.6427%" y="1029" width="0.0340%" height="15" fill="rgb(214,152,51)" fg:x="2433" fg:w="1"/><text x="82.8927%" y="1039.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="82.6427%" y="1013" width="0.0340%" height="15" fill="rgb(251,227,43)" fg:x="2433" fg:w="1"/><text x="82.8927%" y="1023.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.03%)</title><rect x="82.6427%" y="997" width="0.0340%" height="15" fill="rgb(241,96,17)" fg:x="2433" fg:w="1"/><text x="82.8927%" y="1007.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="82.6427%" y="981" width="0.0340%" height="15" fill="rgb(234,198,43)" fg:x="2433" fg:w="1"/><text x="82.8927%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.03%)</title><rect x="82.6427%" y="965" width="0.0340%" height="15" fill="rgb(220,108,29)" fg:x="2433" fg:w="1"/><text x="82.8927%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.03%)</title><rect x="82.6427%" y="949" width="0.0340%" height="15" fill="rgb(226,163,33)" fg:x="2433" fg:w="1"/><text x="82.8927%" y="959.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="82.6427%" y="933" width="0.0340%" height="15" fill="rgb(205,194,45)" fg:x="2433" fg:w="1"/><text x="82.8927%" y="943.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.03%)</title><rect x="82.6427%" y="917" width="0.0340%" height="15" fill="rgb(206,143,44)" fg:x="2433" fg:w="1"/><text x="82.8927%" y="927.50"></text></g><g><title>std::panicking::try (1 samples, 0.03%)</title><rect x="82.6427%" y="901" width="0.0340%" height="15" fill="rgb(236,136,36)" fg:x="2433" fg:w="1"/><text x="82.8927%" y="911.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.03%)</title><rect x="82.6427%" y="885" width="0.0340%" height="15" fill="rgb(249,172,42)" fg:x="2433" fg:w="1"/><text x="82.8927%" y="895.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="82.6427%" y="869" width="0.0340%" height="15" fill="rgb(216,139,23)" fg:x="2433" fg:w="1"/><text x="82.8927%" y="879.50"></text></g><g><title>futures_lite::future::block_on (1 samples, 0.03%)</title><rect x="82.6427%" y="853" width="0.0340%" height="15" fill="rgb(207,166,20)" fg:x="2433" fg:w="1"/><text x="82.8927%" y="863.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.03%)</title><rect x="82.6427%" y="837" width="0.0340%" height="15" fill="rgb(210,209,22)" fg:x="2433" fg:w="1"/><text x="82.8927%" y="847.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.03%)</title><rect x="82.6427%" y="821" width="0.0340%" height="15" fill="rgb(232,118,20)" fg:x="2433" fg:w="1"/><text x="82.8927%" y="831.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (1 samples, 0.03%)</title><rect x="82.6427%" y="805" width="0.0340%" height="15" fill="rgb(238,113,42)" fg:x="2433" fg:w="1"/><text x="82.8927%" y="815.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (1 samples, 0.03%)</title><rect x="82.6427%" y="789" width="0.0340%" height="15" fill="rgb(231,42,5)" fg:x="2433" fg:w="1"/><text x="82.8927%" y="799.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (1 samples, 0.03%)</title><rect x="82.6427%" y="773" width="0.0340%" height="15" fill="rgb(243,166,24)" fg:x="2433" fg:w="1"/><text x="82.8927%" y="783.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (1 samples, 0.03%)</title><rect x="82.6427%" y="757" width="0.0340%" height="15" fill="rgb(237,226,12)" fg:x="2433" fg:w="1"/><text x="82.8927%" y="767.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.03%)</title><rect x="82.6427%" y="741" width="0.0340%" height="15" fill="rgb(229,133,24)" fg:x="2433" fg:w="1"/><text x="82.8927%" y="751.50"></text></g><g><title>async_channel::Recv&lt;T&gt;::run_with_strategy (1 samples, 0.03%)</title><rect x="82.6427%" y="725" width="0.0340%" height="15" fill="rgb(238,33,43)" fg:x="2433" fg:w="1"/><text x="82.8927%" y="735.50"></text></g><g><title>event_listener::Event::listen (1 samples, 0.03%)</title><rect x="82.6427%" y="709" width="0.0340%" height="15" fill="rgb(227,59,38)" fg:x="2433" fg:w="1"/><text x="82.8927%" y="719.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="82.6427%" y="693" width="0.0340%" height="15" fill="rgb(230,97,0)" fg:x="2433" fg:w="1"/><text x="82.8927%" y="703.50"></text></g><g><title>TaskPool_(8) (1 samples, 0.03%)</title><rect x="82.6766%" y="1205" width="0.0340%" height="15" fill="rgb(250,173,50)" fg:x="2434" fg:w="1"/><text x="82.9266%" y="1215.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="82.6766%" y="1189" width="0.0340%" height="15" fill="rgb(240,15,50)" fg:x="2434" fg:w="1"/><text x="82.9266%" y="1199.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="82.6766%" y="1173" width="0.0340%" height="15" fill="rgb(221,93,22)" fg:x="2434" fg:w="1"/><text x="82.9266%" y="1183.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1 samples, 0.03%)</title><rect x="82.6766%" y="1157" width="0.0340%" height="15" fill="rgb(245,180,53)" fg:x="2434" fg:w="1"/><text x="82.9266%" y="1167.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.03%)</title><rect x="82.6766%" y="1141" width="0.0340%" height="15" fill="rgb(231,88,51)" fg:x="2434" fg:w="1"/><text x="82.9266%" y="1151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.03%)</title><rect x="82.6766%" y="1125" width="0.0340%" height="15" fill="rgb(240,58,21)" fg:x="2434" fg:w="1"/><text x="82.9266%" y="1135.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.03%)</title><rect x="82.6766%" y="1109" width="0.0340%" height="15" fill="rgb(237,21,10)" fg:x="2434" fg:w="1"/><text x="82.9266%" y="1119.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (1 samples, 0.03%)</title><rect x="82.6766%" y="1093" width="0.0340%" height="15" fill="rgb(218,43,11)" fg:x="2434" fg:w="1"/><text x="82.9266%" y="1103.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.03%)</title><rect x="82.6766%" y="1077" width="0.0340%" height="15" fill="rgb(218,221,29)" fg:x="2434" fg:w="1"/><text x="82.9266%" y="1087.50"></text></g><g><title>std::panicking::try (1 samples, 0.03%)</title><rect x="82.6766%" y="1061" width="0.0340%" height="15" fill="rgb(214,118,42)" fg:x="2434" fg:w="1"/><text x="82.9266%" y="1071.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.03%)</title><rect x="82.6766%" y="1045" width="0.0340%" height="15" fill="rgb(251,200,26)" fg:x="2434" fg:w="1"/><text x="82.9266%" y="1055.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.03%)</title><rect x="82.6766%" y="1029" width="0.0340%" height="15" fill="rgb(237,101,39)" fg:x="2434" fg:w="1"/><text x="82.9266%" y="1039.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="82.6766%" y="1013" width="0.0340%" height="15" fill="rgb(251,117,11)" fg:x="2434" fg:w="1"/><text x="82.9266%" y="1023.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.03%)</title><rect x="82.6766%" y="997" width="0.0340%" height="15" fill="rgb(216,223,23)" fg:x="2434" fg:w="1"/><text x="82.9266%" y="1007.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="82.6766%" y="981" width="0.0340%" height="15" fill="rgb(251,54,12)" fg:x="2434" fg:w="1"/><text x="82.9266%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.03%)</title><rect x="82.6766%" y="965" width="0.0340%" height="15" fill="rgb(254,176,54)" fg:x="2434" fg:w="1"/><text x="82.9266%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.03%)</title><rect x="82.6766%" y="949" width="0.0340%" height="15" fill="rgb(210,32,8)" fg:x="2434" fg:w="1"/><text x="82.9266%" y="959.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::LOCAL_EXECUTOR::__getit (1 samples, 0.03%)</title><rect x="82.6766%" y="933" width="0.0340%" height="15" fill="rgb(235,52,38)" fg:x="2434" fg:w="1"/><text x="82.9266%" y="943.50"></text></g><g><title>std::sys::common::thread_local::fast_local::Key&lt;T&gt;::get (1 samples, 0.03%)</title><rect x="82.6766%" y="917" width="0.0340%" height="15" fill="rgb(231,4,44)" fg:x="2434" fg:w="1"/><text x="82.9266%" y="927.50"></text></g><g><title>std::sys::common::thread_local::fast_local::Key&lt;T&gt;::try_initialize (1 samples, 0.03%)</title><rect x="82.6766%" y="901" width="0.0340%" height="15" fill="rgb(249,2,32)" fg:x="2434" fg:w="1"/><text x="82.9266%" y="911.50"></text></g><g><title>TaskPool_(9) (1 samples, 0.03%)</title><rect x="82.7106%" y="1205" width="0.0340%" height="15" fill="rgb(224,65,26)" fg:x="2435" fg:w="1"/><text x="82.9606%" y="1215.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="82.7106%" y="1189" width="0.0340%" height="15" fill="rgb(250,73,40)" fg:x="2435" fg:w="1"/><text x="82.9606%" y="1199.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="82.7106%" y="1173" width="0.0340%" height="15" fill="rgb(253,177,16)" fg:x="2435" fg:w="1"/><text x="82.9606%" y="1183.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1 samples, 0.03%)</title><rect x="82.7106%" y="1157" width="0.0340%" height="15" fill="rgb(217,32,34)" fg:x="2435" fg:w="1"/><text x="82.9606%" y="1167.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.03%)</title><rect x="82.7106%" y="1141" width="0.0340%" height="15" fill="rgb(212,7,10)" fg:x="2435" fg:w="1"/><text x="82.9606%" y="1151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.03%)</title><rect x="82.7106%" y="1125" width="0.0340%" height="15" fill="rgb(245,89,8)" fg:x="2435" fg:w="1"/><text x="82.9606%" y="1135.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.03%)</title><rect x="82.7106%" y="1109" width="0.0340%" height="15" fill="rgb(237,16,53)" fg:x="2435" fg:w="1"/><text x="82.9606%" y="1119.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (1 samples, 0.03%)</title><rect x="82.7106%" y="1093" width="0.0340%" height="15" fill="rgb(250,204,30)" fg:x="2435" fg:w="1"/><text x="82.9606%" y="1103.50"></text></g><g><title>std::sys::unix::thread::guard::current (1 samples, 0.03%)</title><rect x="82.7106%" y="1077" width="0.0340%" height="15" fill="rgb(208,77,27)" fg:x="2435" fg:w="1"/><text x="82.9606%" y="1087.50"></text></g><g><title>pthread_getattr_np (1 samples, 0.03%)</title><rect x="82.7106%" y="1061" width="0.0340%" height="15" fill="rgb(250,204,28)" fg:x="2435" fg:w="1"/><text x="82.9606%" y="1071.50"></text></g><g><title>malloc (1 samples, 0.03%)</title><rect x="82.7106%" y="1045" width="0.0340%" height="15" fill="rgb(244,63,21)" fg:x="2435" fg:w="1"/><text x="82.9606%" y="1055.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="82.7106%" y="1029" width="0.0340%" height="15" fill="rgb(236,85,44)" fg:x="2435" fg:w="1"/><text x="82.9606%" y="1039.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="82.7106%" y="1013" width="0.0340%" height="15" fill="rgb(215,98,4)" fg:x="2435" fg:w="1"/><text x="82.9606%" y="1023.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="82.7106%" y="997" width="0.0340%" height="15" fill="rgb(235,38,11)" fg:x="2435" fg:w="1"/><text x="82.9606%" y="1007.50"></text></g><g><title>__mmap (1 samples, 0.03%)</title><rect x="82.7106%" y="981" width="0.0340%" height="15" fill="rgb(254,186,25)" fg:x="2435" fg:w="1"/><text x="82.9606%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="82.7106%" y="965" width="0.0340%" height="15" fill="rgb(225,55,31)" fg:x="2435" fg:w="1"/><text x="82.9606%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="82.7106%" y="949" width="0.0340%" height="15" fill="rgb(211,15,21)" fg:x="2435" fg:w="1"/><text x="82.9606%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="82.7106%" y="933" width="0.0340%" height="15" fill="rgb(215,187,41)" fg:x="2435" fg:w="1"/><text x="82.9606%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="82.7106%" y="917" width="0.0340%" height="15" fill="rgb(248,69,32)" fg:x="2435" fg:w="1"/><text x="82.9606%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="82.7106%" y="901" width="0.0340%" height="15" fill="rgb(252,102,52)" fg:x="2435" fg:w="1"/><text x="82.9606%" y="911.50"></text></g><g><title>dbus-send (2 samples, 0.07%)</title><rect x="82.7446%" y="1205" width="0.0679%" height="15" fill="rgb(253,140,32)" fg:x="2436" fg:w="2"/><text x="82.9946%" y="1215.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2 samples, 0.07%)</title><rect x="82.7446%" y="1189" width="0.0679%" height="15" fill="rgb(216,56,42)" fg:x="2436" fg:w="2"/><text x="82.9946%" y="1199.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.03%)</title><rect x="82.7785%" y="1173" width="0.0340%" height="15" fill="rgb(216,184,14)" fg:x="2437" fg:w="1"/><text x="83.0285%" y="1183.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="82.7785%" y="1157" width="0.0340%" height="15" fill="rgb(237,187,27)" fg:x="2437" fg:w="1"/><text x="83.0285%" y="1167.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="82.7785%" y="1141" width="0.0340%" height="15" fill="rgb(219,65,3)" fg:x="2437" fg:w="1"/><text x="83.0285%" y="1151.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="82.7785%" y="1125" width="0.0340%" height="15" fill="rgb(245,83,25)" fg:x="2437" fg:w="1"/><text x="83.0285%" y="1135.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="82.7785%" y="1109" width="0.0340%" height="15" fill="rgb(214,205,45)" fg:x="2437" fg:w="1"/><text x="83.0285%" y="1119.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="82.7785%" y="1093" width="0.0340%" height="15" fill="rgb(241,20,18)" fg:x="2437" fg:w="1"/><text x="83.0285%" y="1103.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="82.7785%" y="1077" width="0.0340%" height="15" fill="rgb(232,163,23)" fg:x="2437" fg:w="1"/><text x="83.0285%" y="1087.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="82.7785%" y="1061" width="0.0340%" height="15" fill="rgb(214,5,46)" fg:x="2437" fg:w="1"/><text x="83.0285%" y="1071.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="82.7785%" y="1045" width="0.0340%" height="15" fill="rgb(229,78,17)" fg:x="2437" fg:w="1"/><text x="83.0285%" y="1055.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="82.7785%" y="1029" width="0.0340%" height="15" fill="rgb(248,89,10)" fg:x="2437" fg:w="1"/><text x="83.0285%" y="1039.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="82.7785%" y="1013" width="0.0340%" height="15" fill="rgb(248,54,15)" fg:x="2437" fg:w="1"/><text x="83.0285%" y="1023.50"></text></g><g><title>[libdconfsettings.so] (1 samples, 0.03%)</title><rect x="82.8125%" y="1141" width="0.0340%" height="15" fill="rgb(223,116,6)" fg:x="2438" fg:w="1"/><text x="83.0625%" y="1151.50"></text></g><g><title>g_main_context_iteration (1 samples, 0.03%)</title><rect x="82.8125%" y="1125" width="0.0340%" height="15" fill="rgb(205,125,38)" fg:x="2438" fg:w="1"/><text x="83.0625%" y="1135.50"></text></g><g><title>[libglib-2.0.so.0.7600.3] (1 samples, 0.03%)</title><rect x="82.8125%" y="1109" width="0.0340%" height="15" fill="rgb(251,78,38)" fg:x="2438" fg:w="1"/><text x="83.0625%" y="1119.50"></text></g><g><title>g_main_context_dispatch (1 samples, 0.03%)</title><rect x="82.8125%" y="1093" width="0.0340%" height="15" fill="rgb(253,78,28)" fg:x="2438" fg:w="1"/><text x="83.0625%" y="1103.50"></text></g><g><title>[libdconfsettings.so] (1 samples, 0.03%)</title><rect x="82.8125%" y="1077" width="0.0340%" height="15" fill="rgb(209,120,3)" fg:x="2438" fg:w="1"/><text x="83.0625%" y="1087.50"></text></g><g><title>[libdconfsettings.so] (1 samples, 0.03%)</title><rect x="82.8125%" y="1061" width="0.0340%" height="15" fill="rgb(238,229,9)" fg:x="2438" fg:w="1"/><text x="83.0625%" y="1071.50"></text></g><g><title>g_bus_get_sync (1 samples, 0.03%)</title><rect x="82.8125%" y="1045" width="0.0340%" height="15" fill="rgb(253,159,18)" fg:x="2438" fg:w="1"/><text x="83.0625%" y="1055.50"></text></g><g><title>[libgio-2.0.so.0.7600.3] (1 samples, 0.03%)</title><rect x="82.8125%" y="1029" width="0.0340%" height="15" fill="rgb(244,42,34)" fg:x="2438" fg:w="1"/><text x="83.0625%" y="1039.50"></text></g><g><title>g_dbus_error_quark (1 samples, 0.03%)</title><rect x="82.8125%" y="1013" width="0.0340%" height="15" fill="rgb(224,8,7)" fg:x="2438" fg:w="1"/><text x="83.0625%" y="1023.50"></text></g><g><title>g_dbus_error_register_error_domain (1 samples, 0.03%)</title><rect x="82.8125%" y="997" width="0.0340%" height="15" fill="rgb(210,201,45)" fg:x="2438" fg:w="1"/><text x="83.0625%" y="1007.50"></text></g><g><title>g_dbus_error_register_error (1 samples, 0.03%)</title><rect x="82.8125%" y="981" width="0.0340%" height="15" fill="rgb(252,185,21)" fg:x="2438" fg:w="1"/><text x="83.0625%" y="991.50"></text></g><g><title>g_hash_table_insert (1 samples, 0.03%)</title><rect x="82.8125%" y="965" width="0.0340%" height="15" fill="rgb(223,131,1)" fg:x="2438" fg:w="1"/><text x="83.0625%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="82.8465%" y="1077" width="0.0340%" height="15" fill="rgb(245,141,16)" fg:x="2439" fg:w="1"/><text x="83.0965%" y="1087.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="82.8465%" y="1061" width="0.0340%" height="15" fill="rgb(229,55,45)" fg:x="2439" fg:w="1"/><text x="83.0965%" y="1071.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="82.8465%" y="1045" width="0.0340%" height="15" fill="rgb(208,92,15)" fg:x="2439" fg:w="1"/><text x="83.0965%" y="1055.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="82.8465%" y="1029" width="0.0340%" height="15" fill="rgb(234,185,47)" fg:x="2439" fg:w="1"/><text x="83.0965%" y="1039.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="82.8465%" y="1013" width="0.0340%" height="15" fill="rgb(253,104,50)" fg:x="2439" fg:w="1"/><text x="83.0965%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="82.8465%" y="997" width="0.0340%" height="15" fill="rgb(205,70,7)" fg:x="2439" fg:w="1"/><text x="83.0965%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="82.8465%" y="981" width="0.0340%" height="15" fill="rgb(240,178,43)" fg:x="2439" fg:w="1"/><text x="83.0965%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="82.8465%" y="965" width="0.0340%" height="15" fill="rgb(214,112,2)" fg:x="2439" fg:w="1"/><text x="83.0965%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="82.8465%" y="949" width="0.0340%" height="15" fill="rgb(206,46,17)" fg:x="2439" fg:w="1"/><text x="83.0965%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="82.8465%" y="933" width="0.0340%" height="15" fill="rgb(225,220,16)" fg:x="2439" fg:w="1"/><text x="83.0965%" y="943.50"></text></g><g><title>cfree (2 samples, 0.07%)</title><rect x="82.8465%" y="1141" width="0.0679%" height="15" fill="rgb(238,65,40)" fg:x="2439" fg:w="2"/><text x="83.0965%" y="1151.50"></text></g><g><title>[libc.so.6] (2 samples, 0.07%)</title><rect x="82.8465%" y="1125" width="0.0679%" height="15" fill="rgb(230,151,21)" fg:x="2439" fg:w="2"/><text x="83.0965%" y="1135.50"></text></g><g><title>[libc.so.6] (2 samples, 0.07%)</title><rect x="82.8465%" y="1109" width="0.0679%" height="15" fill="rgb(218,58,49)" fg:x="2439" fg:w="2"/><text x="83.0965%" y="1119.50"></text></g><g><title>[libc.so.6] (2 samples, 0.07%)</title><rect x="82.8465%" y="1093" width="0.0679%" height="15" fill="rgb(219,179,14)" fg:x="2439" fg:w="2"/><text x="83.0965%" y="1103.50"></text></g><g><title>__mmap (1 samples, 0.03%)</title><rect x="82.8804%" y="1077" width="0.0340%" height="15" fill="rgb(223,72,1)" fg:x="2440" fg:w="1"/><text x="83.1304%" y="1087.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="82.8804%" y="1061" width="0.0340%" height="15" fill="rgb(238,126,10)" fg:x="2440" fg:w="1"/><text x="83.1304%" y="1071.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="82.8804%" y="1045" width="0.0340%" height="15" fill="rgb(224,206,38)" fg:x="2440" fg:w="1"/><text x="83.1304%" y="1055.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="82.8804%" y="1029" width="0.0340%" height="15" fill="rgb(212,201,54)" fg:x="2440" fg:w="1"/><text x="83.1304%" y="1039.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="82.8804%" y="1013" width="0.0340%" height="15" fill="rgb(218,154,48)" fg:x="2440" fg:w="1"/><text x="83.1304%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="82.8804%" y="997" width="0.0340%" height="15" fill="rgb(232,93,24)" fg:x="2440" fg:w="1"/><text x="83.1304%" y="1007.50"></text></g><g><title>dconf_worker (4 samples, 0.14%)</title><rect x="82.8125%" y="1205" width="0.1359%" height="15" fill="rgb(245,30,21)" fg:x="2438" fg:w="4"/><text x="83.0625%" y="1215.50"></text></g><g><title>[libc.so.6] (4 samples, 0.14%)</title><rect x="82.8125%" y="1189" width="0.1359%" height="15" fill="rgb(242,148,29)" fg:x="2438" fg:w="4"/><text x="83.0625%" y="1199.50"></text></g><g><title>[libc.so.6] (4 samples, 0.14%)</title><rect x="82.8125%" y="1173" width="0.1359%" height="15" fill="rgb(244,153,54)" fg:x="2438" fg:w="4"/><text x="83.0625%" y="1183.50"></text></g><g><title>[libglib-2.0.so.0.7600.3] (4 samples, 0.14%)</title><rect x="82.8125%" y="1157" width="0.1359%" height="15" fill="rgb(252,87,22)" fg:x="2438" fg:w="4"/><text x="83.0625%" y="1167.50"></text></g><g><title>pthread_setname_np (1 samples, 0.03%)</title><rect x="82.9144%" y="1141" width="0.0340%" height="15" fill="rgb(210,51,29)" fg:x="2441" fg:w="1"/><text x="83.1644%" y="1151.50"></text></g><g><title>prctl (1 samples, 0.03%)</title><rect x="82.9144%" y="1125" width="0.0340%" height="15" fill="rgb(242,136,47)" fg:x="2441" fg:w="1"/><text x="83.1644%" y="1135.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="82.9144%" y="1109" width="0.0340%" height="15" fill="rgb(238,68,4)" fg:x="2441" fg:w="1"/><text x="83.1644%" y="1119.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="82.9144%" y="1093" width="0.0340%" height="15" fill="rgb(242,161,30)" fg:x="2441" fg:w="1"/><text x="83.1644%" y="1103.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="82.9144%" y="1077" width="0.0340%" height="15" fill="rgb(218,58,44)" fg:x="2441" fg:w="1"/><text x="83.1644%" y="1087.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="82.9144%" y="1061" width="0.0340%" height="15" fill="rgb(252,125,32)" fg:x="2441" fg:w="1"/><text x="83.1644%" y="1071.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="82.9144%" y="1045" width="0.0340%" height="15" fill="rgb(219,178,0)" fg:x="2441" fg:w="1"/><text x="83.1644%" y="1055.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="82.9144%" y="1029" width="0.0340%" height="15" fill="rgb(213,152,7)" fg:x="2441" fg:w="1"/><text x="83.1644%" y="1039.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2 samples, 0.07%)</title><rect x="82.9484%" y="1189" width="0.0679%" height="15" fill="rgb(249,109,34)" fg:x="2442" fg:w="2"/><text x="83.1984%" y="1199.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.03%)</title><rect x="82.9823%" y="1173" width="0.0340%" height="15" fill="rgb(232,96,21)" fg:x="2443" fg:w="1"/><text x="83.2323%" y="1183.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="82.9823%" y="1157" width="0.0340%" height="15" fill="rgb(228,27,39)" fg:x="2443" fg:w="1"/><text x="83.2323%" y="1167.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="82.9823%" y="1141" width="0.0340%" height="15" fill="rgb(211,182,52)" fg:x="2443" fg:w="1"/><text x="83.2323%" y="1151.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="82.9823%" y="1125" width="0.0340%" height="15" fill="rgb(234,178,38)" fg:x="2443" fg:w="1"/><text x="83.2323%" y="1135.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="82.9823%" y="1109" width="0.0340%" height="15" fill="rgb(221,111,3)" fg:x="2443" fg:w="1"/><text x="83.2323%" y="1119.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="82.9823%" y="1093" width="0.0340%" height="15" fill="rgb(228,175,21)" fg:x="2443" fg:w="1"/><text x="83.2323%" y="1103.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="82.9823%" y="1077" width="0.0340%" height="15" fill="rgb(228,174,43)" fg:x="2443" fg:w="1"/><text x="83.2323%" y="1087.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="82.9823%" y="1061" width="0.0340%" height="15" fill="rgb(211,191,0)" fg:x="2443" fg:w="1"/><text x="83.2323%" y="1071.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="82.9823%" y="1045" width="0.0340%" height="15" fill="rgb(253,117,3)" fg:x="2443" fg:w="1"/><text x="83.2323%" y="1055.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="82.9823%" y="1029" width="0.0340%" height="15" fill="rgb(241,127,19)" fg:x="2443" fg:w="1"/><text x="83.2323%" y="1039.50"></text></g><g><title>[libc.so.6] (2 samples, 0.07%)</title><rect x="83.0163%" y="1189" width="0.0679%" height="15" fill="rgb(218,103,12)" fg:x="2444" fg:w="2"/><text x="83.2663%" y="1199.50"></text></g><g><title>[libexpat.so.1.8.10] (2 samples, 0.07%)</title><rect x="83.0842%" y="1189" width="0.0679%" height="15" fill="rgb(236,214,43)" fg:x="2446" fg:w="2"/><text x="83.3342%" y="1199.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="83.1522%" y="1173" width="0.0340%" height="15" fill="rgb(244,144,19)" fg:x="2448" fg:w="1"/><text x="83.4022%" y="1183.50"></text></g><g><title>[unknown] (3 samples, 0.10%)</title><rect x="83.1522%" y="1189" width="0.1019%" height="15" fill="rgb(246,188,10)" fg:x="2448" fg:w="3"/><text x="83.4022%" y="1199.50"></text></g><g><title>[libfontconfig.so.1.13.0] (2 samples, 0.07%)</title><rect x="83.1861%" y="1173" width="0.0679%" height="15" fill="rgb(212,193,33)" fg:x="2449" fg:w="2"/><text x="83.4361%" y="1183.50"></text></g><g><title>[libfontconfig.so.1.13.0] (2 samples, 0.07%)</title><rect x="83.1861%" y="1157" width="0.0679%" height="15" fill="rgb(241,51,29)" fg:x="2449" fg:w="2"/><text x="83.4361%" y="1167.50"></text></g><g><title>FcStrSetMember (1 samples, 0.03%)</title><rect x="83.2201%" y="1141" width="0.0340%" height="15" fill="rgb(211,58,19)" fg:x="2450" fg:w="1"/><text x="83.4701%" y="1151.50"></text></g><g><title>access (1 samples, 0.03%)</title><rect x="83.2541%" y="1189" width="0.0340%" height="15" fill="rgb(229,111,26)" fg:x="2451" fg:w="1"/><text x="83.5041%" y="1199.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="83.2541%" y="1173" width="0.0340%" height="15" fill="rgb(213,115,40)" fg:x="2451" fg:w="1"/><text x="83.5041%" y="1183.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="83.2541%" y="1157" width="0.0340%" height="15" fill="rgb(209,56,44)" fg:x="2451" fg:w="1"/><text x="83.5041%" y="1167.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="83.2541%" y="1141" width="0.0340%" height="15" fill="rgb(230,108,32)" fg:x="2451" fg:w="1"/><text x="83.5041%" y="1151.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="83.2541%" y="1125" width="0.0340%" height="15" fill="rgb(216,165,31)" fg:x="2451" fg:w="1"/><text x="83.5041%" y="1135.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="83.2541%" y="1109" width="0.0340%" height="15" fill="rgb(218,122,21)" fg:x="2451" fg:w="1"/><text x="83.5041%" y="1119.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="83.2541%" y="1093" width="0.0340%" height="15" fill="rgb(223,224,47)" fg:x="2451" fg:w="1"/><text x="83.5041%" y="1103.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="83.2541%" y="1077" width="0.0340%" height="15" fill="rgb(238,102,44)" fg:x="2451" fg:w="1"/><text x="83.5041%" y="1087.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="83.2541%" y="1061" width="0.0340%" height="15" fill="rgb(236,46,40)" fg:x="2451" fg:w="1"/><text x="83.5041%" y="1071.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="83.2541%" y="1045" width="0.0340%" height="15" fill="rgb(247,202,50)" fg:x="2451" fg:w="1"/><text x="83.5041%" y="1055.50"></text></g><g><title>fc-match (11 samples, 0.37%)</title><rect x="82.9484%" y="1205" width="0.3736%" height="15" fill="rgb(209,99,20)" fg:x="2442" fg:w="11"/><text x="83.1984%" y="1215.50"></text></g><g><title>cfree (1 samples, 0.03%)</title><rect x="83.2880%" y="1189" width="0.0340%" height="15" fill="rgb(252,27,34)" fg:x="2452" fg:w="1"/><text x="83.5380%" y="1199.50"></text></g><g><title>game_re:disk$0 (1 samples, 0.03%)</title><rect x="83.3220%" y="1205" width="0.0340%" height="15" fill="rgb(215,206,23)" fg:x="2453" fg:w="1"/><text x="83.5720%" y="1215.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="83.3220%" y="1189" width="0.0340%" height="15" fill="rgb(212,135,36)" fg:x="2453" fg:w="1"/><text x="83.5720%" y="1199.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="83.3220%" y="1173" width="0.0340%" height="15" fill="rgb(240,189,1)" fg:x="2453" fg:w="1"/><text x="83.5720%" y="1183.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="83.3220%" y="1157" width="0.0340%" height="15" fill="rgb(242,56,20)" fg:x="2453" fg:w="1"/><text x="83.5720%" y="1167.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="83.3220%" y="1141" width="0.0340%" height="15" fill="rgb(247,132,33)" fg:x="2453" fg:w="1"/><text x="83.5720%" y="1151.50"></text></g><g><title>cfree (1 samples, 0.03%)</title><rect x="83.3220%" y="1125" width="0.0340%" height="15" fill="rgb(208,149,11)" fg:x="2453" fg:w="1"/><text x="83.5720%" y="1135.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="83.3220%" y="1109" width="0.0340%" height="15" fill="rgb(211,33,11)" fg:x="2453" fg:w="1"/><text x="83.5720%" y="1119.50"></text></g><g><title>__lll_lock_wait_private (1 samples, 0.03%)</title><rect x="83.3220%" y="1093" width="0.0340%" height="15" fill="rgb(221,29,38)" fg:x="2453" fg:w="1"/><text x="83.5720%" y="1103.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="83.3220%" y="1077" width="0.0340%" height="15" fill="rgb(206,182,49)" fg:x="2453" fg:w="1"/><text x="83.5720%" y="1087.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="83.3220%" y="1061" width="0.0340%" height="15" fill="rgb(216,140,1)" fg:x="2453" fg:w="1"/><text x="83.5720%" y="1071.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="83.3220%" y="1045" width="0.0340%" height="15" fill="rgb(232,57,40)" fg:x="2453" fg:w="1"/><text x="83.5720%" y="1055.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="83.3220%" y="1029" width="0.0340%" height="15" fill="rgb(224,186,18)" fg:x="2453" fg:w="1"/><text x="83.5720%" y="1039.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="83.3220%" y="1013" width="0.0340%" height="15" fill="rgb(215,121,11)" fg:x="2453" fg:w="1"/><text x="83.5720%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="83.3220%" y="997" width="0.0340%" height="15" fill="rgb(245,147,10)" fg:x="2453" fg:w="1"/><text x="83.5720%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="83.3220%" y="981" width="0.0340%" height="15" fill="rgb(238,153,13)" fg:x="2453" fg:w="1"/><text x="83.5720%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="83.3220%" y="965" width="0.0340%" height="15" fill="rgb(233,108,0)" fg:x="2453" fg:w="1"/><text x="83.5720%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="83.3220%" y="949" width="0.0340%" height="15" fill="rgb(212,157,17)" fg:x="2453" fg:w="1"/><text x="83.5720%" y="959.50"></text></g><g><title>game_re:disk$1 (2 samples, 0.07%)</title><rect x="83.3560%" y="1205" width="0.0679%" height="15" fill="rgb(225,213,38)" fg:x="2454" fg:w="2"/><text x="83.6060%" y="1215.50"></text></g><g><title>[libc.so.6] (2 samples, 0.07%)</title><rect x="83.3560%" y="1189" width="0.0679%" height="15" fill="rgb(248,16,11)" fg:x="2454" fg:w="2"/><text x="83.6060%" y="1199.50"></text></g><g><title>[libc.so.6] (2 samples, 0.07%)</title><rect x="83.3560%" y="1173" width="0.0679%" height="15" fill="rgb(241,33,4)" fg:x="2454" fg:w="2"/><text x="83.6060%" y="1183.50"></text></g><g><title>[libvulkan_radeon.so] (2 samples, 0.07%)</title><rect x="83.3560%" y="1157" width="0.0679%" height="15" fill="rgb(222,26,43)" fg:x="2454" fg:w="2"/><text x="83.6060%" y="1167.50"></text></g><g><title>[libvulkan_radeon.so] (2 samples, 0.07%)</title><rect x="83.3560%" y="1141" width="0.0679%" height="15" fill="rgb(243,29,36)" fg:x="2454" fg:w="2"/><text x="83.6060%" y="1151.50"></text></g><g><title>[libvulkan_radeon.so] (2 samples, 0.07%)</title><rect x="83.3560%" y="1125" width="0.0679%" height="15" fill="rgb(241,9,27)" fg:x="2454" fg:w="2"/><text x="83.6060%" y="1135.50"></text></g><g><title>open64 (2 samples, 0.07%)</title><rect x="83.3560%" y="1109" width="0.0679%" height="15" fill="rgb(205,117,26)" fg:x="2454" fg:w="2"/><text x="83.6060%" y="1119.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="83.3560%" y="1093" width="0.0679%" height="15" fill="rgb(209,80,39)" fg:x="2454" fg:w="2"/><text x="83.6060%" y="1103.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="83.3560%" y="1077" width="0.0679%" height="15" fill="rgb(239,155,6)" fg:x="2454" fg:w="2"/><text x="83.6060%" y="1087.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="83.3560%" y="1061" width="0.0679%" height="15" fill="rgb(212,104,12)" fg:x="2454" fg:w="2"/><text x="83.6060%" y="1071.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="83.3560%" y="1045" width="0.0679%" height="15" fill="rgb(234,204,3)" fg:x="2454" fg:w="2"/><text x="83.6060%" y="1055.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="83.3560%" y="1029" width="0.0679%" height="15" fill="rgb(251,218,7)" fg:x="2454" fg:w="2"/><text x="83.6060%" y="1039.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="83.3560%" y="1013" width="0.0679%" height="15" fill="rgb(221,81,32)" fg:x="2454" fg:w="2"/><text x="83.6060%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="83.3899%" y="997" width="0.0340%" height="15" fill="rgb(214,152,26)" fg:x="2455" fg:w="1"/><text x="83.6399%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="83.3899%" y="981" width="0.0340%" height="15" fill="rgb(223,22,3)" fg:x="2455" fg:w="1"/><text x="83.6399%" y="991.50"></text></g><g><title>[libvulkan_radeon.so] (6 samples, 0.20%)</title><rect x="83.4239%" y="1125" width="0.2038%" height="15" fill="rgb(207,174,7)" fg:x="2456" fg:w="6"/><text x="83.6739%" y="1135.50"></text></g><g><title>open64 (6 samples, 0.20%)</title><rect x="83.4239%" y="1109" width="0.2038%" height="15" fill="rgb(224,19,52)" fg:x="2456" fg:w="6"/><text x="83.6739%" y="1119.50"></text></g><g><title>[unknown] (6 samples, 0.20%)</title><rect x="83.4239%" y="1093" width="0.2038%" height="15" fill="rgb(228,24,14)" fg:x="2456" fg:w="6"/><text x="83.6739%" y="1103.50"></text></g><g><title>[unknown] (6 samples, 0.20%)</title><rect x="83.4239%" y="1077" width="0.2038%" height="15" fill="rgb(230,153,43)" fg:x="2456" fg:w="6"/><text x="83.6739%" y="1087.50"></text></g><g><title>[unknown] (6 samples, 0.20%)</title><rect x="83.4239%" y="1061" width="0.2038%" height="15" fill="rgb(231,106,12)" fg:x="2456" fg:w="6"/><text x="83.6739%" y="1071.50"></text></g><g><title>[unknown] (5 samples, 0.17%)</title><rect x="83.4579%" y="1045" width="0.1698%" height="15" fill="rgb(215,92,2)" fg:x="2457" fg:w="5"/><text x="83.7079%" y="1055.50"></text></g><g><title>[unknown] (5 samples, 0.17%)</title><rect x="83.4579%" y="1029" width="0.1698%" height="15" fill="rgb(249,143,25)" fg:x="2457" fg:w="5"/><text x="83.7079%" y="1039.50"></text></g><g><title>[unknown] (5 samples, 0.17%)</title><rect x="83.4579%" y="1013" width="0.1698%" height="15" fill="rgb(252,7,35)" fg:x="2457" fg:w="5"/><text x="83.7079%" y="1023.50"></text></g><g><title>[unknown] (5 samples, 0.17%)</title><rect x="83.4579%" y="997" width="0.1698%" height="15" fill="rgb(216,69,40)" fg:x="2457" fg:w="5"/><text x="83.7079%" y="1007.50"></text></g><g><title>[unknown] (4 samples, 0.14%)</title><rect x="83.4918%" y="981" width="0.1359%" height="15" fill="rgb(240,36,33)" fg:x="2458" fg:w="4"/><text x="83.7418%" y="991.50"></text></g><g><title>[unknown] (4 samples, 0.14%)</title><rect x="83.4918%" y="965" width="0.1359%" height="15" fill="rgb(231,128,14)" fg:x="2458" fg:w="4"/><text x="83.7418%" y="975.50"></text></g><g><title>[unknown] (4 samples, 0.14%)</title><rect x="83.4918%" y="949" width="0.1359%" height="15" fill="rgb(245,143,14)" fg:x="2458" fg:w="4"/><text x="83.7418%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="83.5938%" y="933" width="0.0340%" height="15" fill="rgb(222,130,28)" fg:x="2461" fg:w="1"/><text x="83.8438%" y="943.50"></text></g><g><title>game_re:disk$2 (7 samples, 0.24%)</title><rect x="83.4239%" y="1205" width="0.2378%" height="15" fill="rgb(212,10,48)" fg:x="2456" fg:w="7"/><text x="83.6739%" y="1215.50"></text></g><g><title>[libc.so.6] (7 samples, 0.24%)</title><rect x="83.4239%" y="1189" width="0.2378%" height="15" fill="rgb(254,118,45)" fg:x="2456" fg:w="7"/><text x="83.6739%" y="1199.50"></text></g><g><title>[libc.so.6] (7 samples, 0.24%)</title><rect x="83.4239%" y="1173" width="0.2378%" height="15" fill="rgb(228,6,45)" fg:x="2456" fg:w="7"/><text x="83.6739%" y="1183.50"></text></g><g><title>[libvulkan_radeon.so] (7 samples, 0.24%)</title><rect x="83.4239%" y="1157" width="0.2378%" height="15" fill="rgb(241,18,35)" fg:x="2456" fg:w="7"/><text x="83.6739%" y="1167.50"></text></g><g><title>[libvulkan_radeon.so] (7 samples, 0.24%)</title><rect x="83.4239%" y="1141" width="0.2378%" height="15" fill="rgb(227,214,53)" fg:x="2456" fg:w="7"/><text x="83.6739%" y="1151.50"></text></g><g><title>cfree (1 samples, 0.03%)</title><rect x="83.6277%" y="1125" width="0.0340%" height="15" fill="rgb(224,107,51)" fg:x="2462" fg:w="1"/><text x="83.8777%" y="1135.50"></text></g><g><title>__lll_lock_wake_private (1 samples, 0.03%)</title><rect x="83.6277%" y="1109" width="0.0340%" height="15" fill="rgb(248,60,28)" fg:x="2462" fg:w="1"/><text x="83.8777%" y="1119.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="83.6277%" y="1093" width="0.0340%" height="15" fill="rgb(249,101,23)" fg:x="2462" fg:w="1"/><text x="83.8777%" y="1103.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="83.6277%" y="1077" width="0.0340%" height="15" fill="rgb(228,51,19)" fg:x="2462" fg:w="1"/><text x="83.8777%" y="1087.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="83.6277%" y="1061" width="0.0340%" height="15" fill="rgb(213,20,6)" fg:x="2462" fg:w="1"/><text x="83.8777%" y="1071.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="83.6277%" y="1045" width="0.0340%" height="15" fill="rgb(212,124,10)" fg:x="2462" fg:w="1"/><text x="83.8777%" y="1055.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="83.6277%" y="1029" width="0.0340%" height="15" fill="rgb(248,3,40)" fg:x="2462" fg:w="1"/><text x="83.8777%" y="1039.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="83.6277%" y="1013" width="0.0340%" height="15" fill="rgb(223,178,23)" fg:x="2462" fg:w="1"/><text x="83.8777%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="83.6277%" y="997" width="0.0340%" height="15" fill="rgb(240,132,45)" fg:x="2462" fg:w="1"/><text x="83.8777%" y="1007.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="83.6617%" y="1109" width="0.0340%" height="15" fill="rgb(245,164,36)" fg:x="2463" fg:w="1"/><text x="83.9117%" y="1119.50"></text></g><g><title>__asprintf_chk (1 samples, 0.03%)</title><rect x="83.6617%" y="1093" width="0.0340%" height="15" fill="rgb(231,188,53)" fg:x="2463" fg:w="1"/><text x="83.9117%" y="1103.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="83.6617%" y="1077" width="0.0340%" height="15" fill="rgb(237,198,39)" fg:x="2463" fg:w="1"/><text x="83.9117%" y="1087.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="83.6617%" y="1061" width="0.0340%" height="15" fill="rgb(223,120,35)" fg:x="2463" fg:w="1"/><text x="83.9117%" y="1071.50"></text></g><g><title>strlen@plt (1 samples, 0.03%)</title><rect x="83.6617%" y="1045" width="0.0340%" height="15" fill="rgb(253,107,49)" fg:x="2463" fg:w="1"/><text x="83.9117%" y="1055.50"></text></g><g><title>game_re:disk$3 (2 samples, 0.07%)</title><rect x="83.6617%" y="1205" width="0.0679%" height="15" fill="rgb(216,44,31)" fg:x="2463" fg:w="2"/><text x="83.9117%" y="1215.50"></text></g><g><title>[libc.so.6] (2 samples, 0.07%)</title><rect x="83.6617%" y="1189" width="0.0679%" height="15" fill="rgb(253,87,21)" fg:x="2463" fg:w="2"/><text x="83.9117%" y="1199.50"></text></g><g><title>[libc.so.6] (2 samples, 0.07%)</title><rect x="83.6617%" y="1173" width="0.0679%" height="15" fill="rgb(226,18,2)" fg:x="2463" fg:w="2"/><text x="83.9117%" y="1183.50"></text></g><g><title>[libvulkan_radeon.so] (2 samples, 0.07%)</title><rect x="83.6617%" y="1157" width="0.0679%" height="15" fill="rgb(216,8,46)" fg:x="2463" fg:w="2"/><text x="83.9117%" y="1167.50"></text></g><g><title>[libvulkan_radeon.so] (2 samples, 0.07%)</title><rect x="83.6617%" y="1141" width="0.0679%" height="15" fill="rgb(226,140,39)" fg:x="2463" fg:w="2"/><text x="83.9117%" y="1151.50"></text></g><g><title>[libvulkan_radeon.so] (2 samples, 0.07%)</title><rect x="83.6617%" y="1125" width="0.0679%" height="15" fill="rgb(221,194,54)" fg:x="2463" fg:w="2"/><text x="83.9117%" y="1135.50"></text></g><g><title>open64 (1 samples, 0.03%)</title><rect x="83.6957%" y="1109" width="0.0340%" height="15" fill="rgb(213,92,11)" fg:x="2464" fg:w="1"/><text x="83.9457%" y="1119.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="83.6957%" y="1093" width="0.0340%" height="15" fill="rgb(229,162,46)" fg:x="2464" fg:w="1"/><text x="83.9457%" y="1103.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="83.6957%" y="1077" width="0.0340%" height="15" fill="rgb(214,111,36)" fg:x="2464" fg:w="1"/><text x="83.9457%" y="1087.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="83.6957%" y="1061" width="0.0340%" height="15" fill="rgb(207,6,21)" fg:x="2464" fg:w="1"/><text x="83.9457%" y="1071.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="83.6957%" y="1045" width="0.0340%" height="15" fill="rgb(213,127,38)" fg:x="2464" fg:w="1"/><text x="83.9457%" y="1055.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="83.6957%" y="1029" width="0.0340%" height="15" fill="rgb(238,118,32)" fg:x="2464" fg:w="1"/><text x="83.9457%" y="1039.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="83.6957%" y="1013" width="0.0340%" height="15" fill="rgb(240,139,39)" fg:x="2464" fg:w="1"/><text x="83.9457%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="83.6957%" y="997" width="0.0340%" height="15" fill="rgb(235,10,37)" fg:x="2464" fg:w="1"/><text x="83.9457%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="83.6957%" y="981" width="0.0340%" height="15" fill="rgb(249,171,38)" fg:x="2464" fg:w="1"/><text x="83.9457%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="83.6957%" y="965" width="0.0340%" height="15" fill="rgb(242,144,32)" fg:x="2464" fg:w="1"/><text x="83.9457%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="83.6957%" y="949" width="0.0340%" height="15" fill="rgb(217,117,21)" fg:x="2464" fg:w="1"/><text x="83.9457%" y="959.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2 samples, 0.07%)</title><rect x="83.7296%" y="1157" width="0.0679%" height="15" fill="rgb(249,87,1)" fg:x="2465" fg:w="2"/><text x="83.9796%" y="1167.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2 samples, 0.07%)</title><rect x="83.7296%" y="1141" width="0.0679%" height="15" fill="rgb(248,196,48)" fg:x="2465" fg:w="2"/><text x="83.9796%" y="1151.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.03%)</title><rect x="83.7636%" y="1125" width="0.0340%" height="15" fill="rgb(251,206,33)" fg:x="2466" fg:w="1"/><text x="84.0136%" y="1135.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.03%)</title><rect x="83.7636%" y="1109" width="0.0340%" height="15" fill="rgb(232,141,28)" fg:x="2466" fg:w="1"/><text x="84.0136%" y="1119.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.03%)</title><rect x="83.7636%" y="1093" width="0.0340%" height="15" fill="rgb(209,167,14)" fg:x="2466" fg:w="1"/><text x="84.0136%" y="1103.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.03%)</title><rect x="83.7636%" y="1077" width="0.0340%" height="15" fill="rgb(225,11,50)" fg:x="2466" fg:w="1"/><text x="84.0136%" y="1087.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.03%)</title><rect x="83.7636%" y="1061" width="0.0340%" height="15" fill="rgb(209,50,20)" fg:x="2466" fg:w="1"/><text x="84.0136%" y="1071.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.03%)</title><rect x="83.7636%" y="1045" width="0.0340%" height="15" fill="rgb(212,17,46)" fg:x="2466" fg:w="1"/><text x="84.0136%" y="1055.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.03%)</title><rect x="83.7636%" y="1029" width="0.0340%" height="15" fill="rgb(216,101,39)" fg:x="2466" fg:w="1"/><text x="84.0136%" y="1039.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="83.7636%" y="1013" width="0.0340%" height="15" fill="rgb(212,228,48)" fg:x="2466" fg:w="1"/><text x="84.0136%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="83.7636%" y="997" width="0.0340%" height="15" fill="rgb(250,6,50)" fg:x="2466" fg:w="1"/><text x="84.0136%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="83.7636%" y="981" width="0.0340%" height="15" fill="rgb(250,160,48)" fg:x="2466" fg:w="1"/><text x="84.0136%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="83.7636%" y="965" width="0.0340%" height="15" fill="rgb(244,216,33)" fg:x="2466" fg:w="1"/><text x="84.0136%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="83.7636%" y="949" width="0.0340%" height="15" fill="rgb(207,157,5)" fg:x="2466" fg:w="1"/><text x="84.0136%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="83.7636%" y="933" width="0.0340%" height="15" fill="rgb(228,199,8)" fg:x="2466" fg:w="1"/><text x="84.0136%" y="943.50"></text></g><g><title>[ld-linux-x86-64.so.2] (6 samples, 0.20%)</title><rect x="83.7296%" y="1173" width="0.2038%" height="15" fill="rgb(227,80,20)" fg:x="2465" fg:w="6"/><text x="83.9796%" y="1183.50"></text></g><g><title>[unknown] (4 samples, 0.14%)</title><rect x="83.7976%" y="1157" width="0.1359%" height="15" fill="rgb(222,9,33)" fg:x="2467" fg:w="4"/><text x="84.0476%" y="1167.50"></text></g><g><title>[unknown] (4 samples, 0.14%)</title><rect x="83.7976%" y="1141" width="0.1359%" height="15" fill="rgb(239,44,28)" fg:x="2467" fg:w="4"/><text x="84.0476%" y="1151.50"></text></g><g><title>[unknown] (4 samples, 0.14%)</title><rect x="83.7976%" y="1125" width="0.1359%" height="15" fill="rgb(249,187,43)" fg:x="2467" fg:w="4"/><text x="84.0476%" y="1135.50"></text></g><g><title>[unknown] (3 samples, 0.10%)</title><rect x="83.8315%" y="1109" width="0.1019%" height="15" fill="rgb(216,141,28)" fg:x="2468" fg:w="3"/><text x="84.0815%" y="1119.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="83.8655%" y="1093" width="0.0679%" height="15" fill="rgb(230,154,53)" fg:x="2469" fg:w="2"/><text x="84.1155%" y="1103.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="83.8655%" y="1077" width="0.0679%" height="15" fill="rgb(227,82,4)" fg:x="2469" fg:w="2"/><text x="84.1155%" y="1087.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="83.8655%" y="1061" width="0.0679%" height="15" fill="rgb(220,107,16)" fg:x="2469" fg:w="2"/><text x="84.1155%" y="1071.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="83.8655%" y="1045" width="0.0679%" height="15" fill="rgb(207,187,2)" fg:x="2469" fg:w="2"/><text x="84.1155%" y="1055.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="83.8655%" y="1029" width="0.0679%" height="15" fill="rgb(210,162,52)" fg:x="2469" fg:w="2"/><text x="84.1155%" y="1039.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="83.8655%" y="1013" width="0.0679%" height="15" fill="rgb(217,216,49)" fg:x="2469" fg:w="2"/><text x="84.1155%" y="1023.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="83.8655%" y="997" width="0.0679%" height="15" fill="rgb(218,146,49)" fg:x="2469" fg:w="2"/><text x="84.1155%" y="1007.50"></text></g><g><title>[ld-linux-x86-64.so.2] (7 samples, 0.24%)</title><rect x="83.7296%" y="1189" width="0.2378%" height="15" fill="rgb(216,55,40)" fg:x="2465" fg:w="7"/><text x="83.9796%" y="1199.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="83.9334%" y="1173" width="0.0340%" height="15" fill="rgb(208,196,21)" fg:x="2471" fg:w="1"/><text x="84.1834%" y="1183.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="83.9334%" y="1157" width="0.0340%" height="15" fill="rgb(242,117,42)" fg:x="2471" fg:w="1"/><text x="84.1834%" y="1167.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="83.9334%" y="1141" width="0.0340%" height="15" fill="rgb(210,11,23)" fg:x="2471" fg:w="1"/><text x="84.1834%" y="1151.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="83.9334%" y="1125" width="0.0340%" height="15" fill="rgb(217,110,2)" fg:x="2471" fg:w="1"/><text x="84.1834%" y="1135.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="83.9334%" y="1109" width="0.0340%" height="15" fill="rgb(229,77,54)" fg:x="2471" fg:w="1"/><text x="84.1834%" y="1119.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="85.1902%" y="1045" width="0.0340%" height="15" fill="rgb(218,53,16)" fg:x="2508" fg:w="1"/><text x="85.4402%" y="1055.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="85.1902%" y="1029" width="0.0340%" height="15" fill="rgb(215,38,13)" fg:x="2508" fg:w="1"/><text x="85.4402%" y="1039.50"></text></g><g><title>[libvulkan_radeon.so] (2 samples, 0.07%)</title><rect x="85.2242%" y="1045" width="0.0679%" height="15" fill="rgb(235,42,18)" fg:x="2509" fg:w="2"/><text x="85.4742%" y="1055.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="85.2582%" y="1029" width="0.0340%" height="15" fill="rgb(219,66,54)" fg:x="2510" fg:w="1"/><text x="85.5082%" y="1039.50"></text></g><g><title>[libvulkan_radeon.so] (4 samples, 0.14%)</title><rect x="85.1902%" y="1061" width="0.1359%" height="15" fill="rgb(222,205,4)" fg:x="2508" fg:w="4"/><text x="85.4402%" y="1071.50"></text></g><g><title>getenv (1 samples, 0.03%)</title><rect x="85.2921%" y="1045" width="0.0340%" height="15" fill="rgb(227,213,46)" fg:x="2511" fg:w="1"/><text x="85.5421%" y="1055.50"></text></g><g><title>[libvulkan_radeon.so] (64 samples, 2.17%)</title><rect x="84.1712%" y="1109" width="2.1739%" height="15" fill="rgb(250,145,42)" fg:x="2478" fg:w="64"/><text x="84.4212%" y="1119.50">[..</text></g><g><title>[libvulkan_radeon.so] (64 samples, 2.17%)</title><rect x="84.1712%" y="1093" width="2.1739%" height="15" fill="rgb(219,15,2)" fg:x="2478" fg:w="64"/><text x="84.4212%" y="1103.50">[..</text></g><g><title>[libvulkan_radeon.so] (34 samples, 1.15%)</title><rect x="85.1902%" y="1077" width="1.1549%" height="15" fill="rgb(231,181,52)" fg:x="2508" fg:w="34"/><text x="85.4402%" y="1087.50"></text></g><g><title>pthread_setaffinity_np (30 samples, 1.02%)</title><rect x="85.3261%" y="1061" width="1.0190%" height="15" fill="rgb(235,1,42)" fg:x="2512" fg:w="30"/><text x="85.5761%" y="1071.50"></text></g><g><title>[unknown] (29 samples, 0.99%)</title><rect x="85.3601%" y="1045" width="0.9851%" height="15" fill="rgb(249,88,27)" fg:x="2513" fg:w="29"/><text x="85.6101%" y="1055.50"></text></g><g><title>[unknown] (29 samples, 0.99%)</title><rect x="85.3601%" y="1029" width="0.9851%" height="15" fill="rgb(235,145,16)" fg:x="2513" fg:w="29"/><text x="85.6101%" y="1039.50"></text></g><g><title>[unknown] (29 samples, 0.99%)</title><rect x="85.3601%" y="1013" width="0.9851%" height="15" fill="rgb(237,114,19)" fg:x="2513" fg:w="29"/><text x="85.6101%" y="1023.50"></text></g><g><title>[unknown] (28 samples, 0.95%)</title><rect x="85.3940%" y="997" width="0.9511%" height="15" fill="rgb(238,51,50)" fg:x="2514" fg:w="28"/><text x="85.6440%" y="1007.50"></text></g><g><title>[unknown] (24 samples, 0.82%)</title><rect x="85.5299%" y="981" width="0.8152%" height="15" fill="rgb(205,194,25)" fg:x="2518" fg:w="24"/><text x="85.7799%" y="991.50"></text></g><g><title>[unknown] (14 samples, 0.48%)</title><rect x="85.8696%" y="965" width="0.4755%" height="15" fill="rgb(215,203,17)" fg:x="2528" fg:w="14"/><text x="86.1196%" y="975.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="86.2772%" y="949" width="0.0679%" height="15" fill="rgb(233,112,49)" fg:x="2540" fg:w="2"/><text x="86.5272%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="86.3111%" y="933" width="0.0340%" height="15" fill="rgb(241,130,26)" fg:x="2541" fg:w="1"/><text x="86.5611%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="86.3111%" y="917" width="0.0340%" height="15" fill="rgb(252,223,19)" fg:x="2541" fg:w="1"/><text x="86.5611%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="86.3111%" y="901" width="0.0340%" height="15" fill="rgb(211,95,25)" fg:x="2541" fg:w="1"/><text x="86.5611%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="86.3451%" y="1109" width="0.0340%" height="15" fill="rgb(251,182,27)" fg:x="2542" fg:w="1"/><text x="86.5951%" y="1119.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="86.3451%" y="1093" width="0.0340%" height="15" fill="rgb(238,24,4)" fg:x="2542" fg:w="1"/><text x="86.5951%" y="1103.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="86.3451%" y="1077" width="0.0340%" height="15" fill="rgb(224,220,25)" fg:x="2542" fg:w="1"/><text x="86.5951%" y="1087.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="86.3451%" y="1061" width="0.0340%" height="15" fill="rgb(239,133,26)" fg:x="2542" fg:w="1"/><text x="86.5951%" y="1071.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="86.3451%" y="1045" width="0.0340%" height="15" fill="rgb(211,94,48)" fg:x="2542" fg:w="1"/><text x="86.5951%" y="1055.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="86.3451%" y="1029" width="0.0340%" height="15" fill="rgb(239,87,6)" fg:x="2542" fg:w="1"/><text x="86.5951%" y="1039.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="86.3451%" y="1013" width="0.0340%" height="15" fill="rgb(227,62,0)" fg:x="2542" fg:w="1"/><text x="86.5951%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="86.3451%" y="997" width="0.0340%" height="15" fill="rgb(211,226,4)" fg:x="2542" fg:w="1"/><text x="86.5951%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="86.3451%" y="981" width="0.0340%" height="15" fill="rgb(253,38,52)" fg:x="2542" fg:w="1"/><text x="86.5951%" y="991.50"></text></g><g><title>[libc.so.6] (66 samples, 2.24%)</title><rect x="84.1712%" y="1125" width="2.2418%" height="15" fill="rgb(229,126,40)" fg:x="2478" fg:w="66"/><text x="84.4212%" y="1135.50">[..</text></g><g><title>_pthread_cleanup_push (1 samples, 0.03%)</title><rect x="86.3791%" y="1109" width="0.0340%" height="15" fill="rgb(229,165,44)" fg:x="2543" fg:w="1"/><text x="86.6291%" y="1119.50"></text></g><g><title>pthread_setaffinity_np (2 samples, 0.07%)</title><rect x="86.4130%" y="1109" width="0.0679%" height="15" fill="rgb(247,95,47)" fg:x="2544" fg:w="2"/><text x="86.6630%" y="1119.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="86.4130%" y="1093" width="0.0679%" height="15" fill="rgb(216,140,30)" fg:x="2544" fg:w="2"/><text x="86.6630%" y="1103.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="86.4130%" y="1077" width="0.0679%" height="15" fill="rgb(246,214,8)" fg:x="2544" fg:w="2"/><text x="86.6630%" y="1087.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="86.4130%" y="1061" width="0.0679%" height="15" fill="rgb(227,224,15)" fg:x="2544" fg:w="2"/><text x="86.6630%" y="1071.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="86.4130%" y="1045" width="0.0679%" height="15" fill="rgb(233,175,4)" fg:x="2544" fg:w="2"/><text x="86.6630%" y="1055.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="86.4130%" y="1029" width="0.0679%" height="15" fill="rgb(221,66,45)" fg:x="2544" fg:w="2"/><text x="86.6630%" y="1039.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="86.4470%" y="1013" width="0.0340%" height="15" fill="rgb(221,178,18)" fg:x="2545" fg:w="1"/><text x="86.6970%" y="1023.50"></text></g><g><title>[libvulkan_radeon.so] (3 samples, 0.10%)</title><rect x="86.4130%" y="1125" width="0.1019%" height="15" fill="rgb(213,81,29)" fg:x="2544" fg:w="3"/><text x="86.6630%" y="1135.50"></text></g><g><title>pthread_setname_np (1 samples, 0.03%)</title><rect x="86.4810%" y="1109" width="0.0340%" height="15" fill="rgb(220,89,49)" fg:x="2546" fg:w="1"/><text x="86.7310%" y="1119.50"></text></g><g><title>prctl (1 samples, 0.03%)</title><rect x="86.4810%" y="1093" width="0.0340%" height="15" fill="rgb(227,60,33)" fg:x="2546" fg:w="1"/><text x="86.7310%" y="1103.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="86.4810%" y="1077" width="0.0340%" height="15" fill="rgb(205,113,12)" fg:x="2546" fg:w="1"/><text x="86.7310%" y="1087.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="86.4810%" y="1061" width="0.0340%" height="15" fill="rgb(211,32,1)" fg:x="2546" fg:w="1"/><text x="86.7310%" y="1071.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="86.4810%" y="1045" width="0.0340%" height="15" fill="rgb(246,2,12)" fg:x="2546" fg:w="1"/><text x="86.7310%" y="1055.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="86.4810%" y="1029" width="0.0340%" height="15" fill="rgb(243,37,27)" fg:x="2546" fg:w="1"/><text x="86.7310%" y="1039.50"></text></g><g><title>__snprintf_chk (2 samples, 0.07%)</title><rect x="86.5149%" y="1125" width="0.0679%" height="15" fill="rgb(248,211,31)" fg:x="2547" fg:w="2"/><text x="86.7649%" y="1135.50"></text></g><g><title>[libc.so.6] (2 samples, 0.07%)</title><rect x="86.5149%" y="1109" width="0.0679%" height="15" fill="rgb(242,146,47)" fg:x="2547" fg:w="2"/><text x="86.7649%" y="1119.50"></text></g><g><title>[libc.so.6] (2 samples, 0.07%)</title><rect x="86.5149%" y="1093" width="0.0679%" height="15" fill="rgb(206,70,20)" fg:x="2547" fg:w="2"/><text x="86.7649%" y="1103.50"></text></g><g><title>strlen@plt (1 samples, 0.03%)</title><rect x="86.5489%" y="1077" width="0.0340%" height="15" fill="rgb(215,10,51)" fg:x="2548" fg:w="1"/><text x="86.7989%" y="1087.50"></text></g><g><title>[libvulkan_radeon.so] (73 samples, 2.48%)</title><rect x="84.1372%" y="1141" width="2.4796%" height="15" fill="rgb(243,178,53)" fg:x="2477" fg:w="73"/><text x="84.3872%" y="1151.50">[l..</text></g><g><title>setpriority (1 samples, 0.03%)</title><rect x="86.5829%" y="1125" width="0.0340%" height="15" fill="rgb(233,221,20)" fg:x="2549" fg:w="1"/><text x="86.8329%" y="1135.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="86.5829%" y="1109" width="0.0340%" height="15" fill="rgb(218,95,35)" fg:x="2549" fg:w="1"/><text x="86.8329%" y="1119.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="86.5829%" y="1093" width="0.0340%" height="15" fill="rgb(229,13,5)" fg:x="2549" fg:w="1"/><text x="86.8329%" y="1103.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="86.5829%" y="1077" width="0.0340%" height="15" fill="rgb(252,164,30)" fg:x="2549" fg:w="1"/><text x="86.8329%" y="1087.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="86.5829%" y="1061" width="0.0340%" height="15" fill="rgb(232,68,36)" fg:x="2549" fg:w="1"/><text x="86.8329%" y="1071.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="86.7188%" y="1077" width="0.0340%" height="15" fill="rgb(219,59,54)" fg:x="2553" fg:w="1"/><text x="86.9688%" y="1087.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="86.7188%" y="1061" width="0.0340%" height="15" fill="rgb(250,92,33)" fg:x="2553" fg:w="1"/><text x="86.9688%" y="1071.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="86.7188%" y="1045" width="0.0340%" height="15" fill="rgb(229,162,54)" fg:x="2553" fg:w="1"/><text x="86.9688%" y="1055.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="86.7188%" y="1029" width="0.0340%" height="15" fill="rgb(244,114,52)" fg:x="2553" fg:w="1"/><text x="86.9688%" y="1039.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="86.7188%" y="1013" width="0.0340%" height="15" fill="rgb(212,211,43)" fg:x="2553" fg:w="1"/><text x="86.9688%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="86.7188%" y="997" width="0.0340%" height="15" fill="rgb(226,147,8)" fg:x="2553" fg:w="1"/><text x="86.9688%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="86.7188%" y="981" width="0.0340%" height="15" fill="rgb(226,23,13)" fg:x="2553" fg:w="1"/><text x="86.9688%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="86.7188%" y="965" width="0.0340%" height="15" fill="rgb(240,63,4)" fg:x="2553" fg:w="1"/><text x="86.9688%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="86.7188%" y="949" width="0.0340%" height="15" fill="rgb(221,1,32)" fg:x="2553" fg:w="1"/><text x="86.9688%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="86.7188%" y="933" width="0.0340%" height="15" fill="rgb(242,117,10)" fg:x="2553" fg:w="1"/><text x="86.9688%" y="943.50"></text></g><g><title>__mmap (2 samples, 0.07%)</title><rect x="86.7527%" y="1077" width="0.0679%" height="15" fill="rgb(249,172,44)" fg:x="2554" fg:w="2"/><text x="87.0027%" y="1087.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="86.7527%" y="1061" width="0.0679%" height="15" fill="rgb(244,46,45)" fg:x="2554" fg:w="2"/><text x="87.0027%" y="1071.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="86.7527%" y="1045" width="0.0679%" height="15" fill="rgb(206,43,17)" fg:x="2554" fg:w="2"/><text x="87.0027%" y="1055.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="86.7527%" y="1029" width="0.0679%" height="15" fill="rgb(239,218,39)" fg:x="2554" fg:w="2"/><text x="87.0027%" y="1039.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="86.7527%" y="1013" width="0.0679%" height="15" fill="rgb(208,169,54)" fg:x="2554" fg:w="2"/><text x="87.0027%" y="1023.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="86.7527%" y="997" width="0.0679%" height="15" fill="rgb(247,25,42)" fg:x="2554" fg:w="2"/><text x="87.0027%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="86.7867%" y="981" width="0.0340%" height="15" fill="rgb(226,23,31)" fg:x="2555" fg:w="1"/><text x="87.0367%" y="991.50"></text></g><g><title>__mprotect (1 samples, 0.03%)</title><rect x="86.8207%" y="1077" width="0.0340%" height="15" fill="rgb(247,16,28)" fg:x="2556" fg:w="1"/><text x="87.0707%" y="1087.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="86.8207%" y="1061" width="0.0340%" height="15" fill="rgb(231,147,38)" fg:x="2556" fg:w="1"/><text x="87.0707%" y="1071.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="86.8207%" y="1045" width="0.0340%" height="15" fill="rgb(253,81,48)" fg:x="2556" fg:w="1"/><text x="87.0707%" y="1055.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="86.8207%" y="1029" width="0.0340%" height="15" fill="rgb(249,222,43)" fg:x="2556" fg:w="1"/><text x="87.0707%" y="1039.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="86.8207%" y="1013" width="0.0340%" height="15" fill="rgb(221,3,27)" fg:x="2556" fg:w="1"/><text x="87.0707%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="86.8207%" y="997" width="0.0340%" height="15" fill="rgb(228,180,5)" fg:x="2556" fg:w="1"/><text x="87.0707%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="86.8207%" y="981" width="0.0340%" height="15" fill="rgb(227,131,42)" fg:x="2556" fg:w="1"/><text x="87.0707%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="86.8207%" y="965" width="0.0340%" height="15" fill="rgb(212,3,39)" fg:x="2556" fg:w="1"/><text x="87.0707%" y="975.50"></text></g><g><title>[libvulkan_radeon.so] (83 samples, 2.82%)</title><rect x="84.1033%" y="1157" width="2.8193%" height="15" fill="rgb(226,45,5)" fg:x="2476" fg:w="83"/><text x="84.3533%" y="1167.50">[l..</text></g><g><title>cfree (9 samples, 0.31%)</title><rect x="86.6168%" y="1141" width="0.3057%" height="15" fill="rgb(215,167,45)" fg:x="2550" fg:w="9"/><text x="86.8668%" y="1151.50"></text></g><g><title>[libc.so.6] (9 samples, 0.31%)</title><rect x="86.6168%" y="1125" width="0.3057%" height="15" fill="rgb(250,218,53)" fg:x="2550" fg:w="9"/><text x="86.8668%" y="1135.50"></text></g><g><title>[libc.so.6] (9 samples, 0.31%)</title><rect x="86.6168%" y="1109" width="0.3057%" height="15" fill="rgb(207,140,0)" fg:x="2550" fg:w="9"/><text x="86.8668%" y="1119.50"></text></g><g><title>[libc.so.6] (8 samples, 0.27%)</title><rect x="86.6508%" y="1093" width="0.2717%" height="15" fill="rgb(238,133,51)" fg:x="2551" fg:w="8"/><text x="86.9008%" y="1103.50"></text></g><g><title>__munmap (2 samples, 0.07%)</title><rect x="86.8546%" y="1077" width="0.0679%" height="15" fill="rgb(218,203,53)" fg:x="2557" fg:w="2"/><text x="87.1046%" y="1087.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="86.8546%" y="1061" width="0.0679%" height="15" fill="rgb(226,184,25)" fg:x="2557" fg:w="2"/><text x="87.1046%" y="1071.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="86.8546%" y="1045" width="0.0679%" height="15" fill="rgb(231,121,21)" fg:x="2557" fg:w="2"/><text x="87.1046%" y="1055.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="86.8546%" y="1029" width="0.0679%" height="15" fill="rgb(251,14,34)" fg:x="2557" fg:w="2"/><text x="87.1046%" y="1039.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="86.8546%" y="1013" width="0.0679%" height="15" fill="rgb(249,193,11)" fg:x="2557" fg:w="2"/><text x="87.1046%" y="1023.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="86.8546%" y="997" width="0.0679%" height="15" fill="rgb(220,172,37)" fg:x="2557" fg:w="2"/><text x="87.1046%" y="1007.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="86.8546%" y="981" width="0.0679%" height="15" fill="rgb(231,229,43)" fg:x="2557" fg:w="2"/><text x="87.1046%" y="991.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="86.8546%" y="965" width="0.0679%" height="15" fill="rgb(250,161,5)" fg:x="2557" fg:w="2"/><text x="87.1046%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="86.8886%" y="949" width="0.0340%" height="15" fill="rgb(218,225,18)" fg:x="2558" fg:w="1"/><text x="87.1386%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="86.8886%" y="933" width="0.0340%" height="15" fill="rgb(245,45,42)" fg:x="2558" fg:w="1"/><text x="87.1386%" y="943.50"></text></g><g><title>[unknown] (24 samples, 0.82%)</title><rect x="86.9226%" y="1157" width="0.8152%" height="15" fill="rgb(211,115,1)" fg:x="2559" fg:w="24"/><text x="87.1726%" y="1167.50"></text></g><g><title>[unknown] (16 samples, 0.54%)</title><rect x="87.1943%" y="1141" width="0.5435%" height="15" fill="rgb(248,133,52)" fg:x="2567" fg:w="16"/><text x="87.4443%" y="1151.50"></text></g><g><title>[unknown] (15 samples, 0.51%)</title><rect x="87.2283%" y="1125" width="0.5095%" height="15" fill="rgb(238,100,21)" fg:x="2568" fg:w="15"/><text x="87.4783%" y="1135.50"></text></g><g><title>[unknown] (12 samples, 0.41%)</title><rect x="87.3302%" y="1109" width="0.4076%" height="15" fill="rgb(247,144,11)" fg:x="2571" fg:w="12"/><text x="87.5802%" y="1119.50"></text></g><g><title>[unknown] (5 samples, 0.17%)</title><rect x="87.5679%" y="1093" width="0.1698%" height="15" fill="rgb(206,164,16)" fg:x="2578" fg:w="5"/><text x="87.8179%" y="1103.50"></text></g><g><title>__sigsetjmp (3 samples, 0.10%)</title><rect x="87.7378%" y="1157" width="0.1019%" height="15" fill="rgb(222,34,3)" fg:x="2583" fg:w="3"/><text x="87.9878%" y="1167.50"></text></g><g><title>prctl (8 samples, 0.27%)</title><rect x="87.8736%" y="1045" width="0.2717%" height="15" fill="rgb(248,82,4)" fg:x="2587" fg:w="8"/><text x="88.1236%" y="1055.50"></text></g><g><title>[unknown] (8 samples, 0.27%)</title><rect x="87.8736%" y="1029" width="0.2717%" height="15" fill="rgb(228,81,46)" fg:x="2587" fg:w="8"/><text x="88.1236%" y="1039.50"></text></g><g><title>[unknown] (8 samples, 0.27%)</title><rect x="87.8736%" y="1013" width="0.2717%" height="15" fill="rgb(227,67,47)" fg:x="2587" fg:w="8"/><text x="88.1236%" y="1023.50"></text></g><g><title>[unknown] (8 samples, 0.27%)</title><rect x="87.8736%" y="997" width="0.2717%" height="15" fill="rgb(215,93,53)" fg:x="2587" fg:w="8"/><text x="88.1236%" y="1007.50"></text></g><g><title>[unknown] (6 samples, 0.20%)</title><rect x="87.9416%" y="981" width="0.2038%" height="15" fill="rgb(248,194,39)" fg:x="2589" fg:w="6"/><text x="88.1916%" y="991.50"></text></g><g><title>[unknown] (4 samples, 0.14%)</title><rect x="88.0095%" y="965" width="0.1359%" height="15" fill="rgb(215,5,19)" fg:x="2591" fg:w="4"/><text x="88.2595%" y="975.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="88.0774%" y="949" width="0.0679%" height="15" fill="rgb(226,215,51)" fg:x="2593" fg:w="2"/><text x="88.3274%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="88.1114%" y="933" width="0.0340%" height="15" fill="rgb(225,56,26)" fg:x="2594" fg:w="1"/><text x="88.3614%" y="943.50"></text></g><g><title>std::sys::unix::thread::Thread::set_name (9 samples, 0.31%)</title><rect x="87.8736%" y="1077" width="0.3057%" height="15" fill="rgb(222,75,29)" fg:x="2587" fg:w="9"/><text x="88.1236%" y="1087.50"></text></g><g><title>pthread_setname_np (9 samples, 0.31%)</title><rect x="87.8736%" y="1061" width="0.3057%" height="15" fill="rgb(236,139,6)" fg:x="2587" fg:w="9"/><text x="88.1236%" y="1071.50"></text></g><g><title>strlen@plt (1 samples, 0.03%)</title><rect x="88.1454%" y="1045" width="0.0340%" height="15" fill="rgb(223,137,36)" fg:x="2595" fg:w="1"/><text x="88.3954%" y="1055.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (10 samples, 0.34%)</title><rect x="87.8736%" y="1109" width="0.3397%" height="15" fill="rgb(226,99,2)" fg:x="2587" fg:w="10"/><text x="88.1236%" y="1119.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (10 samples, 0.34%)</title><rect x="87.8736%" y="1093" width="0.3397%" height="15" fill="rgb(206,133,23)" fg:x="2587" fg:w="10"/><text x="88.1236%" y="1103.50"></text></g><g><title>std::thread::Thread::cname (1 samples, 0.03%)</title><rect x="88.1793%" y="1077" width="0.0340%" height="15" fill="rgb(243,173,15)" fg:x="2596" fg:w="1"/><text x="88.4293%" y="1087.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_deref (1 samples, 0.03%)</title><rect x="88.1793%" y="1061" width="0.0340%" height="15" fill="rgb(228,69,28)" fg:x="2596" fg:w="1"/><text x="88.4293%" y="1071.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.03%)</title><rect x="88.1793%" y="1045" width="0.0340%" height="15" fill="rgb(212,51,22)" fg:x="2596" fg:w="1"/><text x="88.4293%" y="1055.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (11 samples, 0.37%)</title><rect x="87.8736%" y="1141" width="0.3736%" height="15" fill="rgb(227,113,0)" fg:x="2587" fg:w="11"/><text x="88.1236%" y="1151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (11 samples, 0.37%)</title><rect x="87.8736%" y="1125" width="0.3736%" height="15" fill="rgb(252,84,27)" fg:x="2587" fg:w="11"/><text x="88.1236%" y="1135.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (1 samples, 0.03%)</title><rect x="88.2133%" y="1109" width="0.0340%" height="15" fill="rgb(223,145,39)" fg:x="2597" fg:w="1"/><text x="88.4633%" y="1119.50"></text></g><g><title>sigaltstack (1 samples, 0.03%)</title><rect x="88.2133%" y="1093" width="0.0340%" height="15" fill="rgb(239,219,30)" fg:x="2597" fg:w="1"/><text x="88.4633%" y="1103.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="88.2133%" y="1077" width="0.0340%" height="15" fill="rgb(224,196,39)" fg:x="2597" fg:w="1"/><text x="88.4633%" y="1087.50"></text></g><g><title>sigaltstack (10 samples, 0.34%)</title><rect x="88.2473%" y="1109" width="0.3397%" height="15" fill="rgb(205,35,43)" fg:x="2598" fg:w="10"/><text x="88.4973%" y="1119.50"></text></g><g><title>[unknown] (8 samples, 0.27%)</title><rect x="88.3152%" y="1093" width="0.2717%" height="15" fill="rgb(228,201,21)" fg:x="2600" fg:w="8"/><text x="88.5652%" y="1103.50"></text></g><g><title>[unknown] (8 samples, 0.27%)</title><rect x="88.3152%" y="1077" width="0.2717%" height="15" fill="rgb(237,118,16)" fg:x="2600" fg:w="8"/><text x="88.5652%" y="1087.50"></text></g><g><title>[unknown] (8 samples, 0.27%)</title><rect x="88.3152%" y="1061" width="0.2717%" height="15" fill="rgb(241,17,19)" fg:x="2600" fg:w="8"/><text x="88.5652%" y="1071.50"></text></g><g><title>[unknown] (3 samples, 0.10%)</title><rect x="88.4851%" y="1045" width="0.1019%" height="15" fill="rgb(214,10,25)" fg:x="2605" fg:w="3"/><text x="88.7351%" y="1055.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="88.5530%" y="1029" width="0.0340%" height="15" fill="rgb(238,37,29)" fg:x="2607" fg:w="1"/><text x="88.8030%" y="1039.50"></text></g><g><title>__mmap (30 samples, 1.02%)</title><rect x="88.5870%" y="1077" width="1.0190%" height="15" fill="rgb(253,83,25)" fg:x="2608" fg:w="30"/><text x="88.8370%" y="1087.50"></text></g><g><title>[unknown] (30 samples, 1.02%)</title><rect x="88.5870%" y="1061" width="1.0190%" height="15" fill="rgb(234,192,12)" fg:x="2608" fg:w="30"/><text x="88.8370%" y="1071.50"></text></g><g><title>[unknown] (30 samples, 1.02%)</title><rect x="88.5870%" y="1045" width="1.0190%" height="15" fill="rgb(241,216,45)" fg:x="2608" fg:w="30"/><text x="88.8370%" y="1055.50"></text></g><g><title>[unknown] (29 samples, 0.99%)</title><rect x="88.6209%" y="1029" width="0.9851%" height="15" fill="rgb(242,22,33)" fg:x="2609" fg:w="29"/><text x="88.8709%" y="1039.50"></text></g><g><title>[unknown] (25 samples, 0.85%)</title><rect x="88.7568%" y="1013" width="0.8492%" height="15" fill="rgb(231,105,49)" fg:x="2613" fg:w="25"/><text x="89.0068%" y="1023.50"></text></g><g><title>[unknown] (22 samples, 0.75%)</title><rect x="88.8587%" y="997" width="0.7473%" height="15" fill="rgb(218,204,15)" fg:x="2616" fg:w="22"/><text x="89.1087%" y="1007.50"></text></g><g><title>[unknown] (17 samples, 0.58%)</title><rect x="89.0285%" y="981" width="0.5774%" height="15" fill="rgb(235,138,41)" fg:x="2621" fg:w="17"/><text x="89.2785%" y="991.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="89.5380%" y="965" width="0.0679%" height="15" fill="rgb(246,0,9)" fg:x="2636" fg:w="2"/><text x="89.7880%" y="975.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="89.5380%" y="949" width="0.0679%" height="15" fill="rgb(210,74,4)" fg:x="2636" fg:w="2"/><text x="89.7880%" y="959.50"></text></g><g><title>__mprotect (17 samples, 0.58%)</title><rect x="89.6060%" y="1077" width="0.5774%" height="15" fill="rgb(250,60,41)" fg:x="2638" fg:w="17"/><text x="89.8560%" y="1087.50"></text></g><g><title>[unknown] (17 samples, 0.58%)</title><rect x="89.6060%" y="1061" width="0.5774%" height="15" fill="rgb(220,115,12)" fg:x="2638" fg:w="17"/><text x="89.8560%" y="1071.50"></text></g><g><title>[unknown] (17 samples, 0.58%)</title><rect x="89.6060%" y="1045" width="0.5774%" height="15" fill="rgb(237,100,13)" fg:x="2638" fg:w="17"/><text x="89.8560%" y="1055.50"></text></g><g><title>[unknown] (17 samples, 0.58%)</title><rect x="89.6060%" y="1029" width="0.5774%" height="15" fill="rgb(213,55,26)" fg:x="2638" fg:w="17"/><text x="89.8560%" y="1039.50"></text></g><g><title>[unknown] (17 samples, 0.58%)</title><rect x="89.6060%" y="1013" width="0.5774%" height="15" fill="rgb(216,17,4)" fg:x="2638" fg:w="17"/><text x="89.8560%" y="1023.50"></text></g><g><title>[unknown] (17 samples, 0.58%)</title><rect x="89.6060%" y="997" width="0.5774%" height="15" fill="rgb(220,153,47)" fg:x="2638" fg:w="17"/><text x="89.8560%" y="1007.50"></text></g><g><title>[unknown] (17 samples, 0.58%)</title><rect x="89.6060%" y="981" width="0.5774%" height="15" fill="rgb(215,131,9)" fg:x="2638" fg:w="17"/><text x="89.8560%" y="991.50"></text></g><g><title>[unknown] (15 samples, 0.51%)</title><rect x="89.6739%" y="965" width="0.5095%" height="15" fill="rgb(233,46,42)" fg:x="2640" fg:w="15"/><text x="89.9239%" y="975.50"></text></g><g><title>[unknown] (3 samples, 0.10%)</title><rect x="90.0815%" y="949" width="0.1019%" height="15" fill="rgb(226,86,7)" fg:x="2652" fg:w="3"/><text x="90.3315%" y="959.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="90.1155%" y="933" width="0.0679%" height="15" fill="rgb(239,226,21)" fg:x="2653" fg:w="2"/><text x="90.3655%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="90.1495%" y="917" width="0.0340%" height="15" fill="rgb(244,137,22)" fg:x="2654" fg:w="1"/><text x="90.3995%" y="927.50"></text></g><g><title>[libc.so.6] (185 samples, 6.28%)</title><rect x="83.9674%" y="1189" width="6.2840%" height="15" fill="rgb(211,139,35)" fg:x="2472" fg:w="185"/><text x="84.2174%" y="1199.50">[libc.so..</text></g><g><title>[libc.so.6] (185 samples, 6.28%)</title><rect x="83.9674%" y="1173" width="6.2840%" height="15" fill="rgb(214,62,50)" fg:x="2472" fg:w="185"/><text x="84.2174%" y="1183.50">[libc.so..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (71 samples, 2.41%)</title><rect x="87.8397%" y="1157" width="2.4117%" height="15" fill="rgb(212,113,44)" fg:x="2586" fg:w="71"/><text x="88.0897%" y="1167.50">st..</text></g><g><title>std::sys::unix::stack_overflow::Handler::new (59 samples, 2.00%)</title><rect x="88.2473%" y="1141" width="2.0041%" height="15" fill="rgb(226,150,43)" fg:x="2598" fg:w="59"/><text x="88.4973%" y="1151.50">s..</text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (59 samples, 2.00%)</title><rect x="88.2473%" y="1125" width="2.0041%" height="15" fill="rgb(250,71,37)" fg:x="2598" fg:w="59"/><text x="88.4973%" y="1135.50">s..</text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (49 samples, 1.66%)</title><rect x="88.5870%" y="1109" width="1.6644%" height="15" fill="rgb(219,76,19)" fg:x="2608" fg:w="49"/><text x="88.8370%" y="1119.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (49 samples, 1.66%)</title><rect x="88.5870%" y="1093" width="1.6644%" height="15" fill="rgb(250,39,11)" fg:x="2608" fg:w="49"/><text x="88.8370%" y="1103.50"></text></g><g><title>std::sys::unix::os::page_size (2 samples, 0.07%)</title><rect x="90.1834%" y="1077" width="0.0679%" height="15" fill="rgb(230,64,31)" fg:x="2655" fg:w="2"/><text x="90.4334%" y="1087.50"></text></g><g><title>__sysconf (2 samples, 0.07%)</title><rect x="90.1834%" y="1061" width="0.0679%" height="15" fill="rgb(208,222,23)" fg:x="2655" fg:w="2"/><text x="90.4334%" y="1071.50"></text></g><g><title>__getpagesize (1 samples, 0.03%)</title><rect x="90.2174%" y="1045" width="0.0340%" height="15" fill="rgb(227,125,18)" fg:x="2656" fg:w="1"/><text x="90.4674%" y="1055.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;A&gt;::insert_barriers_from_tracker (2 samples, 0.07%)</title><rect x="90.3872%" y="1125" width="0.0679%" height="15" fill="rgb(234,210,9)" fg:x="2661" fg:w="2"/><text x="90.6372%" y="1135.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;A&gt;::drain_barriers (2 samples, 0.07%)</title><rect x="90.3872%" y="1109" width="0.0679%" height="15" fill="rgb(217,127,24)" fg:x="2661" fg:w="2"/><text x="90.6372%" y="1119.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::transition_buffers (2 samples, 0.07%)</title><rect x="90.3872%" y="1093" width="0.0679%" height="15" fill="rgb(239,141,48)" fg:x="2661" fg:w="2"/><text x="90.6372%" y="1103.50"></text></g><g><title>ash::device::Device::cmd_pipeline_barrier (2 samples, 0.07%)</title><rect x="90.3872%" y="1077" width="0.0679%" height="15" fill="rgb(227,109,8)" fg:x="2661" fg:w="2"/><text x="90.6372%" y="1087.50"></text></g><g><title>[libvulkan_radeon.so] (2 samples, 0.07%)</title><rect x="90.3872%" y="1061" width="0.0679%" height="15" fill="rgb(235,184,23)" fg:x="2661" fg:w="2"/><text x="90.6372%" y="1071.50"></text></g><g><title>[libvulkan_radeon.so] (2 samples, 0.07%)</title><rect x="90.3872%" y="1045" width="0.0679%" height="15" fill="rgb(227,226,48)" fg:x="2661" fg:w="2"/><text x="90.6372%" y="1055.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="90.4212%" y="1029" width="0.0340%" height="15" fill="rgb(206,150,11)" fg:x="2662" fg:w="1"/><text x="90.6712%" y="1039.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::queue_submit (3 samples, 0.10%)</title><rect x="90.3872%" y="1173" width="0.1019%" height="15" fill="rgb(254,2,33)" fg:x="2661" fg:w="3"/><text x="90.6372%" y="1183.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::queue_submit (3 samples, 0.10%)</title><rect x="90.3872%" y="1157" width="0.1019%" height="15" fill="rgb(243,160,20)" fg:x="2661" fg:w="3"/><text x="90.6372%" y="1167.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (3 samples, 0.10%)</title><rect x="90.3872%" y="1141" width="0.1019%" height="15" fill="rgb(218,208,30)" fg:x="2661" fg:w="3"/><text x="90.6372%" y="1151.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::maintain (1 samples, 0.03%)</title><rect x="90.4552%" y="1125" width="0.0340%" height="15" fill="rgb(224,120,49)" fg:x="2663" fg:w="1"/><text x="90.7052%" y="1135.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;A&gt;::triage_suspected (1 samples, 0.03%)</title><rect x="90.4552%" y="1109" width="0.0340%" height="15" fill="rgb(246,12,2)" fg:x="2663" fg:w="1"/><text x="90.7052%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::BindGroupStates&lt;wgpu_hal::gles::Api&gt;&gt; (1 samples, 0.03%)</title><rect x="90.4552%" y="1093" width="0.0340%" height="15" fill="rgb(236,117,3)" fg:x="2663" fg:w="1"/><text x="90.7052%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::texture::TextureBindGroupState&lt;wgpu_hal::gles::Api&gt;&gt; (1 samples, 0.03%)</title><rect x="90.4552%" y="1077" width="0.0340%" height="15" fill="rgb(216,128,52)" fg:x="2663" fg:w="1"/><text x="90.7052%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(wgpu_core::id::Valid&lt;wgpu_core::id::Id&lt;wgpu_core::resource::Texture&lt;wgpu_hal::empty::Api&gt;&gt;&gt;,core::option::Option&lt;wgpu_core::track::texture::TextureSelector&gt;,wgpu_core::RefCount,wgpu_hal::TextureUses)&gt;&gt; (1 samples, 0.03%)</title><rect x="90.4552%" y="1061" width="0.0340%" height="15" fill="rgb(246,145,19)" fg:x="2663" fg:w="1"/><text x="90.7052%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(wgpu_core::id::Valid&lt;wgpu_core::id::Id&lt;wgpu_core::resource::Texture&lt;wgpu_hal::empty::Api&gt;&gt;&gt;,core::option::Option&lt;wgpu_core::track::texture::TextureSelector&gt;,wgpu_core::RefCount,wgpu_hal::TextureUses)&gt;&gt; (1 samples, 0.03%)</title><rect x="90.4552%" y="1045" width="0.0340%" height="15" fill="rgb(222,11,46)" fg:x="2663" fg:w="1"/><text x="90.7052%" y="1055.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="90.4552%" y="1029" width="0.0340%" height="15" fill="rgb(245,82,36)" fg:x="2663" fg:w="1"/><text x="90.7052%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.03%)</title><rect x="90.4552%" y="1013" width="0.0340%" height="15" fill="rgb(250,73,51)" fg:x="2663" fg:w="1"/><text x="90.7052%" y="1023.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.03%)</title><rect x="90.4552%" y="997" width="0.0340%" height="15" fill="rgb(221,189,23)" fg:x="2663" fg:w="1"/><text x="90.7052%" y="1007.50"></text></g><g><title>cfree (1 samples, 0.03%)</title><rect x="90.4552%" y="981" width="0.0340%" height="15" fill="rgb(210,33,7)" fg:x="2663" fg:w="1"/><text x="90.7052%" y="991.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="90.4552%" y="965" width="0.0340%" height="15" fill="rgb(210,107,22)" fg:x="2663" fg:w="1"/><text x="90.7052%" y="975.50"></text></g><g><title>wgpu::Surface::get_current_texture (1 samples, 0.03%)</title><rect x="90.4891%" y="469" width="0.0340%" height="15" fill="rgb(222,116,37)" fg:x="2664" fg:w="1"/><text x="90.7391%" y="479.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::surface_get_current_texture (1 samples, 0.03%)</title><rect x="90.4891%" y="453" width="0.0340%" height="15" fill="rgb(254,17,48)" fg:x="2664" fg:w="1"/><text x="90.7391%" y="463.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::surface_get_current_texture (1 samples, 0.03%)</title><rect x="90.4891%" y="437" width="0.0340%" height="15" fill="rgb(224,36,32)" fg:x="2664" fg:w="1"/><text x="90.7391%" y="447.50"></text></g><g><title>wgpu_core::present::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_get_current_texture (1 samples, 0.03%)</title><rect x="90.4891%" y="421" width="0.0340%" height="15" fill="rgb(232,90,46)" fg:x="2664" fg:w="1"/><text x="90.7391%" y="431.50"></text></g><g><title>wgpu_hal::vulkan::instance::&lt;impl wgpu_hal::Surface&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Surface&gt;::acquire_texture (1 samples, 0.03%)</title><rect x="90.4891%" y="405" width="0.0340%" height="15" fill="rgb(241,66,40)" fg:x="2664" fg:w="1"/><text x="90.7391%" y="415.50"></text></g><g><title>ash::device::Device::wait_for_fences (1 samples, 0.03%)</title><rect x="90.4891%" y="389" width="0.0340%" height="15" fill="rgb(249,184,29)" fg:x="2664" fg:w="1"/><text x="90.7391%" y="399.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="90.4891%" y="373" width="0.0340%" height="15" fill="rgb(231,181,1)" fg:x="2664" fg:w="1"/><text x="90.7391%" y="383.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="90.4891%" y="357" width="0.0340%" height="15" fill="rgb(224,94,2)" fg:x="2664" fg:w="1"/><text x="90.7391%" y="367.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="90.4891%" y="341" width="0.0340%" height="15" fill="rgb(229,170,15)" fg:x="2664" fg:w="1"/><text x="90.7391%" y="351.50"></text></g><g><title>amdgpu_cs_query_reset_state2 (1 samples, 0.03%)</title><rect x="90.4891%" y="325" width="0.0340%" height="15" fill="rgb(240,127,35)" fg:x="2664" fg:w="1"/><text x="90.7391%" y="335.50"></text></g><g><title>drmCommandWriteRead (1 samples, 0.03%)</title><rect x="90.4891%" y="309" width="0.0340%" height="15" fill="rgb(248,196,34)" fg:x="2664" fg:w="1"/><text x="90.7391%" y="319.50"></text></g><g><title>drmIoctl (1 samples, 0.03%)</title><rect x="90.4891%" y="293" width="0.0340%" height="15" fill="rgb(236,137,7)" fg:x="2664" fg:w="1"/><text x="90.7391%" y="303.50"></text></g><g><title>ioctl (1 samples, 0.03%)</title><rect x="90.4891%" y="277" width="0.0340%" height="15" fill="rgb(235,127,16)" fg:x="2664" fg:w="1"/><text x="90.7391%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="90.4891%" y="261" width="0.0340%" height="15" fill="rgb(250,192,54)" fg:x="2664" fg:w="1"/><text x="90.7391%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="90.4891%" y="245" width="0.0340%" height="15" fill="rgb(218,98,20)" fg:x="2664" fg:w="1"/><text x="90.7391%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="90.4891%" y="229" width="0.0340%" height="15" fill="rgb(230,176,47)" fg:x="2664" fg:w="1"/><text x="90.7391%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="90.4891%" y="213" width="0.0340%" height="15" fill="rgb(244,2,33)" fg:x="2664" fg:w="1"/><text x="90.7391%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="90.4891%" y="197" width="0.0340%" height="15" fill="rgb(231,100,17)" fg:x="2664" fg:w="1"/><text x="90.7391%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="90.4891%" y="181" width="0.0340%" height="15" fill="rgb(245,23,12)" fg:x="2664" fg:w="1"/><text x="90.7391%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="90.4891%" y="165" width="0.0340%" height="15" fill="rgb(249,55,22)" fg:x="2664" fg:w="1"/><text x="90.7391%" y="175.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="90.5231%" y="341" width="0.0340%" height="15" fill="rgb(207,134,9)" fg:x="2665" fg:w="1"/><text x="90.7731%" y="351.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="90.5231%" y="325" width="0.0340%" height="15" fill="rgb(218,134,0)" fg:x="2665" fg:w="1"/><text x="90.7731%" y="335.50"></text></g><g><title>drmSyncobjWait (1 samples, 0.03%)</title><rect x="90.5231%" y="309" width="0.0340%" height="15" fill="rgb(213,212,33)" fg:x="2665" fg:w="1"/><text x="90.7731%" y="319.50"></text></g><g><title>drmIoctl (1 samples, 0.03%)</title><rect x="90.5231%" y="293" width="0.0340%" height="15" fill="rgb(252,106,18)" fg:x="2665" fg:w="1"/><text x="90.7731%" y="303.50"></text></g><g><title>ioctl (1 samples, 0.03%)</title><rect x="90.5231%" y="277" width="0.0340%" height="15" fill="rgb(208,126,42)" fg:x="2665" fg:w="1"/><text x="90.7731%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="90.5231%" y="261" width="0.0340%" height="15" fill="rgb(246,175,29)" fg:x="2665" fg:w="1"/><text x="90.7731%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="90.5231%" y="245" width="0.0340%" height="15" fill="rgb(215,13,50)" fg:x="2665" fg:w="1"/><text x="90.7731%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="90.5231%" y="229" width="0.0340%" height="15" fill="rgb(216,172,15)" fg:x="2665" fg:w="1"/><text x="90.7731%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="90.5231%" y="213" width="0.0340%" height="15" fill="rgb(212,103,13)" fg:x="2665" fg:w="1"/><text x="90.7731%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="90.5231%" y="197" width="0.0340%" height="15" fill="rgb(231,171,36)" fg:x="2665" fg:w="1"/><text x="90.7731%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="90.5231%" y="181" width="0.0340%" height="15" fill="rgb(250,123,20)" fg:x="2665" fg:w="1"/><text x="90.7731%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="90.5231%" y="165" width="0.0340%" height="15" fill="rgb(212,53,50)" fg:x="2665" fg:w="1"/><text x="90.7731%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="90.5231%" y="149" width="0.0340%" height="15" fill="rgb(243,54,12)" fg:x="2665" fg:w="1"/><text x="90.7731%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="90.5231%" y="133" width="0.0340%" height="15" fill="rgb(234,101,34)" fg:x="2665" fg:w="1"/><text x="90.7731%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="90.5231%" y="117" width="0.0340%" height="15" fill="rgb(254,67,22)" fg:x="2665" fg:w="1"/><text x="90.7731%" y="127.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor as bevy_ecs::schedule::executor::SystemExecutor&gt;::run (4 samples, 0.14%)</title><rect x="90.4891%" y="1173" width="0.1359%" height="15" fill="rgb(250,35,47)" fg:x="2664" fg:w="4"/><text x="90.7391%" y="1183.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope_with_executor (4 samples, 0.14%)</title><rect x="90.4891%" y="1157" width="0.1359%" height="15" fill="rgb(226,126,38)" fg:x="2664" fg:w="4"/><text x="90.7391%" y="1167.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4 samples, 0.14%)</title><rect x="90.4891%" y="1141" width="0.1359%" height="15" fill="rgb(216,138,53)" fg:x="2664" fg:w="4"/><text x="90.7391%" y="1151.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4 samples, 0.14%)</title><rect x="90.4891%" y="1125" width="0.1359%" height="15" fill="rgb(246,199,43)" fg:x="2664" fg:w="4"/><text x="90.7391%" y="1135.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope_with_executor::{{closure}} (4 samples, 0.14%)</title><rect x="90.4891%" y="1109" width="0.1359%" height="15" fill="rgb(232,125,11)" fg:x="2664" fg:w="4"/><text x="90.7391%" y="1119.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope_with_executor_inner (4 samples, 0.14%)</title><rect x="90.4891%" y="1093" width="0.1359%" height="15" fill="rgb(218,219,45)" fg:x="2664" fg:w="4"/><text x="90.7391%" y="1103.50"></text></g><g><title>futures_lite::future::block_on (4 samples, 0.14%)</title><rect x="90.4891%" y="1077" width="0.1359%" height="15" fill="rgb(216,102,54)" fg:x="2664" fg:w="4"/><text x="90.7391%" y="1087.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4 samples, 0.14%)</title><rect x="90.4891%" y="1061" width="0.1359%" height="15" fill="rgb(250,228,7)" fg:x="2664" fg:w="4"/><text x="90.7391%" y="1071.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4 samples, 0.14%)</title><rect x="90.4891%" y="1045" width="0.1359%" height="15" fill="rgb(226,125,25)" fg:x="2664" fg:w="4"/><text x="90.7391%" y="1055.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (4 samples, 0.14%)</title><rect x="90.4891%" y="1029" width="0.1359%" height="15" fill="rgb(224,165,27)" fg:x="2664" fg:w="4"/><text x="90.7391%" y="1039.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope_with_executor_inner::{{closure}} (4 samples, 0.14%)</title><rect x="90.4891%" y="1013" width="0.1359%" height="15" fill="rgb(233,86,3)" fg:x="2664" fg:w="4"/><text x="90.7391%" y="1023.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::execute_scope::{{closure}} (4 samples, 0.14%)</title><rect x="90.4891%" y="997" width="0.1359%" height="15" fill="rgb(228,116,20)" fg:x="2664" fg:w="4"/><text x="90.7391%" y="1007.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (4 samples, 0.14%)</title><rect x="90.4891%" y="981" width="0.1359%" height="15" fill="rgb(209,192,17)" fg:x="2664" fg:w="4"/><text x="90.7391%" y="991.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::execute_scope::{{closure}}::{{closure}} (4 samples, 0.14%)</title><rect x="90.4891%" y="965" width="0.1359%" height="15" fill="rgb(224,88,34)" fg:x="2664" fg:w="4"/><text x="90.7391%" y="975.50"></text></g><g><title>&lt;futures_lite::future::CatchUnwind&lt;F&gt; as core::future::future::Future&gt;::poll (4 samples, 0.14%)</title><rect x="90.4891%" y="949" width="0.1359%" height="15" fill="rgb(233,38,6)" fg:x="2664" fg:w="4"/><text x="90.7391%" y="959.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.14%)</title><rect x="90.4891%" y="933" width="0.1359%" height="15" fill="rgb(212,59,30)" fg:x="2664" fg:w="4"/><text x="90.7391%" y="943.50"></text></g><g><title>std::panicking::try (4 samples, 0.14%)</title><rect x="90.4891%" y="917" width="0.1359%" height="15" fill="rgb(213,80,3)" fg:x="2664" fg:w="4"/><text x="90.7391%" y="927.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.14%)</title><rect x="90.4891%" y="901" width="0.1359%" height="15" fill="rgb(251,178,7)" fg:x="2664" fg:w="4"/><text x="90.7391%" y="911.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4 samples, 0.14%)</title><rect x="90.4891%" y="885" width="0.1359%" height="15" fill="rgb(213,154,26)" fg:x="2664" fg:w="4"/><text x="90.7391%" y="895.50"></text></g><g><title>&lt;futures_lite::future::CatchUnwind&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (4 samples, 0.14%)</title><rect x="90.4891%" y="869" width="0.1359%" height="15" fill="rgb(238,165,49)" fg:x="2664" fg:w="4"/><text x="90.7391%" y="879.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::future::future::Future&gt;::poll (4 samples, 0.14%)</title><rect x="90.4891%" y="853" width="0.1359%" height="15" fill="rgb(248,91,46)" fg:x="2664" fg:w="4"/><text x="90.7391%" y="863.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::execute_scope::{{closure}}::{{closure}}::{{closure}} (4 samples, 0.14%)</title><rect x="90.4891%" y="837" width="0.1359%" height="15" fill="rgb(244,21,52)" fg:x="2664" fg:w="4"/><text x="90.7391%" y="847.50"></text></g><g><title>bevy_tasks::thread_executor::ThreadExecutorTicker::tick::{{closure}} (4 samples, 0.14%)</title><rect x="90.4891%" y="821" width="0.1359%" height="15" fill="rgb(247,122,20)" fg:x="2664" fg:w="4"/><text x="90.7391%" y="831.50"></text></g><g><title>async_executor::Executor::tick::{{closure}} (4 samples, 0.14%)</title><rect x="90.4891%" y="805" width="0.1359%" height="15" fill="rgb(218,27,9)" fg:x="2664" fg:w="4"/><text x="90.7391%" y="815.50"></text></g><g><title>async_task::runnable::Runnable&lt;M&gt;::run (4 samples, 0.14%)</title><rect x="90.4891%" y="789" width="0.1359%" height="15" fill="rgb(246,7,6)" fg:x="2664" fg:w="4"/><text x="90.7391%" y="799.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::run (4 samples, 0.14%)</title><rect x="90.4891%" y="773" width="0.1359%" height="15" fill="rgb(227,135,54)" fg:x="2664" fg:w="4"/><text x="90.7391%" y="783.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (4 samples, 0.14%)</title><rect x="90.4891%" y="757" width="0.1359%" height="15" fill="rgb(247,14,11)" fg:x="2664" fg:w="4"/><text x="90.7391%" y="767.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::spawn_exclusive_system_task::{{closure}} (4 samples, 0.14%)</title><rect x="90.4891%" y="741" width="0.1359%" height="15" fill="rgb(206,149,34)" fg:x="2664" fg:w="4"/><text x="90.7391%" y="751.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.14%)</title><rect x="90.4891%" y="725" width="0.1359%" height="15" fill="rgb(227,228,4)" fg:x="2664" fg:w="4"/><text x="90.7391%" y="735.50"></text></g><g><title>std::panicking::try (4 samples, 0.14%)</title><rect x="90.4891%" y="709" width="0.1359%" height="15" fill="rgb(238,218,28)" fg:x="2664" fg:w="4"/><text x="90.7391%" y="719.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.14%)</title><rect x="90.4891%" y="693" width="0.1359%" height="15" fill="rgb(252,86,40)" fg:x="2664" fg:w="4"/><text x="90.7391%" y="703.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4 samples, 0.14%)</title><rect x="90.4891%" y="677" width="0.1359%" height="15" fill="rgb(251,225,11)" fg:x="2664" fg:w="4"/><text x="90.7391%" y="687.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4 samples, 0.14%)</title><rect x="90.4891%" y="661" width="0.1359%" height="15" fill="rgb(206,46,49)" fg:x="2664" fg:w="4"/><text x="90.7391%" y="671.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::spawn_exclusive_system_task::{{closure}}::{{closure}} (4 samples, 0.14%)</title><rect x="90.4891%" y="645" width="0.1359%" height="15" fill="rgb(245,128,24)" fg:x="2664" fg:w="4"/><text x="90.7391%" y="655.50"></text></g><g><title>&lt;bevy_ecs::system::exclusive_function_system::ExclusiveFunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::run (4 samples, 0.14%)</title><rect x="90.4891%" y="629" width="0.1359%" height="15" fill="rgb(219,177,34)" fg:x="2664" fg:w="4"/><text x="90.7391%" y="639.50"></text></g><g><title>&lt;Func as bevy_ecs::system::exclusive_function_system::ExclusiveSystemParamFunction&lt;fn() .&gt; Out&gt;&gt;::run (4 samples, 0.14%)</title><rect x="90.4891%" y="613" width="0.1359%" height="15" fill="rgb(218,60,48)" fg:x="2664" fg:w="4"/><text x="90.7391%" y="623.50"></text></g><g><title>&lt;Func as bevy_ecs::system::exclusive_function_system::ExclusiveSystemParamFunction&lt;fn() .&gt; Out&gt;&gt;::run::call_inner (4 samples, 0.14%)</title><rect x="90.4891%" y="597" width="0.1359%" height="15" fill="rgb(221,11,5)" fg:x="2664" fg:w="4"/><text x="90.7391%" y="607.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (4 samples, 0.14%)</title><rect x="90.4891%" y="581" width="0.1359%" height="15" fill="rgb(220,148,13)" fg:x="2664" fg:w="4"/><text x="90.7391%" y="591.50"></text></g><g><title>core::ops::function::FnMut::call_mut (4 samples, 0.14%)</title><rect x="90.4891%" y="565" width="0.1359%" height="15" fill="rgb(210,16,3)" fg:x="2664" fg:w="4"/><text x="90.7391%" y="575.50"></text></g><g><title>game_render::render_surfaces (4 samples, 0.14%)</title><rect x="90.4891%" y="549" width="0.1359%" height="15" fill="rgb(236,80,2)" fg:x="2664" fg:w="4"/><text x="90.7391%" y="559.50"></text></g><g><title>bevy_ecs::world::World::resource_scope (4 samples, 0.14%)</title><rect x="90.4891%" y="533" width="0.1359%" height="15" fill="rgb(239,129,19)" fg:x="2664" fg:w="4"/><text x="90.7391%" y="543.50"></text></g><g><title>game_render::render_surfaces::{{closure}} (4 samples, 0.14%)</title><rect x="90.4891%" y="517" width="0.1359%" height="15" fill="rgb(220,106,35)" fg:x="2664" fg:w="4"/><text x="90.7391%" y="527.50"></text></g><g><title>bevy_ecs::world::World::resource_scope (4 samples, 0.14%)</title><rect x="90.4891%" y="501" width="0.1359%" height="15" fill="rgb(252,139,45)" fg:x="2664" fg:w="4"/><text x="90.7391%" y="511.50"></text></g><g><title>game_render::render_surfaces::{{closure}}::{{closure}} (4 samples, 0.14%)</title><rect x="90.4891%" y="485" width="0.1359%" height="15" fill="rgb(229,8,36)" fg:x="2664" fg:w="4"/><text x="90.7391%" y="495.50"></text></g><g><title>wgpu::SurfaceTexture::present (3 samples, 0.10%)</title><rect x="90.5231%" y="469" width="0.1019%" height="15" fill="rgb(230,126,33)" fg:x="2665" fg:w="3"/><text x="90.7731%" y="479.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::surface_present (3 samples, 0.10%)</title><rect x="90.5231%" y="453" width="0.1019%" height="15" fill="rgb(239,140,21)" fg:x="2665" fg:w="3"/><text x="90.7731%" y="463.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::surface_present (3 samples, 0.10%)</title><rect x="90.5231%" y="437" width="0.1019%" height="15" fill="rgb(254,104,9)" fg:x="2665" fg:w="3"/><text x="90.7731%" y="447.50"></text></g><g><title>wgpu_core::present::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_present (3 samples, 0.10%)</title><rect x="90.5231%" y="421" width="0.1019%" height="15" fill="rgb(239,52,14)" fg:x="2665" fg:w="3"/><text x="90.7731%" y="431.50"></text></g><g><title>&lt;wgpu_hal::vulkan::Queue as wgpu_hal::Queue&lt;wgpu_hal::vulkan::Api&gt;&gt;::present (3 samples, 0.10%)</title><rect x="90.5231%" y="405" width="0.1019%" height="15" fill="rgb(208,227,44)" fg:x="2665" fg:w="3"/><text x="90.7731%" y="415.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::queue_present (3 samples, 0.10%)</title><rect x="90.5231%" y="389" width="0.1019%" height="15" fill="rgb(246,18,19)" fg:x="2665" fg:w="3"/><text x="90.7731%" y="399.50"></text></g><g><title>[libvulkan_radeon.so] (3 samples, 0.10%)</title><rect x="90.5231%" y="373" width="0.1019%" height="15" fill="rgb(235,228,25)" fg:x="2665" fg:w="3"/><text x="90.7731%" y="383.50"></text></g><g><title>[libvulkan_radeon.so] (3 samples, 0.10%)</title><rect x="90.5231%" y="357" width="0.1019%" height="15" fill="rgb(240,156,20)" fg:x="2665" fg:w="3"/><text x="90.7731%" y="367.50"></text></g><g><title>wl_proxy_marshal_flags (2 samples, 0.07%)</title><rect x="90.5571%" y="341" width="0.0679%" height="15" fill="rgb(224,8,20)" fg:x="2666" fg:w="2"/><text x="90.8071%" y="351.50"></text></g><g><title>wl_proxy_marshal_array_flags (2 samples, 0.07%)</title><rect x="90.5571%" y="325" width="0.0679%" height="15" fill="rgb(214,12,52)" fg:x="2666" fg:w="2"/><text x="90.8071%" y="335.50"></text></g><g><title>__libc_calloc (2 samples, 0.07%)</title><rect x="90.5571%" y="309" width="0.0679%" height="15" fill="rgb(211,220,47)" fg:x="2666" fg:w="2"/><text x="90.8071%" y="319.50"></text></g><g><title>&lt;bevy_ecs::system::exclusive_function_system::ExclusiveFunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::run (1 samples, 0.03%)</title><rect x="90.6250%" y="1173" width="0.0340%" height="15" fill="rgb(250,173,5)" fg:x="2668" fg:w="1"/><text x="90.8750%" y="1183.50"></text></g><g><title>&lt;Func as bevy_ecs::system::exclusive_function_system::ExclusiveSystemParamFunction&lt;fn(F0) .&gt; Out&gt;&gt;::run (1 samples, 0.03%)</title><rect x="90.6250%" y="1157" width="0.0340%" height="15" fill="rgb(250,125,52)" fg:x="2668" fg:w="1"/><text x="90.8750%" y="1167.50"></text></g><g><title>&lt;Func as bevy_ecs::system::exclusive_function_system::ExclusiveSystemParamFunction&lt;fn(F0) .&gt; Out&gt;&gt;::run::call_inner (1 samples, 0.03%)</title><rect x="90.6250%" y="1141" width="0.0340%" height="15" fill="rgb(209,133,18)" fg:x="2668" fg:w="1"/><text x="90.8750%" y="1151.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.03%)</title><rect x="90.6250%" y="1125" width="0.0340%" height="15" fill="rgb(216,173,22)" fg:x="2668" fg:w="1"/><text x="90.8750%" y="1135.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1 samples, 0.03%)</title><rect x="90.6250%" y="1109" width="0.0340%" height="15" fill="rgb(205,3,22)" fg:x="2668" fg:w="1"/><text x="90.8750%" y="1119.50"></text></g><g><title>bevy_app::CoreSchedule::outer_loop (1 samples, 0.03%)</title><rect x="90.6250%" y="1093" width="0.0340%" height="15" fill="rgb(248,22,20)" fg:x="2668" fg:w="1"/><text x="90.8750%" y="1103.50"></text></g><g><title>bevy_ecs::world::World::run_schedule (1 samples, 0.03%)</title><rect x="90.6250%" y="1077" width="0.0340%" height="15" fill="rgb(233,6,29)" fg:x="2668" fg:w="1"/><text x="90.8750%" y="1087.50"></text></g><g><title>bevy_ecs::world::World::run_schedule_ref (1 samples, 0.03%)</title><rect x="90.6250%" y="1061" width="0.0340%" height="15" fill="rgb(240,22,54)" fg:x="2668" fg:w="1"/><text x="90.8750%" y="1071.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor as bevy_ecs::schedule::executor::SystemExecutor&gt;::run (1 samples, 0.03%)</title><rect x="90.6250%" y="1045" width="0.0340%" height="15" fill="rgb(231,133,32)" fg:x="2668" fg:w="1"/><text x="90.8750%" y="1055.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope_with_executor (1 samples, 0.03%)</title><rect x="90.6250%" y="1029" width="0.0340%" height="15" fill="rgb(248,193,4)" fg:x="2668" fg:w="1"/><text x="90.8750%" y="1039.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.03%)</title><rect x="90.6250%" y="1013" width="0.0340%" height="15" fill="rgb(211,178,46)" fg:x="2668" fg:w="1"/><text x="90.8750%" y="1023.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.03%)</title><rect x="90.6250%" y="997" width="0.0340%" height="15" fill="rgb(224,5,42)" fg:x="2668" fg:w="1"/><text x="90.8750%" y="1007.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope_with_executor::{{closure}} (1 samples, 0.03%)</title><rect x="90.6250%" y="981" width="0.0340%" height="15" fill="rgb(239,176,25)" fg:x="2668" fg:w="1"/><text x="90.8750%" y="991.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope_with_executor_inner (1 samples, 0.03%)</title><rect x="90.6250%" y="965" width="0.0340%" height="15" fill="rgb(245,187,50)" fg:x="2668" fg:w="1"/><text x="90.8750%" y="975.50"></text></g><g><title>futures_lite::future::block_on (1 samples, 0.03%)</title><rect x="90.6250%" y="949" width="0.0340%" height="15" fill="rgb(248,24,15)" fg:x="2668" fg:w="1"/><text x="90.8750%" y="959.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.03%)</title><rect x="90.6250%" y="933" width="0.0340%" height="15" fill="rgb(205,166,13)" fg:x="2668" fg:w="1"/><text x="90.8750%" y="943.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.03%)</title><rect x="90.6250%" y="917" width="0.0340%" height="15" fill="rgb(208,114,23)" fg:x="2668" fg:w="1"/><text x="90.8750%" y="927.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (1 samples, 0.03%)</title><rect x="90.6250%" y="901" width="0.0340%" height="15" fill="rgb(239,127,18)" fg:x="2668" fg:w="1"/><text x="90.8750%" y="911.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope_with_executor_inner::{{closure}} (1 samples, 0.03%)</title><rect x="90.6250%" y="885" width="0.0340%" height="15" fill="rgb(219,154,28)" fg:x="2668" fg:w="1"/><text x="90.8750%" y="895.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::execute_scope::{{closure}} (1 samples, 0.03%)</title><rect x="90.6250%" y="869" width="0.0340%" height="15" fill="rgb(225,157,23)" fg:x="2668" fg:w="1"/><text x="90.8750%" y="879.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (1 samples, 0.03%)</title><rect x="90.6250%" y="853" width="0.0340%" height="15" fill="rgb(219,8,6)" fg:x="2668" fg:w="1"/><text x="90.8750%" y="863.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::execute_scope::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="90.6250%" y="837" width="0.0340%" height="15" fill="rgb(212,47,6)" fg:x="2668" fg:w="1"/><text x="90.8750%" y="847.50"></text></g><g><title>&lt;futures_lite::future::CatchUnwind&lt;F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.03%)</title><rect x="90.6250%" y="821" width="0.0340%" height="15" fill="rgb(224,190,4)" fg:x="2668" fg:w="1"/><text x="90.8750%" y="831.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.03%)</title><rect x="90.6250%" y="805" width="0.0340%" height="15" fill="rgb(239,183,29)" fg:x="2668" fg:w="1"/><text x="90.8750%" y="815.50"></text></g><g><title>std::panicking::try (1 samples, 0.03%)</title><rect x="90.6250%" y="789" width="0.0340%" height="15" fill="rgb(213,57,7)" fg:x="2668" fg:w="1"/><text x="90.8750%" y="799.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.03%)</title><rect x="90.6250%" y="773" width="0.0340%" height="15" fill="rgb(216,148,1)" fg:x="2668" fg:w="1"/><text x="90.8750%" y="783.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.03%)</title><rect x="90.6250%" y="757" width="0.0340%" height="15" fill="rgb(236,182,29)" fg:x="2668" fg:w="1"/><text x="90.8750%" y="767.50"></text></g><g><title>&lt;futures_lite::future::CatchUnwind&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (1 samples, 0.03%)</title><rect x="90.6250%" y="741" width="0.0340%" height="15" fill="rgb(244,120,48)" fg:x="2668" fg:w="1"/><text x="90.8750%" y="751.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.03%)</title><rect x="90.6250%" y="725" width="0.0340%" height="15" fill="rgb(206,71,34)" fg:x="2668" fg:w="1"/><text x="90.8750%" y="735.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::execute_scope::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="90.6250%" y="709" width="0.0340%" height="15" fill="rgb(242,32,6)" fg:x="2668" fg:w="1"/><text x="90.8750%" y="719.50"></text></g><g><title>bevy_tasks::thread_executor::ThreadExecutorTicker::tick::{{closure}} (1 samples, 0.03%)</title><rect x="90.6250%" y="693" width="0.0340%" height="15" fill="rgb(241,35,3)" fg:x="2668" fg:w="1"/><text x="90.8750%" y="703.50"></text></g><g><title>async_executor::Executor::tick::{{closure}} (1 samples, 0.03%)</title><rect x="90.6250%" y="677" width="0.0340%" height="15" fill="rgb(222,62,19)" fg:x="2668" fg:w="1"/><text x="90.8750%" y="687.50"></text></g><g><title>async_task::runnable::Runnable&lt;M&gt;::run (1 samples, 0.03%)</title><rect x="90.6250%" y="661" width="0.0340%" height="15" fill="rgb(223,110,41)" fg:x="2668" fg:w="1"/><text x="90.8750%" y="671.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::run (1 samples, 0.03%)</title><rect x="90.6250%" y="645" width="0.0340%" height="15" fill="rgb(208,224,4)" fg:x="2668" fg:w="1"/><text x="90.8750%" y="655.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (1 samples, 0.03%)</title><rect x="90.6250%" y="629" width="0.0340%" height="15" fill="rgb(241,137,19)" fg:x="2668" fg:w="1"/><text x="90.8750%" y="639.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::spawn_exclusive_system_task::{{closure}} (1 samples, 0.03%)</title><rect x="90.6250%" y="613" width="0.0340%" height="15" fill="rgb(244,24,17)" fg:x="2668" fg:w="1"/><text x="90.8750%" y="623.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.03%)</title><rect x="90.6250%" y="597" width="0.0340%" height="15" fill="rgb(245,178,49)" fg:x="2668" fg:w="1"/><text x="90.8750%" y="607.50"></text></g><g><title>std::panicking::try (1 samples, 0.03%)</title><rect x="90.6250%" y="581" width="0.0340%" height="15" fill="rgb(219,160,38)" fg:x="2668" fg:w="1"/><text x="90.8750%" y="591.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.03%)</title><rect x="90.6250%" y="565" width="0.0340%" height="15" fill="rgb(228,137,14)" fg:x="2668" fg:w="1"/><text x="90.8750%" y="575.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.03%)</title><rect x="90.6250%" y="549" width="0.0340%" height="15" fill="rgb(237,134,11)" fg:x="2668" fg:w="1"/><text x="90.8750%" y="559.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.03%)</title><rect x="90.6250%" y="533" width="0.0340%" height="15" fill="rgb(211,126,44)" fg:x="2668" fg:w="1"/><text x="90.8750%" y="543.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::spawn_exclusive_system_task::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="90.6250%" y="517" width="0.0340%" height="15" fill="rgb(226,171,33)" fg:x="2668" fg:w="1"/><text x="90.8750%" y="527.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::apply_system_buffers (1 samples, 0.03%)</title><rect x="90.6250%" y="501" width="0.0340%" height="15" fill="rgb(253,99,13)" fg:x="2668" fg:w="1"/><text x="90.8750%" y="511.50"></text></g><g><title>bevy_ecs::system::commands::_::&lt;impl bevy_ecs::system::system_param::SystemParam for bevy_ecs::system::commands::Commands&gt;::apply (1 samples, 0.03%)</title><rect x="90.6250%" y="485" width="0.0340%" height="15" fill="rgb(244,48,7)" fg:x="2668" fg:w="1"/><text x="90.8750%" y="495.50"></text></g><g><title>&lt;(P0,P1) as bevy_ecs::system::system_param::SystemParam&gt;::apply (1 samples, 0.03%)</title><rect x="90.6250%" y="469" width="0.0340%" height="15" fill="rgb(244,217,54)" fg:x="2668" fg:w="1"/><text x="90.8750%" y="479.50"></text></g><g><title>&lt;bevy_ecs::system::system_param::Deferred&lt;T&gt; as bevy_ecs::system::system_param::SystemParam&gt;::apply (1 samples, 0.03%)</title><rect x="90.6250%" y="453" width="0.0340%" height="15" fill="rgb(224,15,18)" fg:x="2668" fg:w="1"/><text x="90.8750%" y="463.50"></text></g><g><title>bevy_ecs::system::commands::&lt;impl bevy_ecs::system::system_param::SystemBuffer for bevy_ecs::system::commands::command_queue::CommandQueue&gt;::apply (1 samples, 0.03%)</title><rect x="90.6250%" y="437" width="0.0340%" height="15" fill="rgb(244,99,12)" fg:x="2668" fg:w="1"/><text x="90.8750%" y="447.50"></text></g><g><title>bevy_ecs::system::commands::command_queue::CommandQueue::apply (1 samples, 0.03%)</title><rect x="90.6250%" y="421" width="0.0340%" height="15" fill="rgb(233,226,8)" fg:x="2668" fg:w="1"/><text x="90.8750%" y="431.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.03%)</title><rect x="90.6250%" y="405" width="0.0340%" height="15" fill="rgb(229,211,3)" fg:x="2668" fg:w="1"/><text x="90.8750%" y="415.50"></text></g><g><title>bevy_ecs::system::commands::command_queue::CommandQueue::push::{{closure}} (1 samples, 0.03%)</title><rect x="90.6250%" y="389" width="0.0340%" height="15" fill="rgb(216,140,21)" fg:x="2668" fg:w="1"/><text x="90.8750%" y="399.50"></text></g><g><title>&lt;bevy_ecs::system::commands::Insert&lt;T&gt; as bevy_ecs::system::commands::Command&gt;::write (1 samples, 0.03%)</title><rect x="90.6250%" y="373" width="0.0340%" height="15" fill="rgb(234,122,30)" fg:x="2668" fg:w="1"/><text x="90.8750%" y="383.50"></text></g><g><title>bevy_ecs::world::entity_ref::EntityMut::insert (1 samples, 0.03%)</title><rect x="90.6250%" y="357" width="0.0340%" height="15" fill="rgb(236,25,46)" fg:x="2668" fg:w="1"/><text x="90.8750%" y="367.50"></text></g><g><title>bevy_ecs::bundle::BundleInfo::get_bundle_inserter (1 samples, 0.03%)</title><rect x="90.6250%" y="341" width="0.0340%" height="15" fill="rgb(217,52,54)" fg:x="2668" fg:w="1"/><text x="90.8750%" y="351.50"></text></g><g><title>bevy_ecs::bundle::BundleInfo::add_bundle_to_archetype (1 samples, 0.03%)</title><rect x="90.6250%" y="325" width="0.0340%" height="15" fill="rgb(222,29,26)" fg:x="2668" fg:w="1"/><text x="90.8750%" y="335.50"></text></g><g><title>bevy_ecs::archetype::Archetype::sparse_set_components (1 samples, 0.03%)</title><rect x="90.6250%" y="309" width="0.0340%" height="15" fill="rgb(216,177,29)" fg:x="2668" fg:w="1"/><text x="90.8750%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::filter (1 samples, 0.03%)</title><rect x="90.6250%" y="293" width="0.0340%" height="15" fill="rgb(247,136,51)" fg:x="2668" fg:w="1"/><text x="90.8750%" y="303.50"></text></g><g><title>core::iter::adapters::filter::Filter&lt;I,P&gt;::new (1 samples, 0.03%)</title><rect x="90.6250%" y="277" width="0.0340%" height="15" fill="rgb(231,47,47)" fg:x="2668" fg:w="1"/><text x="90.8750%" y="287.50"></text></g><g><title>&lt;game_render::pipeline::MainPass as game_render::graph::Node&gt;::render (4 samples, 0.14%)</title><rect x="90.6590%" y="757" width="0.1359%" height="15" fill="rgb(211,192,36)" fg:x="2669" fg:w="4"/><text x="90.9090%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (4 samples, 0.14%)</title><rect x="90.6590%" y="741" width="0.1359%" height="15" fill="rgb(229,156,32)" fg:x="2669" fg:w="4"/><text x="90.9090%" y="751.50"></text></g><g><title>&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (4 samples, 0.14%)</title><rect x="90.6590%" y="725" width="0.1359%" height="15" fill="rgb(248,213,20)" fg:x="2669" fg:w="4"/><text x="90.9090%" y="735.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::command_encoder_end_render_pass (4 samples, 0.14%)</title><rect x="90.6590%" y="709" width="0.1359%" height="15" fill="rgb(217,64,7)" fg:x="2669" fg:w="4"/><text x="90.9090%" y="719.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::command_encoder_end_render_pass (4 samples, 0.14%)</title><rect x="90.6590%" y="693" width="0.1359%" height="15" fill="rgb(232,142,8)" fg:x="2669" fg:w="4"/><text x="90.9090%" y="703.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (4 samples, 0.14%)</title><rect x="90.6590%" y="677" width="0.1359%" height="15" fill="rgb(224,92,44)" fg:x="2669" fg:w="4"/><text x="90.9090%" y="687.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (4 samples, 0.14%)</title><rect x="90.6590%" y="661" width="0.1359%" height="15" fill="rgb(214,169,17)" fg:x="2669" fg:w="4"/><text x="90.9090%" y="671.50"></text></g><g><title>[libvulkan_radeon.so] (4 samples, 0.14%)</title><rect x="90.6590%" y="645" width="0.1359%" height="15" fill="rgb(210,59,37)" fg:x="2669" fg:w="4"/><text x="90.9090%" y="655.50"></text></g><g><title>[libvulkan_radeon.so] (4 samples, 0.14%)</title><rect x="90.6590%" y="629" width="0.1359%" height="15" fill="rgb(214,116,48)" fg:x="2669" fg:w="4"/><text x="90.9090%" y="639.50"></text></g><g><title>[libvulkan_radeon.so] (2 samples, 0.07%)</title><rect x="90.7269%" y="613" width="0.0679%" height="15" fill="rgb(244,191,6)" fg:x="2671" fg:w="2"/><text x="90.9769%" y="623.50"></text></g><g><title>ash::device::Device::allocate_command_buffers (1 samples, 0.03%)</title><rect x="90.7948%" y="629" width="0.0340%" height="15" fill="rgb(241,50,52)" fg:x="2673" fg:w="1"/><text x="91.0448%" y="639.50"></text></g><g><title>vkAllocateCommandBuffers (1 samples, 0.03%)</title><rect x="90.7948%" y="613" width="0.0340%" height="15" fill="rgb(236,75,39)" fg:x="2673" fg:w="1"/><text x="91.0448%" y="623.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="90.7948%" y="597" width="0.0340%" height="15" fill="rgb(236,99,0)" fg:x="2673" fg:w="1"/><text x="91.0448%" y="607.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="90.7948%" y="581" width="0.0340%" height="15" fill="rgb(207,202,15)" fg:x="2673" fg:w="1"/><text x="91.0448%" y="591.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="90.7948%" y="565" width="0.0340%" height="15" fill="rgb(233,207,14)" fg:x="2673" fg:w="1"/><text x="91.0448%" y="575.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="90.7948%" y="549" width="0.0340%" height="15" fill="rgb(226,27,51)" fg:x="2673" fg:w="1"/><text x="91.0448%" y="559.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="90.7948%" y="533" width="0.0340%" height="15" fill="rgb(206,104,42)" fg:x="2673" fg:w="1"/><text x="91.0448%" y="543.50"></text></g><g><title>amdgpu_bo_alloc (1 samples, 0.03%)</title><rect x="90.7948%" y="517" width="0.0340%" height="15" fill="rgb(212,225,4)" fg:x="2673" fg:w="1"/><text x="91.0448%" y="527.50"></text></g><g><title>drmCommandWriteRead (1 samples, 0.03%)</title><rect x="90.7948%" y="501" width="0.0340%" height="15" fill="rgb(233,96,42)" fg:x="2673" fg:w="1"/><text x="91.0448%" y="511.50"></text></g><g><title>drmIoctl (1 samples, 0.03%)</title><rect x="90.7948%" y="485" width="0.0340%" height="15" fill="rgb(229,21,32)" fg:x="2673" fg:w="1"/><text x="91.0448%" y="495.50"></text></g><g><title>ioctl (1 samples, 0.03%)</title><rect x="90.7948%" y="469" width="0.0340%" height="15" fill="rgb(226,216,24)" fg:x="2673" fg:w="1"/><text x="91.0448%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="90.7948%" y="453" width="0.0340%" height="15" fill="rgb(221,163,17)" fg:x="2673" fg:w="1"/><text x="91.0448%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="90.7948%" y="437" width="0.0340%" height="15" fill="rgb(216,216,42)" fg:x="2673" fg:w="1"/><text x="91.0448%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="90.7948%" y="421" width="0.0340%" height="15" fill="rgb(240,118,7)" fg:x="2673" fg:w="1"/><text x="91.0448%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="90.7948%" y="405" width="0.0340%" height="15" fill="rgb(221,67,37)" fg:x="2673" fg:w="1"/><text x="91.0448%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="90.7948%" y="389" width="0.0340%" height="15" fill="rgb(241,32,44)" fg:x="2673" fg:w="1"/><text x="91.0448%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="90.7948%" y="373" width="0.0340%" height="15" fill="rgb(235,204,43)" fg:x="2673" fg:w="1"/><text x="91.0448%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="90.7948%" y="357" width="0.0340%" height="15" fill="rgb(213,116,10)" fg:x="2673" fg:w="1"/><text x="91.0448%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (2 samples, 0.07%)</title><rect x="90.7948%" y="757" width="0.0679%" height="15" fill="rgb(239,15,48)" fg:x="2673" fg:w="2"/><text x="91.0448%" y="767.50"></text></g><g><title>&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (2 samples, 0.07%)</title><rect x="90.7948%" y="741" width="0.0679%" height="15" fill="rgb(207,123,36)" fg:x="2673" fg:w="2"/><text x="91.0448%" y="751.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::command_encoder_end_render_pass (2 samples, 0.07%)</title><rect x="90.7948%" y="725" width="0.0679%" height="15" fill="rgb(209,103,30)" fg:x="2673" fg:w="2"/><text x="91.0448%" y="735.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::command_encoder_end_render_pass (2 samples, 0.07%)</title><rect x="90.7948%" y="709" width="0.0679%" height="15" fill="rgb(238,100,19)" fg:x="2673" fg:w="2"/><text x="91.0448%" y="719.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (2 samples, 0.07%)</title><rect x="90.7948%" y="693" width="0.0679%" height="15" fill="rgb(244,30,14)" fg:x="2673" fg:w="2"/><text x="91.0448%" y="703.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (2 samples, 0.07%)</title><rect x="90.7948%" y="677" width="0.0679%" height="15" fill="rgb(249,174,6)" fg:x="2673" fg:w="2"/><text x="91.0448%" y="687.50"></text></g><g><title>wgpu_core::command::CommandEncoder&lt;A&gt;::open_pass (2 samples, 0.07%)</title><rect x="90.7948%" y="661" width="0.0679%" height="15" fill="rgb(235,213,41)" fg:x="2673" fg:w="2"/><text x="91.0448%" y="671.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_encoding (2 samples, 0.07%)</title><rect x="90.7948%" y="645" width="0.0679%" height="15" fill="rgb(213,118,6)" fg:x="2673" fg:w="2"/><text x="91.0448%" y="655.50"></text></g><g><title>ash::device::Device::begin_command_buffer (1 samples, 0.03%)</title><rect x="90.8288%" y="629" width="0.0340%" height="15" fill="rgb(235,44,51)" fg:x="2674" fg:w="1"/><text x="91.0788%" y="639.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="90.8288%" y="613" width="0.0340%" height="15" fill="rgb(217,9,53)" fg:x="2674" fg:w="1"/><text x="91.0788%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.03%)</title><rect x="90.8628%" y="693" width="0.0340%" height="15" fill="rgb(237,172,34)" fg:x="2675" fg:w="1"/><text x="91.1128%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.03%)</title><rect x="90.8628%" y="677" width="0.0340%" height="15" fill="rgb(206,206,11)" fg:x="2675" fg:w="1"/><text x="91.1128%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.03%)</title><rect x="90.8628%" y="661" width="0.0340%" height="15" fill="rgb(214,149,29)" fg:x="2675" fg:w="1"/><text x="91.1128%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.03%)</title><rect x="90.8628%" y="645" width="0.0340%" height="15" fill="rgb(208,123,3)" fg:x="2675" fg:w="1"/><text x="91.1128%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.03%)</title><rect x="90.8628%" y="629" width="0.0340%" height="15" fill="rgb(229,126,4)" fg:x="2675" fg:w="1"/><text x="91.1128%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.03%)</title><rect x="90.8628%" y="613" width="0.0340%" height="15" fill="rgb(222,92,36)" fg:x="2675" fg:w="1"/><text x="91.1128%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.03%)</title><rect x="90.8628%" y="597" width="0.0340%" height="15" fill="rgb(216,39,41)" fg:x="2675" fg:w="1"/><text x="91.1128%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.03%)</title><rect x="90.8628%" y="581" width="0.0340%" height="15" fill="rgb(253,127,28)" fg:x="2675" fg:w="1"/><text x="91.1128%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.03%)</title><rect x="90.8628%" y="565" width="0.0340%" height="15" fill="rgb(249,152,51)" fg:x="2675" fg:w="1"/><text x="91.1128%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.03%)</title><rect x="90.8628%" y="549" width="0.0340%" height="15" fill="rgb(209,123,42)" fg:x="2675" fg:w="1"/><text x="91.1128%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.03%)</title><rect x="90.8628%" y="533" width="0.0340%" height="15" fill="rgb(241,118,22)" fg:x="2675" fg:w="1"/><text x="91.1128%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.03%)</title><rect x="90.8628%" y="517" width="0.0340%" height="15" fill="rgb(208,25,7)" fg:x="2675" fg:w="1"/><text x="91.1128%" y="527.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.03%)</title><rect x="90.8628%" y="501" width="0.0340%" height="15" fill="rgb(243,144,39)" fg:x="2675" fg:w="1"/><text x="91.1128%" y="511.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.03%)</title><rect x="90.8628%" y="485" width="0.0340%" height="15" fill="rgb(250,50,5)" fg:x="2675" fg:w="1"/><text x="91.1128%" y="495.50"></text></g><g><title>realloc (1 samples, 0.03%)</title><rect x="90.8628%" y="469" width="0.0340%" height="15" fill="rgb(207,67,11)" fg:x="2675" fg:w="1"/><text x="91.1128%" y="479.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="90.8628%" y="453" width="0.0340%" height="15" fill="rgb(245,204,40)" fg:x="2675" fg:w="1"/><text x="91.1128%" y="463.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;A&gt;::insert_barriers_from_tracker (1 samples, 0.03%)</title><rect x="90.8967%" y="693" width="0.0340%" height="15" fill="rgb(238,228,24)" fg:x="2676" fg:w="1"/><text x="91.1467%" y="703.50"></text></g><g><title>wgpu_core::track::buffer::BufferTracker&lt;A&gt;::set_from_tracker (1 samples, 0.03%)</title><rect x="90.8967%" y="677" width="0.0340%" height="15" fill="rgb(217,116,22)" fg:x="2676" fg:w="1"/><text x="91.1467%" y="687.50"></text></g><g><title>wgpu_core::track::buffer::insert_or_barrier_update (1 samples, 0.03%)</title><rect x="90.8967%" y="661" width="0.0340%" height="15" fill="rgb(234,98,12)" fg:x="2676" fg:w="1"/><text x="91.1467%" y="671.50"></text></g><g><title>wgpu_core::track::buffer::barrier (1 samples, 0.03%)</title><rect x="90.8967%" y="645" width="0.0340%" height="15" fill="rgb(242,170,50)" fg:x="2676" fg:w="1"/><text x="91.1467%" y="655.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;A&gt;::cleanup (2 samples, 0.07%)</title><rect x="90.9307%" y="677" width="0.0679%" height="15" fill="rgb(235,7,5)" fg:x="2677" fg:w="2"/><text x="91.1807%" y="687.50"></text></g><g><title>wgpu_core::device::life::NonReferencedResources&lt;A&gt;::clean (2 samples, 0.07%)</title><rect x="90.9307%" y="661" width="0.0679%" height="15" fill="rgb(241,114,28)" fg:x="2677" fg:w="2"/><text x="91.1807%" y="671.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="90.9647%" y="645" width="0.0340%" height="15" fill="rgb(246,112,42)" fg:x="2678" fg:w="1"/><text x="91.2147%" y="655.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="90.9647%" y="629" width="0.0340%" height="15" fill="rgb(248,228,14)" fg:x="2678" fg:w="1"/><text x="91.2147%" y="639.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.03%)</title><rect x="90.9647%" y="613" width="0.0340%" height="15" fill="rgb(208,133,18)" fg:x="2678" fg:w="1"/><text x="91.2147%" y="623.50"></text></g><g><title>wgpu::Queue::submit (6 samples, 0.20%)</title><rect x="90.8628%" y="757" width="0.2038%" height="15" fill="rgb(207,35,49)" fg:x="2675" fg:w="6"/><text x="91.1128%" y="767.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::queue_submit (6 samples, 0.20%)</title><rect x="90.8628%" y="741" width="0.2038%" height="15" fill="rgb(205,68,36)" fg:x="2675" fg:w="6"/><text x="91.1128%" y="751.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::queue_submit (6 samples, 0.20%)</title><rect x="90.8628%" y="725" width="0.2038%" height="15" fill="rgb(245,62,40)" fg:x="2675" fg:w="6"/><text x="91.1128%" y="735.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (6 samples, 0.20%)</title><rect x="90.8628%" y="709" width="0.2038%" height="15" fill="rgb(228,27,24)" fg:x="2675" fg:w="6"/><text x="91.1128%" y="719.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::maintain (4 samples, 0.14%)</title><rect x="90.9307%" y="693" width="0.1359%" height="15" fill="rgb(253,19,12)" fg:x="2677" fg:w="4"/><text x="91.1807%" y="703.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::get_fence_value (2 samples, 0.07%)</title><rect x="90.9986%" y="677" width="0.0679%" height="15" fill="rgb(232,28,20)" fg:x="2679" fg:w="2"/><text x="91.2486%" y="687.50"></text></g><g><title>wgpu_hal::vulkan::Fence::get_latest (2 samples, 0.07%)</title><rect x="90.9986%" y="661" width="0.0679%" height="15" fill="rgb(218,35,51)" fg:x="2679" fg:w="2"/><text x="91.2486%" y="671.50"></text></g><g><title>ash::device::Device::get_semaphore_counter_value (2 samples, 0.07%)</title><rect x="90.9986%" y="645" width="0.0679%" height="15" fill="rgb(212,90,40)" fg:x="2679" fg:w="2"/><text x="91.2486%" y="655.50"></text></g><g><title>[libvulkan_radeon.so] (2 samples, 0.07%)</title><rect x="90.9986%" y="629" width="0.0679%" height="15" fill="rgb(220,172,12)" fg:x="2679" fg:w="2"/><text x="91.2486%" y="639.50"></text></g><g><title>drmSyncobjQuery (2 samples, 0.07%)</title><rect x="90.9986%" y="613" width="0.0679%" height="15" fill="rgb(226,159,20)" fg:x="2679" fg:w="2"/><text x="91.2486%" y="623.50"></text></g><g><title>drmIoctl (2 samples, 0.07%)</title><rect x="90.9986%" y="597" width="0.0679%" height="15" fill="rgb(234,205,16)" fg:x="2679" fg:w="2"/><text x="91.2486%" y="607.50"></text></g><g><title>ioctl (2 samples, 0.07%)</title><rect x="90.9986%" y="581" width="0.0679%" height="15" fill="rgb(207,9,39)" fg:x="2679" fg:w="2"/><text x="91.2486%" y="591.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="90.9986%" y="565" width="0.0679%" height="15" fill="rgb(249,143,15)" fg:x="2679" fg:w="2"/><text x="91.2486%" y="575.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="90.9986%" y="549" width="0.0679%" height="15" fill="rgb(253,133,29)" fg:x="2679" fg:w="2"/><text x="91.2486%" y="559.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="90.9986%" y="533" width="0.0679%" height="15" fill="rgb(221,187,0)" fg:x="2679" fg:w="2"/><text x="91.2486%" y="543.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="90.9986%" y="517" width="0.0679%" height="15" fill="rgb(205,204,26)" fg:x="2679" fg:w="2"/><text x="91.2486%" y="527.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="90.9986%" y="501" width="0.0679%" height="15" fill="rgb(224,68,54)" fg:x="2679" fg:w="2"/><text x="91.2486%" y="511.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="90.9986%" y="485" width="0.0679%" height="15" fill="rgb(209,67,4)" fg:x="2679" fg:w="2"/><text x="91.2486%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="91.0326%" y="469" width="0.0340%" height="15" fill="rgb(228,229,18)" fg:x="2680" fg:w="1"/><text x="91.2826%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="91.0326%" y="453" width="0.0340%" height="15" fill="rgb(231,89,13)" fg:x="2680" fg:w="1"/><text x="91.2826%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="91.0326%" y="437" width="0.0340%" height="15" fill="rgb(210,182,18)" fg:x="2680" fg:w="1"/><text x="91.2826%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="91.0326%" y="421" width="0.0340%" height="15" fill="rgb(240,105,2)" fg:x="2680" fg:w="1"/><text x="91.2826%" y="431.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (13 samples, 0.44%)</title><rect x="90.6590%" y="1173" width="0.4416%" height="15" fill="rgb(207,170,50)" fg:x="2669" fg:w="13"/><text x="90.9090%" y="1183.50"></text></g><g><title>&lt;futures_lite::future::CatchUnwind&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (13 samples, 0.44%)</title><rect x="90.6590%" y="1157" width="0.4416%" height="15" fill="rgb(232,133,24)" fg:x="2669" fg:w="13"/><text x="90.9090%" y="1167.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::future::future::Future&gt;::poll (13 samples, 0.44%)</title><rect x="90.6590%" y="1141" width="0.4416%" height="15" fill="rgb(235,166,27)" fg:x="2669" fg:w="13"/><text x="90.9090%" y="1151.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::execute_scope::{{closure}}::{{closure}}::{{closure}} (13 samples, 0.44%)</title><rect x="90.6590%" y="1125" width="0.4416%" height="15" fill="rgb(209,19,13)" fg:x="2669" fg:w="13"/><text x="90.9090%" y="1135.50"></text></g><g><title>bevy_tasks::thread_executor::ThreadExecutorTicker::tick::{{closure}} (13 samples, 0.44%)</title><rect x="90.6590%" y="1109" width="0.4416%" height="15" fill="rgb(226,79,39)" fg:x="2669" fg:w="13"/><text x="90.9090%" y="1119.50"></text></g><g><title>async_executor::Executor::tick::{{closure}} (13 samples, 0.44%)</title><rect x="90.6590%" y="1093" width="0.4416%" height="15" fill="rgb(222,163,10)" fg:x="2669" fg:w="13"/><text x="90.9090%" y="1103.50"></text></g><g><title>async_task::runnable::Runnable&lt;M&gt;::run (13 samples, 0.44%)</title><rect x="90.6590%" y="1077" width="0.4416%" height="15" fill="rgb(214,44,19)" fg:x="2669" fg:w="13"/><text x="90.9090%" y="1087.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::run (13 samples, 0.44%)</title><rect x="90.6590%" y="1061" width="0.4416%" height="15" fill="rgb(210,217,13)" fg:x="2669" fg:w="13"/><text x="90.9090%" y="1071.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (13 samples, 0.44%)</title><rect x="90.6590%" y="1045" width="0.4416%" height="15" fill="rgb(237,61,54)" fg:x="2669" fg:w="13"/><text x="90.9090%" y="1055.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::spawn_exclusive_system_task::{{closure}} (13 samples, 0.44%)</title><rect x="90.6590%" y="1029" width="0.4416%" height="15" fill="rgb(226,184,24)" fg:x="2669" fg:w="13"/><text x="90.9090%" y="1039.50"></text></g><g><title>std::panic::catch_unwind (13 samples, 0.44%)</title><rect x="90.6590%" y="1013" width="0.4416%" height="15" fill="rgb(223,226,4)" fg:x="2669" fg:w="13"/><text x="90.9090%" y="1023.50"></text></g><g><title>std::panicking::try (13 samples, 0.44%)</title><rect x="90.6590%" y="997" width="0.4416%" height="15" fill="rgb(210,26,41)" fg:x="2669" fg:w="13"/><text x="90.9090%" y="1007.50"></text></g><g><title>std::panicking::try::do_call (13 samples, 0.44%)</title><rect x="90.6590%" y="981" width="0.4416%" height="15" fill="rgb(220,221,6)" fg:x="2669" fg:w="13"/><text x="90.9090%" y="991.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (13 samples, 0.44%)</title><rect x="90.6590%" y="965" width="0.4416%" height="15" fill="rgb(225,89,49)" fg:x="2669" fg:w="13"/><text x="90.9090%" y="975.50"></text></g><g><title>core::ops::function::FnOnce::call_once (13 samples, 0.44%)</title><rect x="90.6590%" y="949" width="0.4416%" height="15" fill="rgb(218,70,45)" fg:x="2669" fg:w="13"/><text x="90.9090%" y="959.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::spawn_exclusive_system_task::{{closure}}::{{closure}} (13 samples, 0.44%)</title><rect x="90.6590%" y="933" width="0.4416%" height="15" fill="rgb(238,166,21)" fg:x="2669" fg:w="13"/><text x="90.9090%" y="943.50"></text></g><g><title>&lt;bevy_ecs::system::exclusive_function_system::ExclusiveFunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::run (13 samples, 0.44%)</title><rect x="90.6590%" y="917" width="0.4416%" height="15" fill="rgb(224,141,44)" fg:x="2669" fg:w="13"/><text x="90.9090%" y="927.50"></text></g><g><title>&lt;Func as bevy_ecs::system::exclusive_function_system::ExclusiveSystemParamFunction&lt;fn() .&gt; Out&gt;&gt;::run (13 samples, 0.44%)</title><rect x="90.6590%" y="901" width="0.4416%" height="15" fill="rgb(230,12,49)" fg:x="2669" fg:w="13"/><text x="90.9090%" y="911.50"></text></g><g><title>&lt;Func as bevy_ecs::system::exclusive_function_system::ExclusiveSystemParamFunction&lt;fn() .&gt; Out&gt;&gt;::run::call_inner (13 samples, 0.44%)</title><rect x="90.6590%" y="885" width="0.4416%" height="15" fill="rgb(212,174,12)" fg:x="2669" fg:w="13"/><text x="90.9090%" y="895.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (13 samples, 0.44%)</title><rect x="90.6590%" y="869" width="0.4416%" height="15" fill="rgb(246,67,9)" fg:x="2669" fg:w="13"/><text x="90.9090%" y="879.50"></text></g><g><title>core::ops::function::FnMut::call_mut (13 samples, 0.44%)</title><rect x="90.6590%" y="853" width="0.4416%" height="15" fill="rgb(239,35,23)" fg:x="2669" fg:w="13"/><text x="90.9090%" y="863.50"></text></g><g><title>game_render::render_surfaces (13 samples, 0.44%)</title><rect x="90.6590%" y="837" width="0.4416%" height="15" fill="rgb(211,167,0)" fg:x="2669" fg:w="13"/><text x="90.9090%" y="847.50"></text></g><g><title>bevy_ecs::world::World::resource_scope (13 samples, 0.44%)</title><rect x="90.6590%" y="821" width="0.4416%" height="15" fill="rgb(225,119,45)" fg:x="2669" fg:w="13"/><text x="90.9090%" y="831.50"></text></g><g><title>game_render::render_surfaces::{{closure}} (13 samples, 0.44%)</title><rect x="90.6590%" y="805" width="0.4416%" height="15" fill="rgb(210,162,6)" fg:x="2669" fg:w="13"/><text x="90.9090%" y="815.50"></text></g><g><title>bevy_ecs::world::World::resource_scope (13 samples, 0.44%)</title><rect x="90.6590%" y="789" width="0.4416%" height="15" fill="rgb(208,118,35)" fg:x="2669" fg:w="13"/><text x="90.9090%" y="799.50"></text></g><g><title>game_render::render_surfaces::{{closure}}::{{closure}} (13 samples, 0.44%)</title><rect x="90.6590%" y="773" width="0.4416%" height="15" fill="rgb(239,4,53)" fg:x="2669" fg:w="13"/><text x="90.9090%" y="783.50"></text></g><g><title>wgpu::SurfaceTexture::present (1 samples, 0.03%)</title><rect x="91.0666%" y="757" width="0.0340%" height="15" fill="rgb(213,130,21)" fg:x="2681" fg:w="1"/><text x="91.3166%" y="767.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::surface_present (1 samples, 0.03%)</title><rect x="91.0666%" y="741" width="0.0340%" height="15" fill="rgb(235,148,0)" fg:x="2681" fg:w="1"/><text x="91.3166%" y="751.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::surface_present (1 samples, 0.03%)</title><rect x="91.0666%" y="725" width="0.0340%" height="15" fill="rgb(244,224,18)" fg:x="2681" fg:w="1"/><text x="91.3166%" y="735.50"></text></g><g><title>wgpu_core::present::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_present (1 samples, 0.03%)</title><rect x="91.0666%" y="709" width="0.0340%" height="15" fill="rgb(211,214,4)" fg:x="2681" fg:w="1"/><text x="91.3166%" y="719.50"></text></g><g><title>&lt;wgpu_hal::vulkan::Queue as wgpu_hal::Queue&lt;wgpu_hal::vulkan::Api&gt;&gt;::present (1 samples, 0.03%)</title><rect x="91.0666%" y="693" width="0.0340%" height="15" fill="rgb(206,119,25)" fg:x="2681" fg:w="1"/><text x="91.3166%" y="703.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::queue_present (1 samples, 0.03%)</title><rect x="91.0666%" y="677" width="0.0340%" height="15" fill="rgb(243,93,47)" fg:x="2681" fg:w="1"/><text x="91.3166%" y="687.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="91.0666%" y="661" width="0.0340%" height="15" fill="rgb(224,194,6)" fg:x="2681" fg:w="1"/><text x="91.3166%" y="671.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="91.0666%" y="645" width="0.0340%" height="15" fill="rgb(243,229,6)" fg:x="2681" fg:w="1"/><text x="91.3166%" y="655.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="91.0666%" y="629" width="0.0340%" height="15" fill="rgb(207,23,50)" fg:x="2681" fg:w="1"/><text x="91.3166%" y="639.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="91.0666%" y="613" width="0.0340%" height="15" fill="rgb(253,192,32)" fg:x="2681" fg:w="1"/><text x="91.3166%" y="623.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="91.0666%" y="597" width="0.0340%" height="15" fill="rgb(213,21,6)" fg:x="2681" fg:w="1"/><text x="91.3166%" y="607.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="91.0666%" y="581" width="0.0340%" height="15" fill="rgb(243,151,13)" fg:x="2681" fg:w="1"/><text x="91.3166%" y="591.50"></text></g><g><title>__strcpy_chk (1 samples, 0.03%)</title><rect x="91.1005%" y="885" width="0.0340%" height="15" fill="rgb(233,165,41)" fg:x="2682" fg:w="1"/><text x="91.3505%" y="895.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="91.1005%" y="869" width="0.0340%" height="15" fill="rgb(246,176,45)" fg:x="2682" fg:w="1"/><text x="91.3505%" y="879.50"></text></g><g><title>&lt;game_window::WindowPlugin as bevy_app::plugin::Plugin&gt;::build (3 samples, 0.10%)</title><rect x="91.1005%" y="1173" width="0.1019%" height="15" fill="rgb(217,170,52)" fg:x="2682" fg:w="3"/><text x="91.3505%" y="1183.50"></text></g><g><title>winit::event_loop::EventLoop&lt;()&gt;::new (3 samples, 0.10%)</title><rect x="91.1005%" y="1157" width="0.1019%" height="15" fill="rgb(214,203,54)" fg:x="2682" fg:w="3"/><text x="91.3505%" y="1167.50"></text></g><g><title>winit::event_loop::EventLoopBuilder&lt;T&gt;::build (3 samples, 0.10%)</title><rect x="91.1005%" y="1141" width="0.1019%" height="15" fill="rgb(248,215,49)" fg:x="2682" fg:w="3"/><text x="91.3505%" y="1151.50"></text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::new (3 samples, 0.10%)</title><rect x="91.1005%" y="1125" width="0.1019%" height="15" fill="rgb(208,46,10)" fg:x="2682" fg:w="3"/><text x="91.3505%" y="1135.50"></text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::new_wayland_any_thread (3 samples, 0.10%)</title><rect x="91.1005%" y="1109" width="0.1019%" height="15" fill="rgb(254,5,31)" fg:x="2682" fg:w="3"/><text x="91.3505%" y="1119.50"></text></g><g><title>winit::platform_impl::platform::wayland::event_loop::EventLoop&lt;T&gt;::new (3 samples, 0.10%)</title><rect x="91.1005%" y="1093" width="0.1019%" height="15" fill="rgb(222,104,33)" fg:x="2682" fg:w="3"/><text x="91.3505%" y="1103.50"></text></g><g><title>winit::platform_impl::platform::wayland::seat::SeatManager::new (3 samples, 0.10%)</title><rect x="91.1005%" y="1077" width="0.1019%" height="15" fill="rgb(248,49,16)" fg:x="2682" fg:w="3"/><text x="91.3505%" y="1087.50"></text></g><g><title>winit::platform_impl::platform::wayland::seat::SeatManagerInner::process_seat_update (3 samples, 0.10%)</title><rect x="91.1005%" y="1061" width="0.1019%" height="15" fill="rgb(232,198,41)" fg:x="2682" fg:w="3"/><text x="91.3505%" y="1071.50"></text></g><g><title>winit::platform_impl::platform::wayland::seat::keyboard::Keyboard::new (3 samples, 0.10%)</title><rect x="91.1005%" y="1045" width="0.1019%" height="15" fill="rgb(214,125,3)" fg:x="2682" fg:w="3"/><text x="91.3505%" y="1055.50"></text></g><g><title>smithay_client_toolkit::seat::keyboard::map_keyboard_repeat (3 samples, 0.10%)</title><rect x="91.1005%" y="1029" width="0.1019%" height="15" fill="rgb(229,220,28)" fg:x="2682" fg:w="3"/><text x="91.3505%" y="1039.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (3 samples, 0.10%)</title><rect x="91.1005%" y="1013" width="0.1019%" height="15" fill="rgb(222,64,37)" fg:x="2682" fg:w="3"/><text x="91.3505%" y="1023.50"></text></g><g><title>core::ops::function::FnOnce::call_once (3 samples, 0.10%)</title><rect x="91.1005%" y="997" width="0.1019%" height="15" fill="rgb(249,184,13)" fg:x="2682" fg:w="3"/><text x="91.3505%" y="1007.50"></text></g><g><title>smithay_client_toolkit::seat::keyboard::state::KbState::new (3 samples, 0.10%)</title><rect x="91.1005%" y="981" width="0.1019%" height="15" fill="rgb(252,176,6)" fg:x="2682" fg:w="3"/><text x="91.3505%" y="991.50"></text></g><g><title>smithay_client_toolkit::seat::keyboard::state::KbState::init_compose (3 samples, 0.10%)</title><rect x="91.1005%" y="965" width="0.1019%" height="15" fill="rgb(228,153,7)" fg:x="2682" fg:w="3"/><text x="91.3505%" y="975.50"></text></g><g><title>xkb_compose_table_new_from_locale (3 samples, 0.10%)</title><rect x="91.1005%" y="949" width="0.1019%" height="15" fill="rgb(242,193,5)" fg:x="2682" fg:w="3"/><text x="91.3505%" y="959.50"></text></g><g><title>[libxkbcommon.so.0.0.0] (3 samples, 0.10%)</title><rect x="91.1005%" y="933" width="0.1019%" height="15" fill="rgb(232,140,9)" fg:x="2682" fg:w="3"/><text x="91.3505%" y="943.50"></text></g><g><title>[libxkbcommon.so.0.0.0] (3 samples, 0.10%)</title><rect x="91.1005%" y="917" width="0.1019%" height="15" fill="rgb(213,222,16)" fg:x="2682" fg:w="3"/><text x="91.3505%" y="927.50"></text></g><g><title>[libxkbcommon.so.0.0.0] (3 samples, 0.10%)</title><rect x="91.1005%" y="901" width="0.1019%" height="15" fill="rgb(222,75,50)" fg:x="2682" fg:w="3"/><text x="91.3505%" y="911.50"></text></g><g><title>xkb_keysym_from_name (2 samples, 0.07%)</title><rect x="91.1345%" y="885" width="0.0679%" height="15" fill="rgb(205,180,2)" fg:x="2683" fg:w="2"/><text x="91.3845%" y="895.50"></text></g><g><title>[libc.so.6] (2 samples, 0.07%)</title><rect x="91.1345%" y="869" width="0.0679%" height="15" fill="rgb(216,34,7)" fg:x="2683" fg:w="2"/><text x="91.3845%" y="879.50"></text></g><g><title>wgpu_core::track::buffer::BufferUsageScope&lt;A&gt;::set_size (1 samples, 0.03%)</title><rect x="91.2024%" y="1093" width="0.0340%" height="15" fill="rgb(253,16,32)" fg:x="2685" fg:w="1"/><text x="91.4524%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (1 samples, 0.03%)</title><rect x="91.2024%" y="1077" width="0.0340%" height="15" fill="rgb(208,97,28)" fg:x="2685" fg:w="1"/><text x="91.4524%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (1 samples, 0.03%)</title><rect x="91.2024%" y="1061" width="0.0340%" height="15" fill="rgb(225,92,11)" fg:x="2685" fg:w="1"/><text x="91.4524%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.03%)</title><rect x="91.2024%" y="1045" width="0.0340%" height="15" fill="rgb(243,38,12)" fg:x="2685" fg:w="1"/><text x="91.4524%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.03%)</title><rect x="91.2024%" y="1029" width="0.0340%" height="15" fill="rgb(208,139,16)" fg:x="2685" fg:w="1"/><text x="91.4524%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.03%)</title><rect x="91.2024%" y="1013" width="0.0340%" height="15" fill="rgb(227,24,9)" fg:x="2685" fg:w="1"/><text x="91.4524%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.03%)</title><rect x="91.2024%" y="997" width="0.0340%" height="15" fill="rgb(206,62,11)" fg:x="2685" fg:w="1"/><text x="91.4524%" y="1007.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.03%)</title><rect x="91.2024%" y="981" width="0.0340%" height="15" fill="rgb(228,134,27)" fg:x="2685" fg:w="1"/><text x="91.4524%" y="991.50"></text></g><g><title>malloc (1 samples, 0.03%)</title><rect x="91.2024%" y="965" width="0.0340%" height="15" fill="rgb(205,55,33)" fg:x="2685" fg:w="1"/><text x="91.4524%" y="975.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::command_encoder_end_render_pass (3 samples, 0.10%)</title><rect x="91.2024%" y="1173" width="0.1019%" height="15" fill="rgb(243,75,43)" fg:x="2685" fg:w="3"/><text x="91.4524%" y="1183.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (3 samples, 0.10%)</title><rect x="91.2024%" y="1157" width="0.1019%" height="15" fill="rgb(223,27,42)" fg:x="2685" fg:w="3"/><text x="91.4524%" y="1167.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (3 samples, 0.10%)</title><rect x="91.2024%" y="1141" width="0.1019%" height="15" fill="rgb(232,189,33)" fg:x="2685" fg:w="3"/><text x="91.4524%" y="1151.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;A&gt;::start (3 samples, 0.10%)</title><rect x="91.2024%" y="1125" width="0.1019%" height="15" fill="rgb(210,9,39)" fg:x="2685" fg:w="3"/><text x="91.4524%" y="1135.50"></text></g><g><title>wgpu_core::track::UsageScope&lt;A&gt;::new (3 samples, 0.10%)</title><rect x="91.2024%" y="1109" width="0.1019%" height="15" fill="rgb(242,85,26)" fg:x="2685" fg:w="3"/><text x="91.4524%" y="1119.50"></text></g><g><title>wgpu_core::track::metadata::resize_bitvec (2 samples, 0.07%)</title><rect x="91.2364%" y="1093" width="0.0679%" height="15" fill="rgb(248,44,4)" fg:x="2686" fg:w="2"/><text x="91.4864%" y="1103.50"></text></g><g><title>bit_vec::BitVec&lt;B&gt;::grow (2 samples, 0.07%)</title><rect x="91.2364%" y="1077" width="0.0679%" height="15" fill="rgb(250,96,46)" fg:x="2686" fg:w="2"/><text x="91.4864%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (2 samples, 0.07%)</title><rect x="91.2364%" y="1061" width="0.0679%" height="15" fill="rgb(229,116,26)" fg:x="2686" fg:w="2"/><text x="91.4864%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.07%)</title><rect x="91.2364%" y="1045" width="0.0679%" height="15" fill="rgb(246,94,34)" fg:x="2686" fg:w="2"/><text x="91.4864%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (2 samples, 0.07%)</title><rect x="91.2364%" y="1029" width="0.0679%" height="15" fill="rgb(251,73,21)" fg:x="2686" fg:w="2"/><text x="91.4864%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.07%)</title><rect x="91.2364%" y="1013" width="0.0679%" height="15" fill="rgb(254,121,25)" fg:x="2686" fg:w="2"/><text x="91.4864%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.07%)</title><rect x="91.2364%" y="997" width="0.0679%" height="15" fill="rgb(215,161,49)" fg:x="2686" fg:w="2"/><text x="91.4864%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.07%)</title><rect x="91.2364%" y="981" width="0.0679%" height="15" fill="rgb(221,43,13)" fg:x="2686" fg:w="2"/><text x="91.4864%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.07%)</title><rect x="91.2364%" y="965" width="0.0679%" height="15" fill="rgb(249,5,37)" fg:x="2686" fg:w="2"/><text x="91.4864%" y="975.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.07%)</title><rect x="91.2364%" y="949" width="0.0679%" height="15" fill="rgb(226,25,44)" fg:x="2686" fg:w="2"/><text x="91.4864%" y="959.50"></text></g><g><title>malloc (2 samples, 0.07%)</title><rect x="91.2364%" y="933" width="0.0679%" height="15" fill="rgb(238,189,16)" fg:x="2686" fg:w="2"/><text x="91.4864%" y="943.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::init (1 samples, 0.03%)</title><rect x="91.3043%" y="1173" width="0.0340%" height="15" fill="rgb(251,186,8)" fg:x="2688" fg:w="1"/><text x="91.5543%" y="1183.50"></text></g><g><title>wgpu_core::hub::Global&lt;G&gt;::new (1 samples, 0.03%)</title><rect x="91.3043%" y="1157" width="0.0340%" height="15" fill="rgb(254,34,31)" fg:x="2688" fg:w="1"/><text x="91.5543%" y="1167.50"></text></g><g><title>wgpu_core::instance::Instance::new (1 samples, 0.03%)</title><rect x="91.3043%" y="1141" width="0.0340%" height="15" fill="rgb(225,215,27)" fg:x="2688" fg:w="1"/><text x="91.5543%" y="1151.50"></text></g><g><title>wgpu_core::instance::Instance::new::init (1 samples, 0.03%)</title><rect x="91.3043%" y="1125" width="0.0340%" height="15" fill="rgb(221,192,48)" fg:x="2688" fg:w="1"/><text x="91.5543%" y="1135.50"></text></g><g><title>wgpu_hal::vulkan::instance::&lt;impl wgpu_hal::Instance&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Instance&gt;::init (1 samples, 0.03%)</title><rect x="91.3043%" y="1109" width="0.0340%" height="15" fill="rgb(219,137,20)" fg:x="2688" fg:w="1"/><text x="91.5543%" y="1119.50"></text></g><g><title>ash::entry::Entry::create_instance (1 samples, 0.03%)</title><rect x="91.3043%" y="1093" width="0.0340%" height="15" fill="rgb(219,84,11)" fg:x="2688" fg:w="1"/><text x="91.5543%" y="1103.50"></text></g><g><title>vkCreateInstance (1 samples, 0.03%)</title><rect x="91.3043%" y="1077" width="0.0340%" height="15" fill="rgb(224,10,23)" fg:x="2688" fg:w="1"/><text x="91.5543%" y="1087.50"></text></g><g><title>[libvulkan.so.1.3.245] (1 samples, 0.03%)</title><rect x="91.3043%" y="1061" width="0.0340%" height="15" fill="rgb(248,22,39)" fg:x="2688" fg:w="1"/><text x="91.5543%" y="1071.50"></text></g><g><title>[libvulkan.so.1.3.245] (1 samples, 0.03%)</title><rect x="91.3043%" y="1045" width="0.0340%" height="15" fill="rgb(212,154,20)" fg:x="2688" fg:w="1"/><text x="91.5543%" y="1055.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="91.3043%" y="1029" width="0.0340%" height="15" fill="rgb(236,199,50)" fg:x="2688" fg:w="1"/><text x="91.5543%" y="1039.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="91.3043%" y="1013" width="0.0340%" height="15" fill="rgb(211,9,17)" fg:x="2688" fg:w="1"/><text x="91.5543%" y="1023.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="91.3043%" y="997" width="0.0340%" height="15" fill="rgb(243,216,36)" fg:x="2688" fg:w="1"/><text x="91.5543%" y="1007.50"></text></g><g><title>XML_ParseBuffer (1 samples, 0.03%)</title><rect x="91.3043%" y="981" width="0.0340%" height="15" fill="rgb(250,2,10)" fg:x="2688" fg:w="1"/><text x="91.5543%" y="991.50"></text></g><g><title>[libexpat.so.1.8.10] (1 samples, 0.03%)</title><rect x="91.3043%" y="965" width="0.0340%" height="15" fill="rgb(226,50,48)" fg:x="2688" fg:w="1"/><text x="91.5543%" y="975.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::surface_present (1 samples, 0.03%)</title><rect x="91.3383%" y="1173" width="0.0340%" height="15" fill="rgb(243,81,16)" fg:x="2689" fg:w="1"/><text x="91.5883%" y="1183.50"></text></g><g><title>wgpu_core::present::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_present (1 samples, 0.03%)</title><rect x="91.3383%" y="1157" width="0.0340%" height="15" fill="rgb(250,14,2)" fg:x="2689" fg:w="1"/><text x="91.5883%" y="1167.50"></text></g><g><title>&lt;wgpu_hal::vulkan::Queue as wgpu_hal::Queue&lt;wgpu_hal::vulkan::Api&gt;&gt;::present (1 samples, 0.03%)</title><rect x="91.3383%" y="1141" width="0.0340%" height="15" fill="rgb(233,135,29)" fg:x="2689" fg:w="1"/><text x="91.5883%" y="1151.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::queue_present (1 samples, 0.03%)</title><rect x="91.3383%" y="1125" width="0.0340%" height="15" fill="rgb(224,64,43)" fg:x="2689" fg:w="1"/><text x="91.5883%" y="1135.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="91.3383%" y="1109" width="0.0340%" height="15" fill="rgb(238,84,13)" fg:x="2689" fg:w="1"/><text x="91.5883%" y="1119.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="91.3383%" y="1093" width="0.0340%" height="15" fill="rgb(253,48,26)" fg:x="2689" fg:w="1"/><text x="91.5883%" y="1103.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="91.3383%" y="1077" width="0.0340%" height="15" fill="rgb(205,223,31)" fg:x="2689" fg:w="1"/><text x="91.5883%" y="1087.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="91.3383%" y="1061" width="0.0340%" height="15" fill="rgb(221,41,32)" fg:x="2689" fg:w="1"/><text x="91.5883%" y="1071.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="91.3383%" y="1045" width="0.0340%" height="15" fill="rgb(213,158,31)" fg:x="2689" fg:w="1"/><text x="91.5883%" y="1055.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="91.3383%" y="1029" width="0.0340%" height="15" fill="rgb(245,126,43)" fg:x="2689" fg:w="1"/><text x="91.5883%" y="1039.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="91.3383%" y="1013" width="0.0340%" height="15" fill="rgb(227,7,22)" fg:x="2689" fg:w="1"/><text x="91.5883%" y="1023.50"></text></g><g><title>__close (1 samples, 0.03%)</title><rect x="91.3383%" y="997" width="0.0340%" height="15" fill="rgb(252,90,44)" fg:x="2689" fg:w="1"/><text x="91.5883%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="91.3383%" y="981" width="0.0340%" height="15" fill="rgb(253,91,0)" fg:x="2689" fg:w="1"/><text x="91.5883%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="91.3383%" y="965" width="0.0340%" height="15" fill="rgb(252,175,49)" fg:x="2689" fg:w="1"/><text x="91.5883%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="91.3383%" y="949" width="0.0340%" height="15" fill="rgb(246,150,1)" fg:x="2689" fg:w="1"/><text x="91.5883%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="91.3383%" y="933" width="0.0340%" height="15" fill="rgb(241,192,25)" fg:x="2689" fg:w="1"/><text x="91.5883%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="91.3383%" y="917" width="0.0340%" height="15" fill="rgb(239,187,11)" fg:x="2689" fg:w="1"/><text x="91.5883%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="91.3383%" y="901" width="0.0340%" height="15" fill="rgb(218,202,51)" fg:x="2689" fg:w="1"/><text x="91.5883%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="91.3383%" y="885" width="0.0340%" height="15" fill="rgb(225,176,8)" fg:x="2689" fg:w="1"/><text x="91.5883%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="91.3383%" y="869" width="0.0340%" height="15" fill="rgb(219,122,41)" fg:x="2689" fg:w="1"/><text x="91.5883%" y="879.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="91.3723%" y="1157" width="0.0340%" height="15" fill="rgb(248,140,20)" fg:x="2690" fg:w="1"/><text x="91.6223%" y="1167.50"></text></g><g><title>execve (1 samples, 0.03%)</title><rect x="91.3723%" y="1141" width="0.0340%" height="15" fill="rgb(245,41,37)" fg:x="2690" fg:w="1"/><text x="91.6223%" y="1151.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="91.3723%" y="1125" width="0.0340%" height="15" fill="rgb(235,82,39)" fg:x="2690" fg:w="1"/><text x="91.6223%" y="1135.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="91.3723%" y="1109" width="0.0340%" height="15" fill="rgb(230,108,42)" fg:x="2690" fg:w="1"/><text x="91.6223%" y="1119.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="91.3723%" y="1093" width="0.0340%" height="15" fill="rgb(215,150,50)" fg:x="2690" fg:w="1"/><text x="91.6223%" y="1103.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="91.3723%" y="1077" width="0.0340%" height="15" fill="rgb(233,212,5)" fg:x="2690" fg:w="1"/><text x="91.6223%" y="1087.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="91.3723%" y="1061" width="0.0340%" height="15" fill="rgb(245,80,22)" fg:x="2690" fg:w="1"/><text x="91.6223%" y="1071.50"></text></g><g><title>[libc.so.6] (12 samples, 0.41%)</title><rect x="91.3723%" y="1173" width="0.4076%" height="15" fill="rgb(238,129,16)" fg:x="2690" fg:w="12"/><text x="91.6223%" y="1183.50"></text></g><g><title>__libc_sigaction (11 samples, 0.37%)</title><rect x="91.4062%" y="1157" width="0.3736%" height="15" fill="rgb(240,19,0)" fg:x="2691" fg:w="11"/><text x="91.6562%" y="1167.50"></text></g><g><title>[unknown] (10 samples, 0.34%)</title><rect x="91.4402%" y="1141" width="0.3397%" height="15" fill="rgb(232,42,35)" fg:x="2692" fg:w="10"/><text x="91.6902%" y="1151.50"></text></g><g><title>[unknown] (9 samples, 0.31%)</title><rect x="91.4742%" y="1125" width="0.3057%" height="15" fill="rgb(223,130,24)" fg:x="2693" fg:w="9"/><text x="91.7242%" y="1135.50"></text></g><g><title>[unknown] (9 samples, 0.31%)</title><rect x="91.4742%" y="1109" width="0.3057%" height="15" fill="rgb(237,16,22)" fg:x="2693" fg:w="9"/><text x="91.7242%" y="1119.50"></text></g><g><title>[unknown] (7 samples, 0.24%)</title><rect x="91.5421%" y="1093" width="0.2378%" height="15" fill="rgb(248,192,20)" fg:x="2695" fg:w="7"/><text x="91.7921%" y="1103.50"></text></g><g><title>[unknown] (4 samples, 0.14%)</title><rect x="91.6440%" y="1077" width="0.1359%" height="15" fill="rgb(233,167,2)" fg:x="2698" fg:w="4"/><text x="91.8940%" y="1087.50"></text></g><g><title>[libvulkan.so.1.3.245] (1 samples, 0.03%)</title><rect x="91.7799%" y="1141" width="0.0340%" height="15" fill="rgb(252,71,44)" fg:x="2702" fg:w="1"/><text x="92.0299%" y="1151.50"></text></g><g><title>[libvulkan.so.1.3.245] (1 samples, 0.03%)</title><rect x="91.7799%" y="1125" width="0.0340%" height="15" fill="rgb(238,37,47)" fg:x="2702" fg:w="1"/><text x="92.0299%" y="1135.50"></text></g><g><title>[libvulkan.so.1.3.245] (1 samples, 0.03%)</title><rect x="91.7799%" y="1109" width="0.0340%" height="15" fill="rgb(214,202,54)" fg:x="2702" fg:w="1"/><text x="92.0299%" y="1119.50"></text></g><g><title>[libvulkan.so.1.3.245] (1 samples, 0.03%)</title><rect x="91.7799%" y="1093" width="0.0340%" height="15" fill="rgb(254,165,40)" fg:x="2702" fg:w="1"/><text x="92.0299%" y="1103.50"></text></g><g><title>[libvulkan.so.1.3.245] (1 samples, 0.03%)</title><rect x="91.7799%" y="1077" width="0.0340%" height="15" fill="rgb(246,173,38)" fg:x="2702" fg:w="1"/><text x="92.0299%" y="1087.50"></text></g><g><title>[libvulkan.so.1.3.245] (1 samples, 0.03%)</title><rect x="91.7799%" y="1061" width="0.0340%" height="15" fill="rgb(215,3,27)" fg:x="2702" fg:w="1"/><text x="92.0299%" y="1071.50"></text></g><g><title>[libvulkan.so.1.3.245] (1 samples, 0.03%)</title><rect x="91.7799%" y="1045" width="0.0340%" height="15" fill="rgb(239,169,51)" fg:x="2702" fg:w="1"/><text x="92.0299%" y="1055.50"></text></g><g><title>[libvulkan.so.1.3.245] (1 samples, 0.03%)</title><rect x="91.7799%" y="1029" width="0.0340%" height="15" fill="rgb(212,5,25)" fg:x="2702" fg:w="1"/><text x="92.0299%" y="1039.50"></text></g><g><title>[ld-linux-x86-64.so.2] (3 samples, 0.10%)</title><rect x="91.8818%" y="965" width="0.1019%" height="15" fill="rgb(243,45,17)" fg:x="2705" fg:w="3"/><text x="92.1318%" y="975.50"></text></g><g><title>[ld-linux-x86-64.so.2] (3 samples, 0.10%)</title><rect x="91.8818%" y="949" width="0.1019%" height="15" fill="rgb(242,97,9)" fg:x="2705" fg:w="3"/><text x="92.1318%" y="959.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.03%)</title><rect x="91.9497%" y="933" width="0.0340%" height="15" fill="rgb(228,71,31)" fg:x="2707" fg:w="1"/><text x="92.1997%" y="943.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="91.9837%" y="965" width="0.0679%" height="15" fill="rgb(252,184,16)" fg:x="2708" fg:w="2"/><text x="92.2337%" y="975.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="91.9837%" y="949" width="0.0679%" height="15" fill="rgb(236,169,46)" fg:x="2708" fg:w="2"/><text x="92.2337%" y="959.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="91.9837%" y="933" width="0.0679%" height="15" fill="rgb(207,17,47)" fg:x="2708" fg:w="2"/><text x="92.2337%" y="943.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="91.9837%" y="917" width="0.0679%" height="15" fill="rgb(206,201,28)" fg:x="2708" fg:w="2"/><text x="92.2337%" y="927.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="91.9837%" y="901" width="0.0679%" height="15" fill="rgb(224,184,23)" fg:x="2708" fg:w="2"/><text x="92.2337%" y="911.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="91.9837%" y="885" width="0.0679%" height="15" fill="rgb(208,139,48)" fg:x="2708" fg:w="2"/><text x="92.2337%" y="895.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="91.9837%" y="869" width="0.0679%" height="15" fill="rgb(208,130,10)" fg:x="2708" fg:w="2"/><text x="92.2337%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="92.0177%" y="853" width="0.0340%" height="15" fill="rgb(211,213,45)" fg:x="2709" fg:w="1"/><text x="92.2677%" y="863.50"></text></g><g><title>[libvulkan.so.1.3.245] (9 samples, 0.31%)</title><rect x="91.7799%" y="1173" width="0.3057%" height="15" fill="rgb(235,100,30)" fg:x="2702" fg:w="9"/><text x="92.0299%" y="1183.50"></text></g><g><title>[libvulkan.so.1.3.245] (9 samples, 0.31%)</title><rect x="91.7799%" y="1157" width="0.3057%" height="15" fill="rgb(206,144,31)" fg:x="2702" fg:w="9"/><text x="92.0299%" y="1167.50"></text></g><g><title>dlopen (8 samples, 0.27%)</title><rect x="91.8139%" y="1141" width="0.2717%" height="15" fill="rgb(224,200,26)" fg:x="2703" fg:w="8"/><text x="92.0639%" y="1151.50"></text></g><g><title>[libc.so.6] (8 samples, 0.27%)</title><rect x="91.8139%" y="1125" width="0.2717%" height="15" fill="rgb(247,104,53)" fg:x="2703" fg:w="8"/><text x="92.0639%" y="1135.50"></text></g><g><title>[ld-linux-x86-64.so.2] (8 samples, 0.27%)</title><rect x="91.8139%" y="1109" width="0.2717%" height="15" fill="rgb(220,14,17)" fg:x="2703" fg:w="8"/><text x="92.0639%" y="1119.50"></text></g><g><title>_dl_catch_exception (8 samples, 0.27%)</title><rect x="91.8139%" y="1093" width="0.2717%" height="15" fill="rgb(230,140,40)" fg:x="2703" fg:w="8"/><text x="92.0639%" y="1103.50"></text></g><g><title>[libc.so.6] (8 samples, 0.27%)</title><rect x="91.8139%" y="1077" width="0.2717%" height="15" fill="rgb(229,2,41)" fg:x="2703" fg:w="8"/><text x="92.0639%" y="1087.50"></text></g><g><title>[ld-linux-x86-64.so.2] (8 samples, 0.27%)</title><rect x="91.8139%" y="1061" width="0.2717%" height="15" fill="rgb(232,89,16)" fg:x="2703" fg:w="8"/><text x="92.0639%" y="1071.50"></text></g><g><title>_dl_catch_exception (8 samples, 0.27%)</title><rect x="91.8139%" y="1045" width="0.2717%" height="15" fill="rgb(247,59,52)" fg:x="2703" fg:w="8"/><text x="92.0639%" y="1055.50"></text></g><g><title>[ld-linux-x86-64.so.2] (8 samples, 0.27%)</title><rect x="91.8139%" y="1029" width="0.2717%" height="15" fill="rgb(226,110,21)" fg:x="2703" fg:w="8"/><text x="92.0639%" y="1039.50"></text></g><g><title>_dl_catch_exception (8 samples, 0.27%)</title><rect x="91.8139%" y="1013" width="0.2717%" height="15" fill="rgb(224,176,43)" fg:x="2703" fg:w="8"/><text x="92.0639%" y="1023.50"></text></g><g><title>[ld-linux-x86-64.so.2] (8 samples, 0.27%)</title><rect x="91.8139%" y="997" width="0.2717%" height="15" fill="rgb(221,73,6)" fg:x="2703" fg:w="8"/><text x="92.0639%" y="1007.50"></text></g><g><title>[ld-linux-x86-64.so.2] (8 samples, 0.27%)</title><rect x="91.8139%" y="981" width="0.2717%" height="15" fill="rgb(232,78,19)" fg:x="2703" fg:w="8"/><text x="92.0639%" y="991.50"></text></g><g><title>_GLOBAL__sub_I.00090_globals_io.cc (1 samples, 0.03%)</title><rect x="92.0516%" y="965" width="0.0340%" height="15" fill="rgb(233,112,48)" fg:x="2710" fg:w="1"/><text x="92.3016%" y="975.50"></text></g><g><title>_GLOBAL__sub_I.00090_globals_io.cc (1 samples, 0.03%)</title><rect x="92.0516%" y="949" width="0.0340%" height="15" fill="rgb(243,131,47)" fg:x="2710" fg:w="1"/><text x="92.3016%" y="959.50"></text></g><g><title>std::ios_base::Init::Init (1 samples, 0.03%)</title><rect x="92.0516%" y="933" width="0.0340%" height="15" fill="rgb(226,51,1)" fg:x="2710" fg:w="1"/><text x="92.3016%" y="943.50"></text></g><g><title>std::ios_base::Init::Init (1 samples, 0.03%)</title><rect x="92.0516%" y="917" width="0.0340%" height="15" fill="rgb(247,58,7)" fg:x="2710" fg:w="1"/><text x="92.3016%" y="927.50"></text></g><g><title>__gnu_cxx::stdio_sync_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::stdio_sync_filebuf (1 samples, 0.03%)</title><rect x="92.0516%" y="901" width="0.0340%" height="15" fill="rgb(209,7,32)" fg:x="2710" fg:w="1"/><text x="92.3016%" y="911.50"></text></g><g><title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::basic_streambuf (1 samples, 0.03%)</title><rect x="92.0516%" y="885" width="0.0340%" height="15" fill="rgb(209,39,41)" fg:x="2710" fg:w="1"/><text x="92.3016%" y="895.50"></text></g><g><title>std::locale::locale (1 samples, 0.03%)</title><rect x="92.0516%" y="869" width="0.0340%" height="15" fill="rgb(226,182,46)" fg:x="2710" fg:w="1"/><text x="92.3016%" y="879.50"></text></g><g><title>std::locale::_S_initialize_once (1 samples, 0.03%)</title><rect x="92.0516%" y="853" width="0.0340%" height="15" fill="rgb(230,219,10)" fg:x="2710" fg:w="1"/><text x="92.3016%" y="863.50"></text></g><g><title>std::locale::_S_initialize_once (1 samples, 0.03%)</title><rect x="92.0516%" y="837" width="0.0340%" height="15" fill="rgb(227,175,30)" fg:x="2710" fg:w="1"/><text x="92.3016%" y="847.50"></text></g><g><title>std::locale::_Impl::_Impl (1 samples, 0.03%)</title><rect x="92.0516%" y="821" width="0.0340%" height="15" fill="rgb(217,2,50)" fg:x="2710" fg:w="1"/><text x="92.3016%" y="831.50"></text></g><g><title>std::locale::_Impl::_Impl (1 samples, 0.03%)</title><rect x="92.0516%" y="805" width="0.0340%" height="15" fill="rgb(229,160,0)" fg:x="2710" fg:w="1"/><text x="92.3016%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="92.0516%" y="789" width="0.0340%" height="15" fill="rgb(207,78,37)" fg:x="2710" fg:w="1"/><text x="92.3016%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="92.0516%" y="773" width="0.0340%" height="15" fill="rgb(225,57,0)" fg:x="2710" fg:w="1"/><text x="92.3016%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="92.0516%" y="757" width="0.0340%" height="15" fill="rgb(232,154,2)" fg:x="2710" fg:w="1"/><text x="92.3016%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="92.0516%" y="741" width="0.0340%" height="15" fill="rgb(241,212,25)" fg:x="2710" fg:w="1"/><text x="92.3016%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="92.0516%" y="725" width="0.0340%" height="15" fill="rgb(226,69,20)" fg:x="2710" fg:w="1"/><text x="92.3016%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="92.0516%" y="709" width="0.0340%" height="15" fill="rgb(247,184,54)" fg:x="2710" fg:w="1"/><text x="92.3016%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="92.0516%" y="693" width="0.0340%" height="15" fill="rgb(210,145,0)" fg:x="2710" fg:w="1"/><text x="92.3016%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="92.0516%" y="677" width="0.0340%" height="15" fill="rgb(253,82,12)" fg:x="2710" fg:w="1"/><text x="92.3016%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="92.0516%" y="661" width="0.0340%" height="15" fill="rgb(245,42,11)" fg:x="2710" fg:w="1"/><text x="92.3016%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="92.0516%" y="645" width="0.0340%" height="15" fill="rgb(219,147,32)" fg:x="2710" fg:w="1"/><text x="92.3016%" y="655.50"></text></g><g><title>[libvulkan_radeon.so] (14 samples, 0.48%)</title><rect x="92.0856%" y="1173" width="0.4755%" height="15" fill="rgb(246,12,7)" fg:x="2711" fg:w="14"/><text x="92.3356%" y="1183.50"></text></g><g><title>[libvulkan_radeon.so] (14 samples, 0.48%)</title><rect x="92.0856%" y="1157" width="0.4755%" height="15" fill="rgb(243,50,9)" fg:x="2711" fg:w="14"/><text x="92.3356%" y="1167.50"></text></g><g><title>[libvulkan_radeon.so] (13 samples, 0.44%)</title><rect x="92.1196%" y="1141" width="0.4416%" height="15" fill="rgb(219,149,6)" fg:x="2712" fg:w="13"/><text x="92.3696%" y="1151.50"></text></g><g><title>[libvulkan_radeon.so] (12 samples, 0.41%)</title><rect x="92.1535%" y="1125" width="0.4076%" height="15" fill="rgb(241,51,42)" fg:x="2713" fg:w="12"/><text x="92.4035%" y="1135.50"></text></g><g><title>[libvulkan_radeon.so] (12 samples, 0.41%)</title><rect x="92.1535%" y="1109" width="0.4076%" height="15" fill="rgb(226,128,27)" fg:x="2713" fg:w="12"/><text x="92.4035%" y="1119.50"></text></g><g><title>[libvulkan_radeon.so] (7 samples, 0.24%)</title><rect x="92.3234%" y="1093" width="0.2378%" height="15" fill="rgb(244,144,4)" fg:x="2718" fg:w="7"/><text x="92.5734%" y="1103.50"></text></g><g><title>[libvulkan_radeon.so] (7 samples, 0.24%)</title><rect x="92.3234%" y="1077" width="0.2378%" height="15" fill="rgb(221,4,13)" fg:x="2718" fg:w="7"/><text x="92.5734%" y="1087.50"></text></g><g><title>clock_gettime (1 samples, 0.03%)</title><rect x="92.5272%" y="1061" width="0.0340%" height="15" fill="rgb(208,170,28)" fg:x="2724" fg:w="1"/><text x="92.7772%" y="1071.50"></text></g><g><title>[unknown] (37 samples, 1.26%)</title><rect x="92.5611%" y="1173" width="1.2568%" height="15" fill="rgb(226,131,13)" fg:x="2725" fg:w="37"/><text x="92.8111%" y="1183.50"></text></g><g><title>[unknown] (35 samples, 1.19%)</title><rect x="92.6291%" y="1157" width="1.1889%" height="15" fill="rgb(215,72,41)" fg:x="2727" fg:w="35"/><text x="92.8791%" y="1167.50"></text></g><g><title>[unknown] (31 samples, 1.05%)</title><rect x="92.7649%" y="1141" width="1.0530%" height="15" fill="rgb(243,108,20)" fg:x="2731" fg:w="31"/><text x="93.0149%" y="1151.50"></text></g><g><title>[unknown] (25 samples, 0.85%)</title><rect x="92.9688%" y="1125" width="0.8492%" height="15" fill="rgb(230,189,17)" fg:x="2737" fg:w="25"/><text x="93.2188%" y="1135.50"></text></g><g><title>[unknown] (17 samples, 0.58%)</title><rect x="93.2405%" y="1109" width="0.5774%" height="15" fill="rgb(220,50,17)" fg:x="2745" fg:w="17"/><text x="93.4905%" y="1119.50"></text></g><g><title>[unknown] (9 samples, 0.31%)</title><rect x="93.5122%" y="1093" width="0.3057%" height="15" fill="rgb(248,152,48)" fg:x="2753" fg:w="9"/><text x="93.7622%" y="1103.50"></text></g><g><title>[unknown] (8 samples, 0.27%)</title><rect x="93.5462%" y="1077" width="0.2717%" height="15" fill="rgb(244,91,11)" fg:x="2754" fg:w="8"/><text x="93.7962%" y="1087.50"></text></g><g><title>[unknown] (8 samples, 0.27%)</title><rect x="93.5462%" y="1061" width="0.2717%" height="15" fill="rgb(220,157,5)" fg:x="2754" fg:w="8"/><text x="93.7962%" y="1071.50"></text></g><g><title>[unknown] (5 samples, 0.17%)</title><rect x="93.6481%" y="1045" width="0.1698%" height="15" fill="rgb(253,137,8)" fg:x="2757" fg:w="5"/><text x="93.8981%" y="1055.50"></text></g><g><title>[unknown] (4 samples, 0.14%)</title><rect x="93.6821%" y="1029" width="0.1359%" height="15" fill="rgb(217,137,51)" fg:x="2758" fg:w="4"/><text x="93.9321%" y="1039.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="93.7840%" y="1013" width="0.0340%" height="15" fill="rgb(218,209,53)" fg:x="2761" fg:w="1"/><text x="94.0340%" y="1023.50"></text></g><g><title>ash::device::Device::destroy_buffer (2 samples, 0.07%)</title><rect x="93.8179%" y="741" width="0.0679%" height="15" fill="rgb(249,137,25)" fg:x="2762" fg:w="2"/><text x="94.0679%" y="751.50"></text></g><g><title>[libvulkan_radeon.so] (2 samples, 0.07%)</title><rect x="93.8179%" y="725" width="0.0679%" height="15" fill="rgb(239,155,26)" fg:x="2762" fg:w="2"/><text x="94.0679%" y="735.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::maintain (3 samples, 0.10%)</title><rect x="93.8179%" y="805" width="0.1019%" height="15" fill="rgb(227,85,46)" fg:x="2762" fg:w="3"/><text x="94.0679%" y="815.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;A&gt;::cleanup (3 samples, 0.10%)</title><rect x="93.8179%" y="789" width="0.1019%" height="15" fill="rgb(251,107,43)" fg:x="2762" fg:w="3"/><text x="94.0679%" y="799.50"></text></g><g><title>wgpu_core::device::life::NonReferencedResources&lt;A&gt;::clean (3 samples, 0.10%)</title><rect x="93.8179%" y="773" width="0.1019%" height="15" fill="rgb(234,170,33)" fg:x="2762" fg:w="3"/><text x="94.0679%" y="783.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::destroy_buffer (3 samples, 0.10%)</title><rect x="93.8179%" y="757" width="0.1019%" height="15" fill="rgb(206,29,35)" fg:x="2762" fg:w="3"/><text x="94.0679%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,gpu_alloc::allocator::GpuAllocator&lt;ash::vk::definitions::DeviceMemory&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="93.8859%" y="741" width="0.0340%" height="15" fill="rgb(227,138,25)" fg:x="2764" fg:w="1"/><text x="94.1359%" y="751.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="93.8859%" y="725" width="0.0340%" height="15" fill="rgb(249,131,35)" fg:x="2764" fg:w="1"/><text x="94.1359%" y="735.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (1 samples, 0.03%)</title><rect x="93.8859%" y="709" width="0.0340%" height="15" fill="rgb(239,6,40)" fg:x="2764" fg:w="1"/><text x="94.1359%" y="719.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;A&gt;::track_submission (2 samples, 0.07%)</title><rect x="93.9198%" y="805" width="0.0679%" height="15" fill="rgb(246,136,47)" fg:x="2765" fg:w="2"/><text x="94.1698%" y="815.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="93.9538%" y="789" width="0.0340%" height="15" fill="rgb(253,58,26)" fg:x="2766" fg:w="1"/><text x="94.2038%" y="799.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::run (7 samples, 0.24%)</title><rect x="93.8179%" y="1173" width="0.2378%" height="15" fill="rgb(237,141,10)" fg:x="2762" fg:w="7"/><text x="94.0679%" y="1183.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (7 samples, 0.24%)</title><rect x="93.8179%" y="1157" width="0.2378%" height="15" fill="rgb(234,156,12)" fg:x="2762" fg:w="7"/><text x="94.0679%" y="1167.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::spawn_exclusive_system_task::{{closure}} (7 samples, 0.24%)</title><rect x="93.8179%" y="1141" width="0.2378%" height="15" fill="rgb(243,224,36)" fg:x="2762" fg:w="7"/><text x="94.0679%" y="1151.50"></text></g><g><title>std::panic::catch_unwind (7 samples, 0.24%)</title><rect x="93.8179%" y="1125" width="0.2378%" height="15" fill="rgb(205,229,51)" fg:x="2762" fg:w="7"/><text x="94.0679%" y="1135.50"></text></g><g><title>std::panicking::try (7 samples, 0.24%)</title><rect x="93.8179%" y="1109" width="0.2378%" height="15" fill="rgb(223,189,4)" fg:x="2762" fg:w="7"/><text x="94.0679%" y="1119.50"></text></g><g><title>std::panicking::try::do_call (7 samples, 0.24%)</title><rect x="93.8179%" y="1093" width="0.2378%" height="15" fill="rgb(249,167,54)" fg:x="2762" fg:w="7"/><text x="94.0679%" y="1103.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (7 samples, 0.24%)</title><rect x="93.8179%" y="1077" width="0.2378%" height="15" fill="rgb(218,34,28)" fg:x="2762" fg:w="7"/><text x="94.0679%" y="1087.50"></text></g><g><title>core::ops::function::FnOnce::call_once (7 samples, 0.24%)</title><rect x="93.8179%" y="1061" width="0.2378%" height="15" fill="rgb(232,109,42)" fg:x="2762" fg:w="7"/><text x="94.0679%" y="1071.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::spawn_exclusive_system_task::{{closure}}::{{closure}} (7 samples, 0.24%)</title><rect x="93.8179%" y="1045" width="0.2378%" height="15" fill="rgb(248,214,46)" fg:x="2762" fg:w="7"/><text x="94.0679%" y="1055.50"></text></g><g><title>&lt;bevy_ecs::system::exclusive_function_system::ExclusiveFunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::run (7 samples, 0.24%)</title><rect x="93.8179%" y="1029" width="0.2378%" height="15" fill="rgb(244,216,40)" fg:x="2762" fg:w="7"/><text x="94.0679%" y="1039.50"></text></g><g><title>&lt;Func as bevy_ecs::system::exclusive_function_system::ExclusiveSystemParamFunction&lt;fn() .&gt; Out&gt;&gt;::run (7 samples, 0.24%)</title><rect x="93.8179%" y="1013" width="0.2378%" height="15" fill="rgb(231,226,31)" fg:x="2762" fg:w="7"/><text x="94.0679%" y="1023.50"></text></g><g><title>&lt;Func as bevy_ecs::system::exclusive_function_system::ExclusiveSystemParamFunction&lt;fn() .&gt; Out&gt;&gt;::run::call_inner (7 samples, 0.24%)</title><rect x="93.8179%" y="997" width="0.2378%" height="15" fill="rgb(238,38,43)" fg:x="2762" fg:w="7"/><text x="94.0679%" y="1007.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (7 samples, 0.24%)</title><rect x="93.8179%" y="981" width="0.2378%" height="15" fill="rgb(208,88,43)" fg:x="2762" fg:w="7"/><text x="94.0679%" y="991.50"></text></g><g><title>core::ops::function::FnMut::call_mut (7 samples, 0.24%)</title><rect x="93.8179%" y="965" width="0.2378%" height="15" fill="rgb(205,136,37)" fg:x="2762" fg:w="7"/><text x="94.0679%" y="975.50"></text></g><g><title>game_render::render_surfaces (7 samples, 0.24%)</title><rect x="93.8179%" y="949" width="0.2378%" height="15" fill="rgb(237,34,14)" fg:x="2762" fg:w="7"/><text x="94.0679%" y="959.50"></text></g><g><title>bevy_ecs::world::World::resource_scope (7 samples, 0.24%)</title><rect x="93.8179%" y="933" width="0.2378%" height="15" fill="rgb(236,193,44)" fg:x="2762" fg:w="7"/><text x="94.0679%" y="943.50"></text></g><g><title>game_render::render_surfaces::{{closure}} (7 samples, 0.24%)</title><rect x="93.8179%" y="917" width="0.2378%" height="15" fill="rgb(231,48,10)" fg:x="2762" fg:w="7"/><text x="94.0679%" y="927.50"></text></g><g><title>bevy_ecs::world::World::resource_scope (7 samples, 0.24%)</title><rect x="93.8179%" y="901" width="0.2378%" height="15" fill="rgb(213,141,34)" fg:x="2762" fg:w="7"/><text x="94.0679%" y="911.50"></text></g><g><title>game_render::render_surfaces::{{closure}}::{{closure}} (7 samples, 0.24%)</title><rect x="93.8179%" y="885" width="0.2378%" height="15" fill="rgb(249,130,34)" fg:x="2762" fg:w="7"/><text x="94.0679%" y="895.50"></text></g><g><title>wgpu::Queue::submit (7 samples, 0.24%)</title><rect x="93.8179%" y="869" width="0.2378%" height="15" fill="rgb(219,42,41)" fg:x="2762" fg:w="7"/><text x="94.0679%" y="879.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::queue_submit (7 samples, 0.24%)</title><rect x="93.8179%" y="853" width="0.2378%" height="15" fill="rgb(224,100,54)" fg:x="2762" fg:w="7"/><text x="94.0679%" y="863.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::queue_submit (7 samples, 0.24%)</title><rect x="93.8179%" y="837" width="0.2378%" height="15" fill="rgb(229,200,27)" fg:x="2762" fg:w="7"/><text x="94.0679%" y="847.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (7 samples, 0.24%)</title><rect x="93.8179%" y="821" width="0.2378%" height="15" fill="rgb(217,118,10)" fg:x="2762" fg:w="7"/><text x="94.0679%" y="831.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_encoding (2 samples, 0.07%)</title><rect x="93.9878%" y="805" width="0.0679%" height="15" fill="rgb(206,22,3)" fg:x="2767" fg:w="2"/><text x="94.2378%" y="815.50"></text></g><g><title>ash::device::Device::begin_command_buffer (2 samples, 0.07%)</title><rect x="93.9878%" y="789" width="0.0679%" height="15" fill="rgb(232,163,46)" fg:x="2767" fg:w="2"/><text x="94.2378%" y="799.50"></text></g><g><title>[libvulkan_radeon.so] (2 samples, 0.07%)</title><rect x="93.9878%" y="773" width="0.0679%" height="15" fill="rgb(206,95,13)" fg:x="2767" fg:w="2"/><text x="94.2378%" y="783.50"></text></g><g><title>calloop::sources::Dispatcher&lt;S,Data&gt;::as_source_mut (1 samples, 0.03%)</title><rect x="94.0557%" y="1045" width="0.0340%" height="15" fill="rgb(253,154,18)" fg:x="2769" fg:w="1"/><text x="94.3057%" y="1055.50"></text></g><g><title>&lt;core::cell::RefCell&lt;calloop::sources::DispatcherInner&lt;S,F&gt;&gt; as calloop::sources::ErasedDispatcher&lt;S,Data&gt;&gt;::as_source_mut (1 samples, 0.03%)</title><rect x="94.0557%" y="1029" width="0.0340%" height="15" fill="rgb(219,32,23)" fg:x="2769" fg:w="1"/><text x="94.3057%" y="1039.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (1 samples, 0.03%)</title><rect x="94.0557%" y="1013" width="0.0340%" height="15" fill="rgb(230,191,45)" fg:x="2769" fg:w="1"/><text x="94.3057%" y="1023.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (1 samples, 0.03%)</title><rect x="94.0557%" y="997" width="0.0340%" height="15" fill="rgb(229,64,36)" fg:x="2769" fg:w="1"/><text x="94.3057%" y="1007.50"></text></g><g><title>core::cell::BorrowRefMut::new (1 samples, 0.03%)</title><rect x="94.0557%" y="981" width="0.0340%" height="15" fill="rgb(205,129,25)" fg:x="2769" fg:w="1"/><text x="94.3057%" y="991.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.03%)</title><rect x="94.0897%" y="1029" width="0.0340%" height="15" fill="rgb(254,112,7)" fg:x="2770" fg:w="1"/><text x="94.3397%" y="1039.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::inner (1 samples, 0.03%)</title><rect x="94.0897%" y="1013" width="0.0340%" height="15" fill="rgb(226,53,48)" fg:x="2770" fg:w="1"/><text x="94.3397%" y="1023.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.03%)</title><rect x="94.0897%" y="997" width="0.0340%" height="15" fill="rgb(214,153,38)" fg:x="2770" fg:w="1"/><text x="94.3397%" y="1007.50"></text></g><g><title>wayland_client::display::Display::flush (2 samples, 0.07%)</title><rect x="94.0897%" y="1045" width="0.0679%" height="15" fill="rgb(243,101,7)" fg:x="2770" fg:w="2"/><text x="94.3397%" y="1055.50"></text></g><g><title>wayland_client::imp::display::DisplayInner::flush (1 samples, 0.03%)</title><rect x="94.1236%" y="1029" width="0.0340%" height="15" fill="rgb(240,140,22)" fg:x="2771" fg:w="1"/><text x="94.3736%" y="1039.50"></text></g><g><title>&lt;std::collections::hash::map::Values&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="94.2255%" y="1013" width="0.0340%" height="15" fill="rgb(235,114,2)" fg:x="2774" fg:w="1"/><text x="94.4755%" y="1023.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="94.2255%" y="997" width="0.0340%" height="15" fill="rgb(242,59,12)" fg:x="2774" fg:w="1"/><text x="94.4755%" y="1007.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="94.2255%" y="981" width="0.0340%" height="15" fill="rgb(252,134,9)" fg:x="2774" fg:w="1"/><text x="94.4755%" y="991.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="94.2255%" y="965" width="0.0340%" height="15" fill="rgb(236,4,44)" fg:x="2774" fg:w="1"/><text x="94.4755%" y="975.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::get (1 samples, 0.03%)</title><rect x="94.2595%" y="1013" width="0.0340%" height="15" fill="rgb(254,172,41)" fg:x="2775" fg:w="1"/><text x="94.5095%" y="1023.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::get_unchecked_manual (1 samples, 0.03%)</title><rect x="94.2595%" y="997" width="0.0340%" height="15" fill="rgb(244,63,20)" fg:x="2775" fg:w="1"/><text x="94.5095%" y="1007.50"></text></g><g><title>&lt;&amp;T as bevy_ecs::query::fetch::WorldQuery&gt;::set_archetype (1 samples, 0.03%)</title><rect x="94.2595%" y="981" width="0.0340%" height="15" fill="rgb(250,73,31)" fg:x="2775" fg:w="1"/><text x="94.5095%" y="991.50"></text></g><g><title>&lt;&amp;T as bevy_ecs::query::fetch::WorldQuery&gt;::set_table (1 samples, 0.03%)</title><rect x="94.2595%" y="965" width="0.0340%" height="15" fill="rgb(241,38,36)" fg:x="2775" fg:w="1"/><text x="94.5095%" y="975.50"></text></g><g><title>bevy_ecs::storage::table::Column::get_data_slice (1 samples, 0.03%)</title><rect x="94.2595%" y="949" width="0.0340%" height="15" fill="rgb(245,211,2)" fg:x="2775" fg:w="1"/><text x="94.5095%" y="959.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::get_slice (1 samples, 0.03%)</title><rect x="94.2595%" y="933" width="0.0340%" height="15" fill="rgb(206,120,28)" fg:x="2775" fg:w="1"/><text x="94.5095%" y="943.50"></text></g><g><title>&lt;bevy_ecs::change_detection::ResMut&lt;T&gt; as bevy_ecs::system::system_param::SystemParam&gt;::get_param (1 samples, 0.03%)</title><rect x="94.2935%" y="949" width="0.0340%" height="15" fill="rgb(211,59,34)" fg:x="2776" fg:w="1"/><text x="94.5435%" y="959.50"></text></g><g><title>bevy_ecs::world::unsafe_world_cell::UnsafeWorldCell::get_resource_mut_by_id (1 samples, 0.03%)</title><rect x="94.2935%" y="933" width="0.0340%" height="15" fill="rgb(233,168,5)" fg:x="2776" fg:w="1"/><text x="94.5435%" y="943.50"></text></g><g><title>bevy_ecs::storage::resource::ResourceData&lt;_&gt;::get_with_ticks (1 samples, 0.03%)</title><rect x="94.2935%" y="917" width="0.0340%" height="15" fill="rgb(234,33,13)" fg:x="2776" fg:w="1"/><text x="94.5435%" y="927.50"></text></g><g><title>bevy_ecs::storage::table::Column::get (1 samples, 0.03%)</title><rect x="94.2935%" y="901" width="0.0340%" height="15" fill="rgb(231,150,26)" fg:x="2776" fg:w="1"/><text x="94.5435%" y="911.50"></text></g><g><title>core::bool::&lt;impl bool&gt;::then (1 samples, 0.03%)</title><rect x="94.2935%" y="885" width="0.0340%" height="15" fill="rgb(217,191,4)" fg:x="2776" fg:w="1"/><text x="94.5435%" y="895.50"></text></g><g><title>bevy_ecs::storage::table::Column::get::{{closure}} (1 samples, 0.03%)</title><rect x="94.2935%" y="869" width="0.0340%" height="15" fill="rgb(246,198,38)" fg:x="2776" fg:w="1"/><text x="94.5435%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.03%)</title><rect x="94.2935%" y="853" width="0.0340%" height="15" fill="rgb(245,64,37)" fg:x="2776" fg:w="1"/><text x="94.5435%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.03%)</title><rect x="94.2935%" y="837" width="0.0340%" height="15" fill="rgb(250,30,36)" fg:x="2776" fg:w="1"/><text x="94.5435%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.03%)</title><rect x="94.2935%" y="821" width="0.0340%" height="15" fill="rgb(217,86,53)" fg:x="2776" fg:w="1"/><text x="94.5435%" y="831.50"></text></g><g><title>bevy_ecs::system::function_system::SystemState&lt;Param&gt;::get_mut (2 samples, 0.07%)</title><rect x="94.2935%" y="1013" width="0.0679%" height="15" fill="rgb(228,157,16)" fg:x="2776" fg:w="2"/><text x="94.5435%" y="1023.50"></text></g><g><title>bevy_ecs::system::function_system::SystemState&lt;Param&gt;::get_unchecked_manual (2 samples, 0.07%)</title><rect x="94.2935%" y="997" width="0.0679%" height="15" fill="rgb(217,59,31)" fg:x="2776" fg:w="2"/><text x="94.5435%" y="1007.50"></text></g><g><title>bevy_ecs::system::function_system::SystemState&lt;Param&gt;::fetch (2 samples, 0.07%)</title><rect x="94.2935%" y="981" width="0.0679%" height="15" fill="rgb(237,138,41)" fg:x="2776" fg:w="2"/><text x="94.5435%" y="991.50"></text></g><g><title>&lt;(P0,P1,P2,P3) as bevy_ecs::system::system_param::SystemParam&gt;::get_param (2 samples, 0.07%)</title><rect x="94.2935%" y="965" width="0.0679%" height="15" fill="rgb(227,91,49)" fg:x="2776" fg:w="2"/><text x="94.5435%" y="975.50"></text></g><g><title>bevy_ecs::event::_::&lt;impl bevy_ecs::system::system_param::SystemParam for bevy_ecs::event::EventWriter&lt;E&gt;&gt;::get_param (1 samples, 0.03%)</title><rect x="94.3274%" y="949" width="0.0340%" height="15" fill="rgb(247,21,44)" fg:x="2777" fg:w="1"/><text x="94.5774%" y="959.50"></text></g><g><title>&lt;(P0,) as bevy_ecs::system::system_param::SystemParam&gt;::get_param (1 samples, 0.03%)</title><rect x="94.3274%" y="933" width="0.0340%" height="15" fill="rgb(219,210,51)" fg:x="2777" fg:w="1"/><text x="94.5774%" y="943.50"></text></g><g><title>&lt;bevy_ecs::change_detection::ResMut&lt;T&gt; as bevy_ecs::system::system_param::SystemParam&gt;::get_param (1 samples, 0.03%)</title><rect x="94.3274%" y="917" width="0.0340%" height="15" fill="rgb(209,140,6)" fg:x="2777" fg:w="1"/><text x="94.5774%" y="927.50"></text></g><g><title>bevy_ecs::world::unsafe_world_cell::UnsafeWorldCell::get_resource_mut_by_id (1 samples, 0.03%)</title><rect x="94.3274%" y="901" width="0.0340%" height="15" fill="rgb(221,188,24)" fg:x="2777" fg:w="1"/><text x="94.5774%" y="911.50"></text></g><g><title>bevy_ecs::storage::resource::ResourceData&lt;_&gt;::get_with_ticks (1 samples, 0.03%)</title><rect x="94.3274%" y="885" width="0.0340%" height="15" fill="rgb(232,154,20)" fg:x="2777" fg:w="1"/><text x="94.5774%" y="895.50"></text></g><g><title>bevy_ecs::storage::table::Column::get (1 samples, 0.03%)</title><rect x="94.3274%" y="869" width="0.0340%" height="15" fill="rgb(244,137,50)" fg:x="2777" fg:w="1"/><text x="94.5774%" y="879.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.03%)</title><rect x="94.3614%" y="933" width="0.0340%" height="15" fill="rgb(225,185,43)" fg:x="2778" fg:w="1"/><text x="94.6114%" y="943.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::inner (1 samples, 0.03%)</title><rect x="94.3614%" y="917" width="0.0340%" height="15" fill="rgb(213,205,38)" fg:x="2778" fg:w="1"/><text x="94.6114%" y="927.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.03%)</title><rect x="94.3614%" y="901" width="0.0340%" height="15" fill="rgb(236,73,12)" fg:x="2778" fg:w="1"/><text x="94.6114%" y="911.50"></text></g><g><title>winit::platform_impl::platform::sticky_exit_callback (8 samples, 0.27%)</title><rect x="94.1576%" y="1045" width="0.2717%" height="15" fill="rgb(235,219,13)" fg:x="2772" fg:w="8"/><text x="94.4076%" y="1055.50"></text></g><g><title>game_window::main_loop::{{closure}} (8 samples, 0.27%)</title><rect x="94.1576%" y="1029" width="0.2717%" height="15" fill="rgb(218,59,36)" fg:x="2772" fg:w="8"/><text x="94.4076%" y="1039.50"></text></g><g><title>winit::window::Window::request_redraw (2 samples, 0.07%)</title><rect x="94.3614%" y="1013" width="0.0679%" height="15" fill="rgb(205,110,39)" fg:x="2778" fg:w="2"/><text x="94.6114%" y="1023.50"></text></g><g><title>winit::platform_impl::platform::Window::request_redraw (2 samples, 0.07%)</title><rect x="94.3614%" y="997" width="0.0679%" height="15" fill="rgb(218,206,42)" fg:x="2778" fg:w="2"/><text x="94.6114%" y="1007.50"></text></g><g><title>winit::platform_impl::platform::wayland::window::Window::request_redraw (2 samples, 0.07%)</title><rect x="94.3614%" y="981" width="0.0679%" height="15" fill="rgb(248,125,24)" fg:x="2778" fg:w="2"/><text x="94.6114%" y="991.50"></text></g><g><title>winit::platform_impl::platform::wayland::window::Window::send_request (2 samples, 0.07%)</title><rect x="94.3614%" y="965" width="0.0679%" height="15" fill="rgb(242,28,27)" fg:x="2778" fg:w="2"/><text x="94.6114%" y="975.50"></text></g><g><title>calloop::sources::ping::eventfd::Ping::ping (2 samples, 0.07%)</title><rect x="94.3614%" y="949" width="0.0679%" height="15" fill="rgb(216,228,15)" fg:x="2778" fg:w="2"/><text x="94.6114%" y="959.50"></text></g><g><title>calloop::sources::ping::eventfd::send_ping (1 samples, 0.03%)</title><rect x="94.3954%" y="933" width="0.0340%" height="15" fill="rgb(235,116,46)" fg:x="2779" fg:w="1"/><text x="94.6454%" y="943.50"></text></g><g><title>nix::unistd::write (1 samples, 0.03%)</title><rect x="94.3954%" y="917" width="0.0340%" height="15" fill="rgb(224,18,32)" fg:x="2779" fg:w="1"/><text x="94.6454%" y="927.50"></text></g><g><title>write (1 samples, 0.03%)</title><rect x="94.3954%" y="901" width="0.0340%" height="15" fill="rgb(252,5,12)" fg:x="2779" fg:w="1"/><text x="94.6454%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="94.3954%" y="885" width="0.0340%" height="15" fill="rgb(251,36,5)" fg:x="2779" fg:w="1"/><text x="94.6454%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="94.3954%" y="869" width="0.0340%" height="15" fill="rgb(217,53,14)" fg:x="2779" fg:w="1"/><text x="94.6454%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="94.3954%" y="853" width="0.0340%" height="15" fill="rgb(215,86,45)" fg:x="2779" fg:w="1"/><text x="94.6454%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="94.3954%" y="837" width="0.0340%" height="15" fill="rgb(242,169,11)" fg:x="2779" fg:w="1"/><text x="94.6454%" y="847.50"></text></g><g><title>&lt;calloop::sources::ping::eventfd::PingSource as calloop::sources::EventSource&gt;::process_events (1 samples, 0.03%)</title><rect x="94.4293%" y="981" width="0.0340%" height="15" fill="rgb(211,213,45)" fg:x="2780" fg:w="1"/><text x="94.6793%" y="991.50"></text></g><g><title>&lt;calloop::sources::generic::Generic&lt;F,E&gt; as calloop::sources::EventSource&gt;::process_events (1 samples, 0.03%)</title><rect x="94.4293%" y="965" width="0.0340%" height="15" fill="rgb(205,88,11)" fg:x="2780" fg:w="1"/><text x="94.6793%" y="975.50"></text></g><g><title>&lt;calloop::sources::ping::eventfd::PingSource as calloop::sources::EventSource&gt;::process_events::{{closure}} (1 samples, 0.03%)</title><rect x="94.4293%" y="949" width="0.0340%" height="15" fill="rgb(252,69,26)" fg:x="2780" fg:w="1"/><text x="94.6793%" y="959.50"></text></g><g><title>calloop::sources::ping::eventfd::drain_ping (1 samples, 0.03%)</title><rect x="94.4293%" y="933" width="0.0340%" height="15" fill="rgb(246,123,37)" fg:x="2780" fg:w="1"/><text x="94.6793%" y="943.50"></text></g><g><title>nix::unistd::read (1 samples, 0.03%)</title><rect x="94.4293%" y="917" width="0.0340%" height="15" fill="rgb(212,205,5)" fg:x="2780" fg:w="1"/><text x="94.6793%" y="927.50"></text></g><g><title>read (1 samples, 0.03%)</title><rect x="94.4293%" y="901" width="0.0340%" height="15" fill="rgb(253,148,0)" fg:x="2780" fg:w="1"/><text x="94.6793%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="94.4293%" y="885" width="0.0340%" height="15" fill="rgb(239,22,4)" fg:x="2780" fg:w="1"/><text x="94.6793%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="94.4293%" y="869" width="0.0340%" height="15" fill="rgb(226,26,53)" fg:x="2780" fg:w="1"/><text x="94.6793%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="94.4293%" y="853" width="0.0340%" height="15" fill="rgb(225,229,45)" fg:x="2780" fg:w="1"/><text x="94.6793%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="94.4293%" y="837" width="0.0340%" height="15" fill="rgb(220,60,37)" fg:x="2780" fg:w="1"/><text x="94.6793%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="94.4293%" y="821" width="0.0340%" height="15" fill="rgb(217,180,35)" fg:x="2780" fg:w="1"/><text x="94.6793%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="94.4293%" y="805" width="0.0340%" height="15" fill="rgb(229,7,53)" fg:x="2780" fg:w="1"/><text x="94.6793%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="94.4293%" y="789" width="0.0340%" height="15" fill="rgb(254,137,3)" fg:x="2780" fg:w="1"/><text x="94.6793%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="94.4293%" y="773" width="0.0340%" height="15" fill="rgb(215,140,41)" fg:x="2780" fg:w="1"/><text x="94.6793%" y="783.50"></text></g><g><title>&lt;core::cell::RefCell&lt;calloop::sources::DispatcherInner&lt;S,F&gt;&gt; as calloop::sources::EventDispatcher&lt;Data&gt;&gt;::process_events (3 samples, 0.10%)</title><rect x="94.4293%" y="997" width="0.1019%" height="15" fill="rgb(250,80,15)" fg:x="2780" fg:w="3"/><text x="94.6793%" y="1007.50"></text></g><g><title>&lt;smithay_client_toolkit::event_loop::WaylandSource as calloop::sources::EventSource&gt;::process_events (2 samples, 0.07%)</title><rect x="94.4633%" y="981" width="0.0679%" height="15" fill="rgb(252,191,6)" fg:x="2781" fg:w="2"/><text x="94.7133%" y="991.50"></text></g><g><title>&lt;calloop::sources::generic::Generic&lt;F,E&gt; as calloop::sources::EventSource&gt;::process_events (2 samples, 0.07%)</title><rect x="94.4633%" y="965" width="0.0679%" height="15" fill="rgb(246,217,18)" fg:x="2781" fg:w="2"/><text x="94.7133%" y="975.50"></text></g><g><title>&lt;smithay_client_toolkit::event_loop::WaylandSource as calloop::sources::EventSource&gt;::process_events::{{closure}} (2 samples, 0.07%)</title><rect x="94.4633%" y="949" width="0.0679%" height="15" fill="rgb(223,93,7)" fg:x="2781" fg:w="2"/><text x="94.7133%" y="959.50"></text></g><g><title>wayland_client::event_queue::ReadEventsGuard::read_events (2 samples, 0.07%)</title><rect x="94.4633%" y="933" width="0.0679%" height="15" fill="rgb(225,55,52)" fg:x="2781" fg:w="2"/><text x="94.7133%" y="943.50"></text></g><g><title>wayland_client::imp::event_queue::EventQueueInner::read_events (2 samples, 0.07%)</title><rect x="94.4633%" y="917" width="0.0679%" height="15" fill="rgb(240,31,24)" fg:x="2781" fg:w="2"/><text x="94.7133%" y="927.50"></text></g><g><title>wl_display_read_events (2 samples, 0.07%)</title><rect x="94.4633%" y="901" width="0.0679%" height="15" fill="rgb(205,56,52)" fg:x="2781" fg:w="2"/><text x="94.7133%" y="911.50"></text></g><g><title>recvmsg (1 samples, 0.03%)</title><rect x="94.4973%" y="885" width="0.0340%" height="15" fill="rgb(246,146,12)" fg:x="2782" fg:w="1"/><text x="94.7473%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="94.4973%" y="869" width="0.0340%" height="15" fill="rgb(239,84,36)" fg:x="2782" fg:w="1"/><text x="94.7473%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="94.4973%" y="853" width="0.0340%" height="15" fill="rgb(207,41,40)" fg:x="2782" fg:w="1"/><text x="94.7473%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="94.4973%" y="837" width="0.0340%" height="15" fill="rgb(241,179,25)" fg:x="2782" fg:w="1"/><text x="94.7473%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="94.4973%" y="821" width="0.0340%" height="15" fill="rgb(210,0,34)" fg:x="2782" fg:w="1"/><text x="94.7473%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="94.4973%" y="805" width="0.0340%" height="15" fill="rgb(225,217,29)" fg:x="2782" fg:w="1"/><text x="94.7473%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="94.4973%" y="789" width="0.0340%" height="15" fill="rgb(216,191,38)" fg:x="2782" fg:w="1"/><text x="94.7473%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="94.4973%" y="773" width="0.0340%" height="15" fill="rgb(232,140,52)" fg:x="2782" fg:w="1"/><text x="94.7473%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="94.4973%" y="757" width="0.0340%" height="15" fill="rgb(223,158,51)" fg:x="2782" fg:w="1"/><text x="94.7473%" y="767.50"></text></g><g><title>calloop::loop_logic::EventLoop&lt;Data&gt;::dispatch_events (4 samples, 0.14%)</title><rect x="94.4293%" y="1013" width="0.1359%" height="15" fill="rgb(235,29,51)" fg:x="2780" fg:w="4"/><text x="94.6793%" y="1023.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.03%)</title><rect x="94.5312%" y="997" width="0.0340%" height="15" fill="rgb(215,181,18)" fg:x="2783" fg:w="1"/><text x="94.7812%" y="1007.50"></text></g><g><title>clock_gettime (1 samples, 0.03%)</title><rect x="94.5312%" y="981" width="0.0340%" height="15" fill="rgb(227,125,34)" fg:x="2783" fg:w="1"/><text x="94.7812%" y="991.50"></text></g><g><title>winit::platform_impl::platform::wayland::event_loop::EventLoop&lt;T&gt;::loop_dispatch (5 samples, 0.17%)</title><rect x="94.4293%" y="1045" width="0.1698%" height="15" fill="rgb(230,197,49)" fg:x="2780" fg:w="5"/><text x="94.6793%" y="1055.50"></text></g><g><title>calloop::loop_logic::EventLoop&lt;Data&gt;::dispatch (5 samples, 0.17%)</title><rect x="94.4293%" y="1029" width="0.1698%" height="15" fill="rgb(239,141,16)" fg:x="2780" fg:w="5"/><text x="94.6793%" y="1039.50"></text></g><g><title>calloop::loop_logic::EventLoop&lt;Data&gt;::invoke_pre_run (1 samples, 0.03%)</title><rect x="94.5652%" y="1013" width="0.0340%" height="15" fill="rgb(225,105,43)" fg:x="2784" fg:w="1"/><text x="94.8152%" y="1023.50"></text></g><g><title>&lt;core::cell::RefCell&lt;calloop::sources::DispatcherInner&lt;S,F&gt;&gt; as calloop::sources::EventDispatcher&lt;Data&gt;&gt;::pre_run (1 samples, 0.03%)</title><rect x="94.5652%" y="997" width="0.0340%" height="15" fill="rgb(214,131,14)" fg:x="2784" fg:w="1"/><text x="94.8152%" y="1007.50"></text></g><g><title>&lt;smithay_client_toolkit::event_loop::WaylandSource as calloop::sources::EventSource&gt;::pre_run (1 samples, 0.03%)</title><rect x="94.5652%" y="981" width="0.0340%" height="15" fill="rgb(229,177,11)" fg:x="2784" fg:w="1"/><text x="94.8152%" y="991.50"></text></g><g><title>wayland_client::display::Display::flush (1 samples, 0.03%)</title><rect x="94.5652%" y="965" width="0.0340%" height="15" fill="rgb(231,180,14)" fg:x="2784" fg:w="1"/><text x="94.8152%" y="975.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.03%)</title><rect x="94.5652%" y="949" width="0.0340%" height="15" fill="rgb(232,88,2)" fg:x="2784" fg:w="1"/><text x="94.8152%" y="959.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::inner (1 samples, 0.03%)</title><rect x="94.5652%" y="933" width="0.0340%" height="15" fill="rgb(205,220,8)" fg:x="2784" fg:w="1"/><text x="94.8152%" y="943.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.03%)</title><rect x="94.5652%" y="917" width="0.0340%" height="15" fill="rgb(225,23,53)" fg:x="2784" fg:w="1"/><text x="94.8152%" y="927.50"></text></g><g><title>bevy_app::app::App::run (17 samples, 0.58%)</title><rect x="94.0557%" y="1173" width="0.5774%" height="15" fill="rgb(213,62,29)" fg:x="2769" fg:w="17"/><text x="94.3057%" y="1183.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::Fn&lt;Args&gt;&gt;::call (17 samples, 0.58%)</title><rect x="94.0557%" y="1157" width="0.5774%" height="15" fill="rgb(227,75,7)" fg:x="2769" fg:w="17"/><text x="94.3057%" y="1167.50"></text></g><g><title>core::ops::function::Fn::call (17 samples, 0.58%)</title><rect x="94.0557%" y="1141" width="0.5774%" height="15" fill="rgb(207,105,14)" fg:x="2769" fg:w="17"/><text x="94.3057%" y="1151.50"></text></g><g><title>game_window::main_loop (17 samples, 0.58%)</title><rect x="94.0557%" y="1125" width="0.5774%" height="15" fill="rgb(245,62,29)" fg:x="2769" fg:w="17"/><text x="94.3057%" y="1135.50"></text></g><g><title>winit::event_loop::EventLoop&lt;T&gt;::run (17 samples, 0.58%)</title><rect x="94.0557%" y="1109" width="0.5774%" height="15" fill="rgb(236,202,4)" fg:x="2769" fg:w="17"/><text x="94.3057%" y="1119.50"></text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::run (17 samples, 0.58%)</title><rect x="94.0557%" y="1093" width="0.5774%" height="15" fill="rgb(250,67,1)" fg:x="2769" fg:w="17"/><text x="94.3057%" y="1103.50"></text></g><g><title>winit::platform_impl::platform::wayland::event_loop::EventLoop&lt;T&gt;::run (17 samples, 0.58%)</title><rect x="94.0557%" y="1077" width="0.5774%" height="15" fill="rgb(253,115,44)" fg:x="2769" fg:w="17"/><text x="94.3057%" y="1087.50"></text></g><g><title>winit::platform_impl::platform::wayland::event_loop::EventLoop&lt;T&gt;::run_return (17 samples, 0.58%)</title><rect x="94.0557%" y="1061" width="0.5774%" height="15" fill="rgb(251,139,18)" fg:x="2769" fg:w="17"/><text x="94.3057%" y="1071.50"></text></g><g><title>winit::platform_impl::platform::wayland::event_loop::EventLoop&lt;T&gt;::with_state (1 samples, 0.03%)</title><rect x="94.5992%" y="1045" width="0.0340%" height="15" fill="rgb(218,22,32)" fg:x="2785" fg:w="1"/><text x="94.8492%" y="1055.50"></text></g><g><title>&lt;game_render::pipeline::MaterialPipeline as bevy_ecs::world::FromWorld&gt;::from_world::{{closure}} (1 samples, 0.03%)</title><rect x="94.6332%" y="1157" width="0.0340%" height="15" fill="rgb(243,53,5)" fg:x="2786" fg:w="1"/><text x="94.8832%" y="1167.50"></text></g><g><title>bevy_ecs::world::World::resource_scope (1 samples, 0.03%)</title><rect x="94.6332%" y="1141" width="0.0340%" height="15" fill="rgb(227,56,16)" fg:x="2786" fg:w="1"/><text x="94.8832%" y="1151.50"></text></g><g><title>&lt;game_render::pipeline::MaterialPipeline as bevy_ecs::world::FromWorld&gt;::from_world::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="94.6332%" y="1125" width="0.0340%" height="15" fill="rgb(245,53,0)" fg:x="2786" fg:w="1"/><text x="94.8832%" y="1135.50"></text></g><g><title>game_render::pipeline::MaterialPipeline::new (1 samples, 0.03%)</title><rect x="94.6332%" y="1109" width="0.0340%" height="15" fill="rgb(216,170,35)" fg:x="2786" fg:w="1"/><text x="94.8832%" y="1119.50"></text></g><g><title>wgpu::Device::create_shader_module (1 samples, 0.03%)</title><rect x="94.6332%" y="1093" width="0.0340%" height="15" fill="rgb(211,200,8)" fg:x="2786" fg:w="1"/><text x="94.8832%" y="1103.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_create_shader_module (1 samples, 0.03%)</title><rect x="94.6332%" y="1077" width="0.0340%" height="15" fill="rgb(228,204,44)" fg:x="2786" fg:w="1"/><text x="94.8832%" y="1087.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::device_create_shader_module (1 samples, 0.03%)</title><rect x="94.6332%" y="1061" width="0.0340%" height="15" fill="rgb(214,121,17)" fg:x="2786" fg:w="1"/><text x="94.8832%" y="1071.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_shader_module (1 samples, 0.03%)</title><rect x="94.6332%" y="1045" width="0.0340%" height="15" fill="rgb(233,64,38)" fg:x="2786" fg:w="1"/><text x="94.8832%" y="1055.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_shader_module (1 samples, 0.03%)</title><rect x="94.6332%" y="1029" width="0.0340%" height="15" fill="rgb(253,54,19)" fg:x="2786" fg:w="1"/><text x="94.8832%" y="1039.50"></text></g><g><title>naga::front::wgsl::parse_str (1 samples, 0.03%)</title><rect x="94.6332%" y="1013" width="0.0340%" height="15" fill="rgb(253,94,18)" fg:x="2786" fg:w="1"/><text x="94.8832%" y="1023.50"></text></g><g><title>naga::front::wgsl::Frontend::parse (1 samples, 0.03%)</title><rect x="94.6332%" y="997" width="0.0340%" height="15" fill="rgb(227,57,52)" fg:x="2786" fg:w="1"/><text x="94.8832%" y="1007.50"></text></g><g><title>naga::front::wgsl::Frontend::inner (1 samples, 0.03%)</title><rect x="94.6332%" y="981" width="0.0340%" height="15" fill="rgb(230,228,50)" fg:x="2786" fg:w="1"/><text x="94.8832%" y="991.50"></text></g><g><title>naga::front::wgsl::parse::Parser::parse (1 samples, 0.03%)</title><rect x="94.6332%" y="965" width="0.0340%" height="15" fill="rgb(217,205,27)" fg:x="2786" fg:w="1"/><text x="94.8832%" y="975.50"></text></g><g><title>naga::front::wgsl::parse::Parser::global_decl (1 samples, 0.03%)</title><rect x="94.6332%" y="949" width="0.0340%" height="15" fill="rgb(252,71,50)" fg:x="2786" fg:w="1"/><text x="94.8832%" y="959.50"></text></g><g><title>naga::front::wgsl::parse::Parser::variable_decl (1 samples, 0.03%)</title><rect x="94.6332%" y="933" width="0.0340%" height="15" fill="rgb(209,86,4)" fg:x="2786" fg:w="1"/><text x="94.8832%" y="943.50"></text></g><g><title>naga::front::wgsl::parse::Parser::type_decl (1 samples, 0.03%)</title><rect x="94.6332%" y="917" width="0.0340%" height="15" fill="rgb(229,94,0)" fg:x="2786" fg:w="1"/><text x="94.8832%" y="927.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (1 samples, 0.03%)</title><rect x="94.6332%" y="901" width="0.0340%" height="15" fill="rgb(252,223,21)" fg:x="2786" fg:w="1"/><text x="94.8832%" y="911.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (1 samples, 0.03%)</title><rect x="94.6332%" y="885" width="0.0340%" height="15" fill="rgb(230,210,4)" fg:x="2786" fg:w="1"/><text x="94.8832%" y="895.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.03%)</title><rect x="94.6332%" y="869" width="0.0340%" height="15" fill="rgb(240,149,38)" fg:x="2786" fg:w="1"/><text x="94.8832%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.03%)</title><rect x="94.6332%" y="853" width="0.0340%" height="15" fill="rgb(254,105,20)" fg:x="2786" fg:w="1"/><text x="94.8832%" y="863.50"></text></g><g><title>wgpu_core::command::CommandEncoder&lt;A&gt;::open_pass (1 samples, 0.03%)</title><rect x="94.6671%" y="997" width="0.0340%" height="15" fill="rgb(253,87,46)" fg:x="2787" fg:w="1"/><text x="94.9171%" y="1007.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_encoding (1 samples, 0.03%)</title><rect x="94.6671%" y="981" width="0.0340%" height="15" fill="rgb(253,116,33)" fg:x="2787" fg:w="1"/><text x="94.9171%" y="991.50"></text></g><g><title>ash::device::Device::begin_command_buffer (1 samples, 0.03%)</title><rect x="94.6671%" y="965" width="0.0340%" height="15" fill="rgb(229,198,5)" fg:x="2787" fg:w="1"/><text x="94.9171%" y="975.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="94.6671%" y="949" width="0.0340%" height="15" fill="rgb(242,38,37)" fg:x="2787" fg:w="1"/><text x="94.9171%" y="959.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="94.6671%" y="933" width="0.0340%" height="15" fill="rgb(242,69,53)" fg:x="2787" fg:w="1"/><text x="94.9171%" y="943.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="94.6671%" y="917" width="0.0340%" height="15" fill="rgb(249,80,16)" fg:x="2787" fg:w="1"/><text x="94.9171%" y="927.50"></text></g><g><title>&lt;game_render::pipeline::MainPass as game_render::graph::Node&gt;::render (2 samples, 0.07%)</title><rect x="94.6671%" y="1109" width="0.0679%" height="15" fill="rgb(206,128,11)" fg:x="2787" fg:w="2"/><text x="94.9171%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (2 samples, 0.07%)</title><rect x="94.6671%" y="1093" width="0.0679%" height="15" fill="rgb(212,35,20)" fg:x="2787" fg:w="2"/><text x="94.9171%" y="1103.50"></text></g><g><title>&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (2 samples, 0.07%)</title><rect x="94.6671%" y="1077" width="0.0679%" height="15" fill="rgb(236,79,13)" fg:x="2787" fg:w="2"/><text x="94.9171%" y="1087.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::command_encoder_end_render_pass (2 samples, 0.07%)</title><rect x="94.6671%" y="1061" width="0.0679%" height="15" fill="rgb(233,123,3)" fg:x="2787" fg:w="2"/><text x="94.9171%" y="1071.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::command_encoder_end_render_pass (2 samples, 0.07%)</title><rect x="94.6671%" y="1045" width="0.0679%" height="15" fill="rgb(214,93,52)" fg:x="2787" fg:w="2"/><text x="94.9171%" y="1055.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (2 samples, 0.07%)</title><rect x="94.6671%" y="1029" width="0.0679%" height="15" fill="rgb(251,37,40)" fg:x="2787" fg:w="2"/><text x="94.9171%" y="1039.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (2 samples, 0.07%)</title><rect x="94.6671%" y="1013" width="0.0679%" height="15" fill="rgb(227,80,54)" fg:x="2787" fg:w="2"/><text x="94.9171%" y="1023.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;A&gt;::start (1 samples, 0.03%)</title><rect x="94.7011%" y="997" width="0.0340%" height="15" fill="rgb(254,48,11)" fg:x="2788" fg:w="1"/><text x="94.9511%" y="1007.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;A&gt;::insert_barriers_from_scope (1 samples, 0.03%)</title><rect x="94.7351%" y="1013" width="0.0340%" height="15" fill="rgb(235,193,26)" fg:x="2789" fg:w="1"/><text x="94.9851%" y="1023.50"></text></g><g><title>wgpu_core::track::texture::TextureTracker&lt;A&gt;::set_from_usage_scope (1 samples, 0.03%)</title><rect x="94.7351%" y="997" width="0.0340%" height="15" fill="rgb(229,99,21)" fg:x="2789" fg:w="1"/><text x="94.9851%" y="1007.50"></text></g><g><title>wgpu_core::track::texture::insert_or_barrier_update (1 samples, 0.03%)</title><rect x="94.7351%" y="981" width="0.0340%" height="15" fill="rgb(211,140,41)" fg:x="2789" fg:w="1"/><text x="94.9851%" y="991.50"></text></g><g><title>wgpu_core::track::texture::insert (1 samples, 0.03%)</title><rect x="94.7351%" y="965" width="0.0340%" height="15" fill="rgb(240,227,30)" fg:x="2789" fg:w="1"/><text x="94.9851%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.03%)</title><rect x="94.7690%" y="901" width="0.0340%" height="15" fill="rgb(215,224,45)" fg:x="2790" fg:w="1"/><text x="95.0190%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.03%)</title><rect x="94.7690%" y="885" width="0.0340%" height="15" fill="rgb(206,123,31)" fg:x="2790" fg:w="1"/><text x="95.0190%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1 samples, 0.03%)</title><rect x="94.7690%" y="869" width="0.0340%" height="15" fill="rgb(210,138,16)" fg:x="2790" fg:w="1"/><text x="95.0190%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.03%)</title><rect x="94.7690%" y="853" width="0.0340%" height="15" fill="rgb(228,57,28)" fg:x="2790" fg:w="1"/><text x="95.0190%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.03%)</title><rect x="94.7690%" y="837" width="0.0340%" height="15" fill="rgb(242,170,10)" fg:x="2790" fg:w="1"/><text x="95.0190%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.03%)</title><rect x="94.7690%" y="821" width="0.0340%" height="15" fill="rgb(228,214,39)" fg:x="2790" fg:w="1"/><text x="95.0190%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.03%)</title><rect x="94.7690%" y="805" width="0.0340%" height="15" fill="rgb(218,179,33)" fg:x="2790" fg:w="1"/><text x="95.0190%" y="815.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.03%)</title><rect x="94.7690%" y="789" width="0.0340%" height="15" fill="rgb(235,193,39)" fg:x="2790" fg:w="1"/><text x="95.0190%" y="799.50"></text></g><g><title>malloc (1 samples, 0.03%)</title><rect x="94.7690%" y="773" width="0.0340%" height="15" fill="rgb(219,221,36)" fg:x="2790" fg:w="1"/><text x="95.0190%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (3 samples, 0.10%)</title><rect x="94.7351%" y="1109" width="0.1019%" height="15" fill="rgb(248,218,19)" fg:x="2789" fg:w="3"/><text x="94.9851%" y="1119.50"></text></g><g><title>&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (3 samples, 0.10%)</title><rect x="94.7351%" y="1093" width="0.1019%" height="15" fill="rgb(205,50,9)" fg:x="2789" fg:w="3"/><text x="94.9851%" y="1103.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::command_encoder_end_render_pass (3 samples, 0.10%)</title><rect x="94.7351%" y="1077" width="0.1019%" height="15" fill="rgb(238,81,28)" fg:x="2789" fg:w="3"/><text x="94.9851%" y="1087.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::command_encoder_end_render_pass (3 samples, 0.10%)</title><rect x="94.7351%" y="1061" width="0.1019%" height="15" fill="rgb(235,110,19)" fg:x="2789" fg:w="3"/><text x="94.9851%" y="1071.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (3 samples, 0.10%)</title><rect x="94.7351%" y="1045" width="0.1019%" height="15" fill="rgb(214,7,14)" fg:x="2789" fg:w="3"/><text x="94.9851%" y="1055.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (3 samples, 0.10%)</title><rect x="94.7351%" y="1029" width="0.1019%" height="15" fill="rgb(211,77,3)" fg:x="2789" fg:w="3"/><text x="94.9851%" y="1039.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;A&gt;::start (2 samples, 0.07%)</title><rect x="94.7690%" y="1013" width="0.0679%" height="15" fill="rgb(229,5,9)" fg:x="2790" fg:w="2"/><text x="95.0190%" y="1023.50"></text></g><g><title>wgpu_core::track::stateless::StatelessTracker&lt;A,T,Id&gt;::add_single (2 samples, 0.07%)</title><rect x="94.7690%" y="997" width="0.0679%" height="15" fill="rgb(225,90,11)" fg:x="2790" fg:w="2"/><text x="95.0190%" y="1007.50"></text></g><g><title>wgpu_core::track::stateless::StatelessTracker&lt;A,T,Id&gt;::allow_index (2 samples, 0.07%)</title><rect x="94.7690%" y="981" width="0.0679%" height="15" fill="rgb(242,56,8)" fg:x="2790" fg:w="2"/><text x="95.0190%" y="991.50"></text></g><g><title>wgpu_core::track::stateless::StatelessTracker&lt;A,T,Id&gt;::set_size (2 samples, 0.07%)</title><rect x="94.7690%" y="965" width="0.0679%" height="15" fill="rgb(249,212,39)" fg:x="2790" fg:w="2"/><text x="95.0190%" y="975.50"></text></g><g><title>wgpu_core::track::metadata::ResourceMetadata&lt;A&gt;::set_size (2 samples, 0.07%)</title><rect x="94.7690%" y="949" width="0.0679%" height="15" fill="rgb(236,90,9)" fg:x="2790" fg:w="2"/><text x="95.0190%" y="959.50"></text></g><g><title>wgpu_core::track::metadata::resize_bitvec (2 samples, 0.07%)</title><rect x="94.7690%" y="933" width="0.0679%" height="15" fill="rgb(206,88,35)" fg:x="2790" fg:w="2"/><text x="95.0190%" y="943.50"></text></g><g><title>bit_vec::BitVec&lt;B&gt;::grow (2 samples, 0.07%)</title><rect x="94.7690%" y="917" width="0.0679%" height="15" fill="rgb(205,126,30)" fg:x="2790" fg:w="2"/><text x="95.0190%" y="927.50"></text></g><g><title>bit_vec::blocks_for_bits (1 samples, 0.03%)</title><rect x="94.8030%" y="901" width="0.0340%" height="15" fill="rgb(230,176,12)" fg:x="2791" fg:w="1"/><text x="95.0530%" y="911.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;A&gt;::insert_barriers_from_tracker (1 samples, 0.03%)</title><rect x="94.8370%" y="1045" width="0.0340%" height="15" fill="rgb(243,19,9)" fg:x="2792" fg:w="1"/><text x="95.0870%" y="1055.50"></text></g><g><title>wgpu_core::track::texture::TextureTracker&lt;A&gt;::set_from_tracker (1 samples, 0.03%)</title><rect x="94.8370%" y="1029" width="0.0340%" height="15" fill="rgb(245,171,17)" fg:x="2792" fg:w="1"/><text x="95.0870%" y="1039.50"></text></g><g><title>wgpu_core::track::texture::insert_or_barrier_update (1 samples, 0.03%)</title><rect x="94.8370%" y="1013" width="0.0340%" height="15" fill="rgb(227,52,21)" fg:x="2792" fg:w="1"/><text x="95.0870%" y="1023.50"></text></g><g><title>wgpu_core::track::texture::barrier (1 samples, 0.03%)</title><rect x="94.8370%" y="997" width="0.0340%" height="15" fill="rgb(238,69,14)" fg:x="2792" fg:w="1"/><text x="95.0870%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.03%)</title><rect x="94.8370%" y="981" width="0.0340%" height="15" fill="rgb(241,156,39)" fg:x="2792" fg:w="1"/><text x="95.0870%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.03%)</title><rect x="94.8370%" y="965" width="0.0340%" height="15" fill="rgb(212,227,28)" fg:x="2792" fg:w="1"/><text x="95.0870%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.03%)</title><rect x="94.8370%" y="949" width="0.0340%" height="15" fill="rgb(209,118,27)" fg:x="2792" fg:w="1"/><text x="95.0870%" y="959.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::destroy_bind_group (1 samples, 0.03%)</title><rect x="94.8709%" y="997" width="0.0340%" height="15" fill="rgb(226,102,5)" fg:x="2793" fg:w="1"/><text x="95.1209%" y="1007.50"></text></g><g><title>gpu_descriptor::allocator::DescriptorAllocator&lt;P,S&gt;::free (1 samples, 0.03%)</title><rect x="94.8709%" y="981" width="0.0340%" height="15" fill="rgb(223,34,3)" fg:x="2793" fg:w="1"/><text x="95.1209%" y="991.50"></text></g><g><title>gpu_descriptor::allocator::DescriptorBucket&lt;P&gt;::free (1 samples, 0.03%)</title><rect x="94.8709%" y="965" width="0.0340%" height="15" fill="rgb(221,81,38)" fg:x="2793" fg:w="1"/><text x="95.1209%" y="975.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl gpu_descriptor_types::device::DescriptorDevice&lt;ash::vk::definitions::DescriptorSetLayout,ash::vk::definitions::DescriptorPool,ash::vk::definitions::DescriptorSet&gt; for wgpu_hal::vulkan::DeviceShared&gt;::dealloc_descriptor_sets (1 samples, 0.03%)</title><rect x="94.8709%" y="949" width="0.0340%" height="15" fill="rgb(236,219,28)" fg:x="2793" fg:w="1"/><text x="95.1209%" y="959.50"></text></g><g><title>gpu_alloc::freelist::FreeList&lt;M&gt;::drain (1 samples, 0.03%)</title><rect x="94.9049%" y="949" width="0.0340%" height="15" fill="rgb(213,200,14)" fg:x="2794" fg:w="1"/><text x="95.1549%" y="959.50"></text></g><g><title>gpu_alloc::util::is_arc_unique (1 samples, 0.03%)</title><rect x="94.9049%" y="933" width="0.0340%" height="15" fill="rgb(240,33,19)" fg:x="2794" fg:w="1"/><text x="95.1549%" y="943.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::destroy_buffer (2 samples, 0.07%)</title><rect x="94.9049%" y="997" width="0.0679%" height="15" fill="rgb(233,113,27)" fg:x="2794" fg:w="2"/><text x="95.1549%" y="1007.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::dealloc (2 samples, 0.07%)</title><rect x="94.9049%" y="981" width="0.0679%" height="15" fill="rgb(220,221,18)" fg:x="2794" fg:w="2"/><text x="95.1549%" y="991.50"></text></g><g><title>gpu_alloc::freelist::FreeListAllocator&lt;M&gt;::dealloc (2 samples, 0.07%)</title><rect x="94.9049%" y="965" width="0.0679%" height="15" fill="rgb(238,92,8)" fg:x="2794" fg:w="2"/><text x="95.1549%" y="975.50"></text></g><g><title>gpu_alloc::freelist::FreeList&lt;M&gt;::insert_block (1 samples, 0.03%)</title><rect x="94.9389%" y="949" width="0.0340%" height="15" fill="rgb(222,164,16)" fg:x="2795" fg:w="1"/><text x="95.1889%" y="959.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (1 samples, 0.03%)</title><rect x="94.9389%" y="933" width="0.0340%" height="15" fill="rgb(241,119,3)" fg:x="2795" fg:w="1"/><text x="95.1889%" y="943.50"></text></g><g><title>gpu_alloc::freelist::FreeList&lt;M&gt;::insert_block::{{closure}} (1 samples, 0.03%)</title><rect x="94.9389%" y="917" width="0.0340%" height="15" fill="rgb(241,44,8)" fg:x="2795" fg:w="1"/><text x="95.1889%" y="927.50"></text></g><g><title>gpu_alloc::freelist::FreeListRegion&lt;M&gt;::cmp (1 samples, 0.03%)</title><rect x="94.9389%" y="901" width="0.0340%" height="15" fill="rgb(230,36,40)" fg:x="2795" fg:w="1"/><text x="95.1889%" y="911.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u64&gt;::cmp (1 samples, 0.03%)</title><rect x="94.9389%" y="885" width="0.0340%" height="15" fill="rgb(243,16,36)" fg:x="2795" fg:w="1"/><text x="95.1889%" y="895.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;A&gt;::cleanup (4 samples, 0.14%)</title><rect x="94.8709%" y="1029" width="0.1359%" height="15" fill="rgb(231,4,26)" fg:x="2793" fg:w="4"/><text x="95.1209%" y="1039.50"></text></g><g><title>wgpu_core::device::life::NonReferencedResources&lt;A&gt;::clean (4 samples, 0.14%)</title><rect x="94.8709%" y="1013" width="0.1359%" height="15" fill="rgb(240,9,31)" fg:x="2793" fg:w="4"/><text x="95.1209%" y="1023.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::destroy_texture (1 samples, 0.03%)</title><rect x="94.9728%" y="997" width="0.0340%" height="15" fill="rgb(207,173,15)" fg:x="2796" fg:w="1"/><text x="95.2228%" y="1007.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::dealloc (1 samples, 0.03%)</title><rect x="94.9728%" y="981" width="0.0340%" height="15" fill="rgb(224,192,53)" fg:x="2796" fg:w="1"/><text x="95.2228%" y="991.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl gpu_alloc_types::device::MemoryDevice&lt;ash::vk::definitions::DeviceMemory&gt; for wgpu_hal::vulkan::DeviceShared&gt;::deallocate_memory (1 samples, 0.03%)</title><rect x="94.9728%" y="965" width="0.0340%" height="15" fill="rgb(223,67,28)" fg:x="2796" fg:w="1"/><text x="95.2228%" y="975.50"></text></g><g><title>ash::device::Device::free_memory (1 samples, 0.03%)</title><rect x="94.9728%" y="949" width="0.0340%" height="15" fill="rgb(211,20,47)" fg:x="2796" fg:w="1"/><text x="95.2228%" y="959.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="94.9728%" y="933" width="0.0340%" height="15" fill="rgb(240,228,2)" fg:x="2796" fg:w="1"/><text x="95.2228%" y="943.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="94.9728%" y="917" width="0.0340%" height="15" fill="rgb(248,151,12)" fg:x="2796" fg:w="1"/><text x="95.2228%" y="927.50"></text></g><g><title>amdgpu_bo_va_op_raw (1 samples, 0.03%)</title><rect x="94.9728%" y="901" width="0.0340%" height="15" fill="rgb(244,8,39)" fg:x="2796" fg:w="1"/><text x="95.2228%" y="911.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;A&gt;::triage_submissions (5 samples, 0.17%)</title><rect x="95.0068%" y="1029" width="0.1698%" height="15" fill="rgb(222,26,8)" fg:x="2797" fg:w="5"/><text x="95.2568%" y="1039.50"></text></g><g><title>wgpu_core::device::queue::EncoderInFlight&lt;A&gt;::land (5 samples, 0.17%)</title><rect x="95.0068%" y="1013" width="0.1698%" height="15" fill="rgb(213,106,44)" fg:x="2797" fg:w="5"/><text x="95.2568%" y="1023.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::reset_all (5 samples, 0.17%)</title><rect x="95.0068%" y="997" width="0.1698%" height="15" fill="rgb(214,129,20)" fg:x="2797" fg:w="5"/><text x="95.2568%" y="1007.50"></text></g><g><title>ash::device::Device::reset_command_pool (5 samples, 0.17%)</title><rect x="95.0068%" y="981" width="0.1698%" height="15" fill="rgb(212,32,13)" fg:x="2797" fg:w="5"/><text x="95.2568%" y="991.50"></text></g><g><title>[libvulkan_radeon.so] (5 samples, 0.17%)</title><rect x="95.0068%" y="965" width="0.1698%" height="15" fill="rgb(208,168,33)" fg:x="2797" fg:w="5"/><text x="95.2568%" y="975.50"></text></g><g><title>[libvulkan_radeon.so] (3 samples, 0.10%)</title><rect x="95.0747%" y="949" width="0.1019%" height="15" fill="rgb(231,207,8)" fg:x="2799" fg:w="3"/><text x="95.3247%" y="959.50"></text></g><g><title>[libvulkan_radeon.so] (3 samples, 0.10%)</title><rect x="95.0747%" y="933" width="0.1019%" height="15" fill="rgb(235,219,23)" fg:x="2799" fg:w="3"/><text x="95.3247%" y="943.50"></text></g><g><title>[libvulkan_radeon.so] (2 samples, 0.07%)</title><rect x="95.1087%" y="917" width="0.0679%" height="15" fill="rgb(226,216,26)" fg:x="2800" fg:w="2"/><text x="95.3587%" y="927.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="95.2446%" y="1013" width="0.0340%" height="15" fill="rgb(239,137,16)" fg:x="2804" fg:w="1"/><text x="95.4946%" y="1023.50"></text></g><g><title>bevy_ecs::world::World::resource_scope (20 samples, 0.68%)</title><rect x="94.6332%" y="1173" width="0.6793%" height="15" fill="rgb(207,12,36)" fg:x="2786" fg:w="20"/><text x="94.8832%" y="1183.50"></text></g><g><title>game_render::render_surfaces::{{closure}} (19 samples, 0.65%)</title><rect x="94.6671%" y="1157" width="0.6454%" height="15" fill="rgb(210,214,24)" fg:x="2787" fg:w="19"/><text x="94.9171%" y="1167.50"></text></g><g><title>bevy_ecs::world::World::resource_scope (19 samples, 0.65%)</title><rect x="94.6671%" y="1141" width="0.6454%" height="15" fill="rgb(206,56,30)" fg:x="2787" fg:w="19"/><text x="94.9171%" y="1151.50"></text></g><g><title>game_render::render_surfaces::{{closure}}::{{closure}} (19 samples, 0.65%)</title><rect x="94.6671%" y="1125" width="0.6454%" height="15" fill="rgb(228,143,26)" fg:x="2787" fg:w="19"/><text x="94.9171%" y="1135.50"></text></g><g><title>wgpu::Queue::submit (14 samples, 0.48%)</title><rect x="94.8370%" y="1109" width="0.4755%" height="15" fill="rgb(216,218,46)" fg:x="2792" fg:w="14"/><text x="95.0870%" y="1119.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::queue_submit (14 samples, 0.48%)</title><rect x="94.8370%" y="1093" width="0.4755%" height="15" fill="rgb(206,6,19)" fg:x="2792" fg:w="14"/><text x="95.0870%" y="1103.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::queue_submit (14 samples, 0.48%)</title><rect x="94.8370%" y="1077" width="0.4755%" height="15" fill="rgb(239,177,51)" fg:x="2792" fg:w="14"/><text x="95.0870%" y="1087.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (14 samples, 0.48%)</title><rect x="94.8370%" y="1061" width="0.4755%" height="15" fill="rgb(216,55,25)" fg:x="2792" fg:w="14"/><text x="95.0870%" y="1071.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::maintain (13 samples, 0.44%)</title><rect x="94.8709%" y="1045" width="0.4416%" height="15" fill="rgb(231,163,29)" fg:x="2793" fg:w="13"/><text x="95.1209%" y="1055.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;A&gt;::triage_suspected (4 samples, 0.14%)</title><rect x="95.1766%" y="1029" width="0.1359%" height="15" fill="rgb(232,149,50)" fg:x="2802" fg:w="4"/><text x="95.4266%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::Stored&lt;wgpu_core::id::Id&lt;wgpu_core::device::Device&lt;wgpu_hal::empty::Api&gt;&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="95.2785%" y="1013" width="0.0340%" height="15" fill="rgb(223,142,48)" fg:x="2805" fg:w="1"/><text x="95.5285%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::RefCount&gt; (1 samples, 0.03%)</title><rect x="95.2785%" y="997" width="0.0340%" height="15" fill="rgb(245,83,23)" fg:x="2805" fg:w="1"/><text x="95.5285%" y="1007.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="95.2785%" y="981" width="0.0340%" height="15" fill="rgb(224,63,2)" fg:x="2805" fg:w="1"/><text x="95.5285%" y="991.50"></text></g><g><title>bevy_ptr::OwningPtr::make (1 samples, 0.03%)</title><rect x="95.3125%" y="469" width="0.0340%" height="15" fill="rgb(218,65,53)" fg:x="2806" fg:w="1"/><text x="95.5625%" y="479.50"></text></g><g><title>bevy_ecs::world::World::resource_scope::{{closure}} (1 samples, 0.03%)</title><rect x="95.3125%" y="453" width="0.0340%" height="15" fill="rgb(221,84,29)" fg:x="2806" fg:w="1"/><text x="95.5625%" y="463.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.03%)</title><rect x="95.3125%" y="437" width="0.0340%" height="15" fill="rgb(234,0,32)" fg:x="2806" fg:w="1"/><text x="95.5625%" y="447.50"></text></g><g><title>bevy_ecs::world::World::resource_scope::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="95.3125%" y="421" width="0.0340%" height="15" fill="rgb(206,20,16)" fg:x="2806" fg:w="1"/><text x="95.5625%" y="431.50"></text></g><g><title>bevy_ecs::storage::resource::ResourceData&lt;_&gt;::insert_with_ticks (1 samples, 0.03%)</title><rect x="95.3125%" y="405" width="0.0340%" height="15" fill="rgb(244,172,18)" fg:x="2806" fg:w="1"/><text x="95.5625%" y="415.50"></text></g><g><title>bevy_ecs::storage::table::Column::push (1 samples, 0.03%)</title><rect x="95.3125%" y="389" width="0.0340%" height="15" fill="rgb(254,133,1)" fg:x="2806" fg:w="1"/><text x="95.5625%" y="399.50"></text></g><g><title>&lt;game_render::pipeline::MainPass as game_render::graph::Node&gt;::render (1 samples, 0.03%)</title><rect x="95.3804%" y="453" width="0.0340%" height="15" fill="rgb(222,206,41)" fg:x="2808" fg:w="1"/><text x="95.6304%" y="463.50"></text></g><g><title>wgpu::RenderPass::set_pipeline (1 samples, 0.03%)</title><rect x="95.3804%" y="437" width="0.0340%" height="15" fill="rgb(212,3,42)" fg:x="2808" fg:w="1"/><text x="95.6304%" y="447.50"></text></g><g><title>wgpu_render_pass_set_pipeline (1 samples, 0.03%)</title><rect x="95.3804%" y="421" width="0.0340%" height="15" fill="rgb(241,11,4)" fg:x="2808" fg:w="1"/><text x="95.6304%" y="431.50"></text></g><g><title>wgpu_core::command::StateChange&lt;T&gt;::set_and_check_redundant (1 samples, 0.03%)</title><rect x="95.3804%" y="405" width="0.0340%" height="15" fill="rgb(205,19,26)" fg:x="2808" fg:w="1"/><text x="95.6304%" y="415.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.03%)</title><rect x="95.3804%" y="389" width="0.0340%" height="15" fill="rgb(210,179,32)" fg:x="2808" fg:w="1"/><text x="95.6304%" y="399.50"></text></g><g><title>&lt;T as core::option::SpecOptionPartialEq&gt;::eq (1 samples, 0.03%)</title><rect x="95.3804%" y="373" width="0.0340%" height="15" fill="rgb(227,116,49)" fg:x="2808" fg:w="1"/><text x="95.6304%" y="383.50"></text></g><g><title>bevy_ecs::world::World::resource (1 samples, 0.03%)</title><rect x="95.4144%" y="453" width="0.0340%" height="15" fill="rgb(211,146,6)" fg:x="2809" fg:w="1"/><text x="95.6644%" y="463.50"></text></g><g><title>bevy_ecs::world::World::get_resource (1 samples, 0.03%)</title><rect x="95.4144%" y="437" width="0.0340%" height="15" fill="rgb(219,44,39)" fg:x="2809" fg:w="1"/><text x="95.6644%" y="447.50"></text></g><g><title>bevy_ecs::world::unsafe_world_cell::UnsafeWorldCell::get_resource (1 samples, 0.03%)</title><rect x="95.4144%" y="421" width="0.0340%" height="15" fill="rgb(234,128,11)" fg:x="2809" fg:w="1"/><text x="95.6644%" y="431.50"></text></g><g><title>bevy_ecs::world::unsafe_world_cell::UnsafeWorldCell::get_resource_by_id (1 samples, 0.03%)</title><rect x="95.4144%" y="405" width="0.0340%" height="15" fill="rgb(220,183,53)" fg:x="2809" fg:w="1"/><text x="95.6644%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::SurfaceTexture&gt; (1 samples, 0.03%)</title><rect x="95.4484%" y="453" width="0.0340%" height="15" fill="rgb(213,219,32)" fg:x="2810" fg:w="1"/><text x="95.6984%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::Texture&gt; (1 samples, 0.03%)</title><rect x="95.4484%" y="437" width="0.0340%" height="15" fill="rgb(232,156,16)" fg:x="2810" fg:w="1"/><text x="95.6984%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Sync+core::marker::Send&gt;&gt; (1 samples, 0.03%)</title><rect x="95.4484%" y="421" width="0.0340%" height="15" fill="rgb(246,135,34)" fg:x="2810" fg:w="1"/><text x="95.6984%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::backend::direct::Queue&gt; (1 samples, 0.03%)</title><rect x="95.4484%" y="405" width="0.0340%" height="15" fill="rgb(241,99,0)" fg:x="2810" fg:w="1"/><text x="95.6984%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;lock_api::mutex::Mutex&lt;parking_lot::raw_mutex::RawMutex,wgpu::backend::direct::ErrorSinkRaw&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="95.4484%" y="389" width="0.0340%" height="15" fill="rgb(222,103,45)" fg:x="2810" fg:w="1"/><text x="95.6984%" y="399.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="95.4484%" y="373" width="0.0340%" height="15" fill="rgb(212,57,4)" fg:x="2810" fg:w="1"/><text x="95.6984%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.03%)</title><rect x="95.4484%" y="357" width="0.0340%" height="15" fill="rgb(215,68,47)" fg:x="2810" fg:w="1"/><text x="95.6984%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.03%)</title><rect x="95.4484%" y="341" width="0.0340%" height="15" fill="rgb(230,84,2)" fg:x="2810" fg:w="1"/><text x="95.6984%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::TextureView&gt; (1 samples, 0.03%)</title><rect x="95.4823%" y="453" width="0.0340%" height="15" fill="rgb(220,102,14)" fg:x="2811" fg:w="1"/><text x="95.7323%" y="463.50"></text></g><g><title>&lt;wgpu_types::SurfaceConfiguration&lt;V&gt; as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="95.5163%" y="389" width="0.0340%" height="15" fill="rgb(240,10,32)" fg:x="2812" fg:w="1"/><text x="95.7663%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="95.5163%" y="373" width="0.0340%" height="15" fill="rgb(215,47,27)" fg:x="2812" fg:w="1"/><text x="95.7663%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.03%)</title><rect x="95.5163%" y="357" width="0.0340%" height="15" fill="rgb(233,188,43)" fg:x="2812" fg:w="1"/><text x="95.7663%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.03%)</title><rect x="95.5163%" y="341" width="0.0340%" height="15" fill="rgb(253,190,1)" fg:x="2812" fg:w="1"/><text x="95.7663%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.03%)</title><rect x="95.5163%" y="325" width="0.0340%" height="15" fill="rgb(206,114,52)" fg:x="2812" fg:w="1"/><text x="95.7663%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="95.5163%" y="309" width="0.0340%" height="15" fill="rgb(233,120,37)" fg:x="2812" fg:w="1"/><text x="95.7663%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="95.5163%" y="293" width="0.0340%" height="15" fill="rgb(214,52,39)" fg:x="2812" fg:w="1"/><text x="95.7663%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.03%)</title><rect x="95.5163%" y="277" width="0.0340%" height="15" fill="rgb(223,80,29)" fg:x="2812" fg:w="1"/><text x="95.7663%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.03%)</title><rect x="95.5163%" y="261" width="0.0340%" height="15" fill="rgb(230,101,40)" fg:x="2812" fg:w="1"/><text x="95.7663%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.03%)</title><rect x="95.5163%" y="245" width="0.0340%" height="15" fill="rgb(219,211,8)" fg:x="2812" fg:w="1"/><text x="95.7663%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.03%)</title><rect x="95.5163%" y="229" width="0.0340%" height="15" fill="rgb(252,126,28)" fg:x="2812" fg:w="1"/><text x="95.7663%" y="239.50"></text></g><g><title>malloc (1 samples, 0.03%)</title><rect x="95.5163%" y="213" width="0.0340%" height="15" fill="rgb(215,56,38)" fg:x="2812" fg:w="1"/><text x="95.7663%" y="223.50"></text></g><g><title>wgpu_core::conv::map_texture_usage (1 samples, 0.03%)</title><rect x="95.5503%" y="389" width="0.0340%" height="15" fill="rgb(249,55,44)" fg:x="2813" fg:w="1"/><text x="95.8003%" y="399.50"></text></g><g><title>wgpu_hal::_::&lt;impl wgpu_hal::TextureUses&gt;::set (1 samples, 0.03%)</title><rect x="95.5503%" y="373" width="0.0340%" height="15" fill="rgb(220,221,32)" fg:x="2813" fg:w="1"/><text x="95.8003%" y="383.50"></text></g><g><title>wgpu_hal::_::InternalBitFlags::set (1 samples, 0.03%)</title><rect x="95.5503%" y="357" width="0.0340%" height="15" fill="rgb(212,216,41)" fg:x="2813" fg:w="1"/><text x="95.8003%" y="367.50"></text></g><g><title>ash::device::Device::reset_fences (1 samples, 0.03%)</title><rect x="95.5842%" y="373" width="0.0340%" height="15" fill="rgb(228,213,43)" fg:x="2814" fg:w="1"/><text x="95.8342%" y="383.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="95.5842%" y="357" width="0.0340%" height="15" fill="rgb(211,31,26)" fg:x="2814" fg:w="1"/><text x="95.8342%" y="367.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="95.5842%" y="341" width="0.0340%" height="15" fill="rgb(229,202,19)" fg:x="2814" fg:w="1"/><text x="95.8342%" y="351.50"></text></g><g><title>drmSyncobjReset (1 samples, 0.03%)</title><rect x="95.5842%" y="325" width="0.0340%" height="15" fill="rgb(229,105,46)" fg:x="2814" fg:w="1"/><text x="95.8342%" y="335.50"></text></g><g><title>drmIoctl (1 samples, 0.03%)</title><rect x="95.5842%" y="309" width="0.0340%" height="15" fill="rgb(235,108,1)" fg:x="2814" fg:w="1"/><text x="95.8342%" y="319.50"></text></g><g><title>ioctl (1 samples, 0.03%)</title><rect x="95.5842%" y="293" width="0.0340%" height="15" fill="rgb(245,111,35)" fg:x="2814" fg:w="1"/><text x="95.8342%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="95.5842%" y="277" width="0.0340%" height="15" fill="rgb(219,185,31)" fg:x="2814" fg:w="1"/><text x="95.8342%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="95.5842%" y="261" width="0.0340%" height="15" fill="rgb(214,4,43)" fg:x="2814" fg:w="1"/><text x="95.8342%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="95.5842%" y="245" width="0.0340%" height="15" fill="rgb(235,227,40)" fg:x="2814" fg:w="1"/><text x="95.8342%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="95.5842%" y="229" width="0.0340%" height="15" fill="rgb(230,88,30)" fg:x="2814" fg:w="1"/><text x="95.8342%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="95.5842%" y="213" width="0.0340%" height="15" fill="rgb(216,217,1)" fg:x="2814" fg:w="1"/><text x="95.8342%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="95.5842%" y="197" width="0.0340%" height="15" fill="rgb(248,139,50)" fg:x="2814" fg:w="1"/><text x="95.8342%" y="207.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="95.7201%" y="293" width="0.0340%" height="15" fill="rgb(233,1,21)" fg:x="2818" fg:w="1"/><text x="95.9701%" y="303.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::surface_get_current_texture (8 samples, 0.27%)</title><rect x="95.5163%" y="421" width="0.2717%" height="15" fill="rgb(215,183,12)" fg:x="2812" fg:w="8"/><text x="95.7663%" y="431.50"></text></g><g><title>wgpu_core::present::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_get_current_texture (8 samples, 0.27%)</title><rect x="95.5163%" y="405" width="0.2717%" height="15" fill="rgb(229,104,42)" fg:x="2812" fg:w="8"/><text x="95.7663%" y="415.50"></text></g><g><title>wgpu_hal::vulkan::instance::&lt;impl wgpu_hal::Surface&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Surface&gt;::acquire_texture (6 samples, 0.20%)</title><rect x="95.5842%" y="389" width="0.2038%" height="15" fill="rgb(243,34,48)" fg:x="2814" fg:w="6"/><text x="95.8342%" y="399.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::acquire_next_image (5 samples, 0.17%)</title><rect x="95.6182%" y="373" width="0.1698%" height="15" fill="rgb(239,11,44)" fg:x="2815" fg:w="5"/><text x="95.8682%" y="383.50"></text></g><g><title>[libvulkan_radeon.so] (5 samples, 0.17%)</title><rect x="95.6182%" y="357" width="0.1698%" height="15" fill="rgb(231,98,35)" fg:x="2815" fg:w="5"/><text x="95.8682%" y="367.50"></text></g><g><title>[libvulkan_radeon.so] (5 samples, 0.17%)</title><rect x="95.6182%" y="341" width="0.1698%" height="15" fill="rgb(233,28,25)" fg:x="2815" fg:w="5"/><text x="95.8682%" y="351.50"></text></g><g><title>[libvulkan_radeon.so] (3 samples, 0.10%)</title><rect x="95.6861%" y="325" width="0.1019%" height="15" fill="rgb(234,123,11)" fg:x="2817" fg:w="3"/><text x="95.9361%" y="335.50"></text></g><g><title>wl_display_dispatch_queue_pending (2 samples, 0.07%)</title><rect x="95.7201%" y="309" width="0.0679%" height="15" fill="rgb(220,69,3)" fg:x="2818" fg:w="2"/><text x="95.9701%" y="319.50"></text></g><g><title>[libwayland-client.so.0.22.0] (1 samples, 0.03%)</title><rect x="95.7541%" y="293" width="0.0340%" height="15" fill="rgb(214,64,36)" fg:x="2819" fg:w="1"/><text x="96.0041%" y="303.50"></text></g><g><title>[libwayland-client.so.0.22.0] (1 samples, 0.03%)</title><rect x="95.7541%" y="277" width="0.0340%" height="15" fill="rgb(211,138,32)" fg:x="2819" fg:w="1"/><text x="96.0041%" y="287.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::surface_get_current_texture (9 samples, 0.31%)</title><rect x="95.5163%" y="437" width="0.3057%" height="15" fill="rgb(213,118,47)" fg:x="2812" fg:w="9"/><text x="95.7663%" y="447.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="95.7880%" y="421" width="0.0340%" height="15" fill="rgb(243,124,49)" fg:x="2820" fg:w="1"/><text x="96.0380%" y="431.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.03%)</title><rect x="95.7880%" y="405" width="0.0340%" height="15" fill="rgb(221,30,28)" fg:x="2820" fg:w="1"/><text x="96.0380%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.03%)</title><rect x="95.7880%" y="389" width="0.0340%" height="15" fill="rgb(246,37,13)" fg:x="2820" fg:w="1"/><text x="96.0380%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.03%)</title><rect x="95.7880%" y="373" width="0.0340%" height="15" fill="rgb(249,66,14)" fg:x="2820" fg:w="1"/><text x="96.0380%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.03%)</title><rect x="95.7880%" y="357" width="0.0340%" height="15" fill="rgb(213,166,5)" fg:x="2820" fg:w="1"/><text x="96.0380%" y="367.50"></text></g><g><title>malloc (1 samples, 0.03%)</title><rect x="95.7880%" y="341" width="0.0340%" height="15" fill="rgb(221,66,24)" fg:x="2820" fg:w="1"/><text x="96.0380%" y="351.50"></text></g><g><title>wgpu::Surface::get_current_texture (10 samples, 0.34%)</title><rect x="95.5163%" y="453" width="0.3397%" height="15" fill="rgb(210,132,17)" fg:x="2812" fg:w="10"/><text x="95.7663%" y="463.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.03%)</title><rect x="95.8220%" y="437" width="0.0340%" height="15" fill="rgb(243,202,5)" fg:x="2821" fg:w="1"/><text x="96.0720%" y="447.50"></text></g><g><title>&lt;wgpu_hal::vulkan::Api as wgpu_core::hub::HalApi&gt;::get_surface (1 samples, 0.03%)</title><rect x="95.8899%" y="389" width="0.0340%" height="15" fill="rgb(233,70,48)" fg:x="2823" fg:w="1"/><text x="96.1399%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.03%)</title><rect x="95.8899%" y="373" width="0.0340%" height="15" fill="rgb(238,41,26)" fg:x="2823" fg:w="1"/><text x="96.1399%" y="383.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="95.9239%" y="325" width="0.0340%" height="15" fill="rgb(241,19,31)" fg:x="2824" fg:w="1"/><text x="96.1739%" y="335.50"></text></g><g><title>drmSyncobjExportSyncFile (1 samples, 0.03%)</title><rect x="95.9239%" y="309" width="0.0340%" height="15" fill="rgb(214,76,10)" fg:x="2824" fg:w="1"/><text x="96.1739%" y="319.50"></text></g><g><title>drmIoctl (1 samples, 0.03%)</title><rect x="95.9239%" y="293" width="0.0340%" height="15" fill="rgb(254,202,22)" fg:x="2824" fg:w="1"/><text x="96.1739%" y="303.50"></text></g><g><title>ioctl (1 samples, 0.03%)</title><rect x="95.9239%" y="277" width="0.0340%" height="15" fill="rgb(214,72,24)" fg:x="2824" fg:w="1"/><text x="96.1739%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="95.9239%" y="261" width="0.0340%" height="15" fill="rgb(221,92,46)" fg:x="2824" fg:w="1"/><text x="96.1739%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="95.9239%" y="245" width="0.0340%" height="15" fill="rgb(246,13,50)" fg:x="2824" fg:w="1"/><text x="96.1739%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="95.9239%" y="229" width="0.0340%" height="15" fill="rgb(240,165,38)" fg:x="2824" fg:w="1"/><text x="96.1739%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="95.9239%" y="213" width="0.0340%" height="15" fill="rgb(241,24,51)" fg:x="2824" fg:w="1"/><text x="96.1739%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="95.9239%" y="197" width="0.0340%" height="15" fill="rgb(227,51,44)" fg:x="2824" fg:w="1"/><text x="96.1739%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="95.9239%" y="181" width="0.0340%" height="15" fill="rgb(231,121,3)" fg:x="2824" fg:w="1"/><text x="96.1739%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="95.9239%" y="165" width="0.0340%" height="15" fill="rgb(245,3,41)" fg:x="2824" fg:w="1"/><text x="96.1739%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="95.9239%" y="149" width="0.0340%" height="15" fill="rgb(214,13,26)" fg:x="2824" fg:w="1"/><text x="96.1739%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="95.9239%" y="133" width="0.0340%" height="15" fill="rgb(252,75,11)" fg:x="2824" fg:w="1"/><text x="96.1739%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="95.9239%" y="117" width="0.0340%" height="15" fill="rgb(218,226,17)" fg:x="2824" fg:w="1"/><text x="96.1739%" y="127.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="95.9239%" y="101" width="0.0340%" height="15" fill="rgb(248,89,38)" fg:x="2824" fg:w="1"/><text x="96.1739%" y="111.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="95.9239%" y="85" width="0.0340%" height="15" fill="rgb(237,73,46)" fg:x="2824" fg:w="1"/><text x="96.1739%" y="95.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="95.9239%" y="69" width="0.0340%" height="15" fill="rgb(242,78,33)" fg:x="2824" fg:w="1"/><text x="96.1739%" y="79.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="95.9239%" y="53" width="0.0340%" height="15" fill="rgb(235,60,3)" fg:x="2824" fg:w="1"/><text x="96.1739%" y="63.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="95.9239%" y="37" width="0.0340%" height="15" fill="rgb(216,172,19)" fg:x="2824" fg:w="1"/><text x="96.1739%" y="47.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor as bevy_ecs::schedule::executor::SystemExecutor&gt;::run (20 samples, 0.68%)</title><rect x="95.3125%" y="1157" width="0.6793%" height="15" fill="rgb(227,6,42)" fg:x="2806" fg:w="20"/><text x="95.5625%" y="1167.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope_with_executor (20 samples, 0.68%)</title><rect x="95.3125%" y="1141" width="0.6793%" height="15" fill="rgb(223,207,42)" fg:x="2806" fg:w="20"/><text x="95.5625%" y="1151.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (20 samples, 0.68%)</title><rect x="95.3125%" y="1125" width="0.6793%" height="15" fill="rgb(246,138,30)" fg:x="2806" fg:w="20"/><text x="95.5625%" y="1135.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (20 samples, 0.68%)</title><rect x="95.3125%" y="1109" width="0.6793%" height="15" fill="rgb(251,199,47)" fg:x="2806" fg:w="20"/><text x="95.5625%" y="1119.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope_with_executor::{{closure}} (20 samples, 0.68%)</title><rect x="95.3125%" y="1093" width="0.6793%" height="15" fill="rgb(228,218,44)" fg:x="2806" fg:w="20"/><text x="95.5625%" y="1103.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope_with_executor_inner (20 samples, 0.68%)</title><rect x="95.3125%" y="1077" width="0.6793%" height="15" fill="rgb(220,68,6)" fg:x="2806" fg:w="20"/><text x="95.5625%" y="1087.50"></text></g><g><title>futures_lite::future::block_on (20 samples, 0.68%)</title><rect x="95.3125%" y="1061" width="0.6793%" height="15" fill="rgb(240,60,26)" fg:x="2806" fg:w="20"/><text x="95.5625%" y="1071.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (20 samples, 0.68%)</title><rect x="95.3125%" y="1045" width="0.6793%" height="15" fill="rgb(211,200,19)" fg:x="2806" fg:w="20"/><text x="95.5625%" y="1055.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (20 samples, 0.68%)</title><rect x="95.3125%" y="1029" width="0.6793%" height="15" fill="rgb(242,145,30)" fg:x="2806" fg:w="20"/><text x="95.5625%" y="1039.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (20 samples, 0.68%)</title><rect x="95.3125%" y="1013" width="0.6793%" height="15" fill="rgb(225,64,13)" fg:x="2806" fg:w="20"/><text x="95.5625%" y="1023.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope_with_executor_inner::{{closure}} (20 samples, 0.68%)</title><rect x="95.3125%" y="997" width="0.6793%" height="15" fill="rgb(218,103,35)" fg:x="2806" fg:w="20"/><text x="95.5625%" y="1007.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::execute_scope::{{closure}} (20 samples, 0.68%)</title><rect x="95.3125%" y="981" width="0.6793%" height="15" fill="rgb(216,93,46)" fg:x="2806" fg:w="20"/><text x="95.5625%" y="991.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (20 samples, 0.68%)</title><rect x="95.3125%" y="965" width="0.6793%" height="15" fill="rgb(225,159,27)" fg:x="2806" fg:w="20"/><text x="95.5625%" y="975.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::execute_scope::{{closure}}::{{closure}} (20 samples, 0.68%)</title><rect x="95.3125%" y="949" width="0.6793%" height="15" fill="rgb(225,204,11)" fg:x="2806" fg:w="20"/><text x="95.5625%" y="959.50"></text></g><g><title>&lt;futures_lite::future::CatchUnwind&lt;F&gt; as core::future::future::Future&gt;::poll (20 samples, 0.68%)</title><rect x="95.3125%" y="933" width="0.6793%" height="15" fill="rgb(205,56,4)" fg:x="2806" fg:w="20"/><text x="95.5625%" y="943.50"></text></g><g><title>std::panic::catch_unwind (20 samples, 0.68%)</title><rect x="95.3125%" y="917" width="0.6793%" height="15" fill="rgb(206,6,35)" fg:x="2806" fg:w="20"/><text x="95.5625%" y="927.50"></text></g><g><title>std::panicking::try (20 samples, 0.68%)</title><rect x="95.3125%" y="901" width="0.6793%" height="15" fill="rgb(247,73,52)" fg:x="2806" fg:w="20"/><text x="95.5625%" y="911.50"></text></g><g><title>std::panicking::try::do_call (20 samples, 0.68%)</title><rect x="95.3125%" y="885" width="0.6793%" height="15" fill="rgb(246,97,4)" fg:x="2806" fg:w="20"/><text x="95.5625%" y="895.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (20 samples, 0.68%)</title><rect x="95.3125%" y="869" width="0.6793%" height="15" fill="rgb(212,37,15)" fg:x="2806" fg:w="20"/><text x="95.5625%" y="879.50"></text></g><g><title>&lt;futures_lite::future::CatchUnwind&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (20 samples, 0.68%)</title><rect x="95.3125%" y="853" width="0.6793%" height="15" fill="rgb(208,130,40)" fg:x="2806" fg:w="20"/><text x="95.5625%" y="863.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::future::future::Future&gt;::poll (20 samples, 0.68%)</title><rect x="95.3125%" y="837" width="0.6793%" height="15" fill="rgb(236,55,29)" fg:x="2806" fg:w="20"/><text x="95.5625%" y="847.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::execute_scope::{{closure}}::{{closure}}::{{closure}} (20 samples, 0.68%)</title><rect x="95.3125%" y="821" width="0.6793%" height="15" fill="rgb(209,156,45)" fg:x="2806" fg:w="20"/><text x="95.5625%" y="831.50"></text></g><g><title>bevy_tasks::thread_executor::ThreadExecutorTicker::tick::{{closure}} (20 samples, 0.68%)</title><rect x="95.3125%" y="805" width="0.6793%" height="15" fill="rgb(249,107,4)" fg:x="2806" fg:w="20"/><text x="95.5625%" y="815.50"></text></g><g><title>async_executor::Executor::tick::{{closure}} (20 samples, 0.68%)</title><rect x="95.3125%" y="789" width="0.6793%" height="15" fill="rgb(227,7,13)" fg:x="2806" fg:w="20"/><text x="95.5625%" y="799.50"></text></g><g><title>async_task::runnable::Runnable&lt;M&gt;::run (20 samples, 0.68%)</title><rect x="95.3125%" y="773" width="0.6793%" height="15" fill="rgb(250,129,14)" fg:x="2806" fg:w="20"/><text x="95.5625%" y="783.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::run (20 samples, 0.68%)</title><rect x="95.3125%" y="757" width="0.6793%" height="15" fill="rgb(229,92,13)" fg:x="2806" fg:w="20"/><text x="95.5625%" y="767.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (20 samples, 0.68%)</title><rect x="95.3125%" y="741" width="0.6793%" height="15" fill="rgb(245,98,39)" fg:x="2806" fg:w="20"/><text x="95.5625%" y="751.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::spawn_exclusive_system_task::{{closure}} (20 samples, 0.68%)</title><rect x="95.3125%" y="725" width="0.6793%" height="15" fill="rgb(234,135,48)" fg:x="2806" fg:w="20"/><text x="95.5625%" y="735.50"></text></g><g><title>std::panic::catch_unwind (20 samples, 0.68%)</title><rect x="95.3125%" y="709" width="0.6793%" height="15" fill="rgb(230,98,28)" fg:x="2806" fg:w="20"/><text x="95.5625%" y="719.50"></text></g><g><title>std::panicking::try (20 samples, 0.68%)</title><rect x="95.3125%" y="693" width="0.6793%" height="15" fill="rgb(223,121,0)" fg:x="2806" fg:w="20"/><text x="95.5625%" y="703.50"></text></g><g><title>std::panicking::try::do_call (20 samples, 0.68%)</title><rect x="95.3125%" y="677" width="0.6793%" height="15" fill="rgb(234,173,33)" fg:x="2806" fg:w="20"/><text x="95.5625%" y="687.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (20 samples, 0.68%)</title><rect x="95.3125%" y="661" width="0.6793%" height="15" fill="rgb(245,47,8)" fg:x="2806" fg:w="20"/><text x="95.5625%" y="671.50"></text></g><g><title>core::ops::function::FnOnce::call_once (20 samples, 0.68%)</title><rect x="95.3125%" y="645" width="0.6793%" height="15" fill="rgb(205,17,20)" fg:x="2806" fg:w="20"/><text x="95.5625%" y="655.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::spawn_exclusive_system_task::{{closure}}::{{closure}} (20 samples, 0.68%)</title><rect x="95.3125%" y="629" width="0.6793%" height="15" fill="rgb(232,151,16)" fg:x="2806" fg:w="20"/><text x="95.5625%" y="639.50"></text></g><g><title>&lt;bevy_ecs::system::exclusive_function_system::ExclusiveFunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::run (20 samples, 0.68%)</title><rect x="95.3125%" y="613" width="0.6793%" height="15" fill="rgb(208,30,32)" fg:x="2806" fg:w="20"/><text x="95.5625%" y="623.50"></text></g><g><title>&lt;Func as bevy_ecs::system::exclusive_function_system::ExclusiveSystemParamFunction&lt;fn() .&gt; Out&gt;&gt;::run (20 samples, 0.68%)</title><rect x="95.3125%" y="597" width="0.6793%" height="15" fill="rgb(254,26,3)" fg:x="2806" fg:w="20"/><text x="95.5625%" y="607.50"></text></g><g><title>&lt;Func as bevy_ecs::system::exclusive_function_system::ExclusiveSystemParamFunction&lt;fn() .&gt; Out&gt;&gt;::run::call_inner (20 samples, 0.68%)</title><rect x="95.3125%" y="581" width="0.6793%" height="15" fill="rgb(240,177,30)" fg:x="2806" fg:w="20"/><text x="95.5625%" y="591.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (20 samples, 0.68%)</title><rect x="95.3125%" y="565" width="0.6793%" height="15" fill="rgb(248,76,44)" fg:x="2806" fg:w="20"/><text x="95.5625%" y="575.50"></text></g><g><title>core::ops::function::FnMut::call_mut (20 samples, 0.68%)</title><rect x="95.3125%" y="549" width="0.6793%" height="15" fill="rgb(241,186,54)" fg:x="2806" fg:w="20"/><text x="95.5625%" y="559.50"></text></g><g><title>game_render::render_surfaces (20 samples, 0.68%)</title><rect x="95.3125%" y="533" width="0.6793%" height="15" fill="rgb(249,171,29)" fg:x="2806" fg:w="20"/><text x="95.5625%" y="543.50"></text></g><g><title>bevy_ecs::world::World::resource_scope (20 samples, 0.68%)</title><rect x="95.3125%" y="517" width="0.6793%" height="15" fill="rgb(237,151,44)" fg:x="2806" fg:w="20"/><text x="95.5625%" y="527.50"></text></g><g><title>game_render::render_surfaces::{{closure}} (20 samples, 0.68%)</title><rect x="95.3125%" y="501" width="0.6793%" height="15" fill="rgb(228,174,30)" fg:x="2806" fg:w="20"/><text x="95.5625%" y="511.50"></text></g><g><title>bevy_ecs::world::World::resource_scope (20 samples, 0.68%)</title><rect x="95.3125%" y="485" width="0.6793%" height="15" fill="rgb(252,14,37)" fg:x="2806" fg:w="20"/><text x="95.5625%" y="495.50"></text></g><g><title>game_render::render_surfaces::{{closure}}::{{closure}} (19 samples, 0.65%)</title><rect x="95.3465%" y="469" width="0.6454%" height="15" fill="rgb(207,111,40)" fg:x="2807" fg:w="19"/><text x="95.5965%" y="479.50"></text></g><g><title>wgpu::SurfaceTexture::present (4 samples, 0.14%)</title><rect x="95.8560%" y="453" width="0.1359%" height="15" fill="rgb(248,171,54)" fg:x="2822" fg:w="4"/><text x="96.1060%" y="463.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::surface_present (4 samples, 0.14%)</title><rect x="95.8560%" y="437" width="0.1359%" height="15" fill="rgb(211,127,2)" fg:x="2822" fg:w="4"/><text x="96.1060%" y="447.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::surface_present (4 samples, 0.14%)</title><rect x="95.8560%" y="421" width="0.1359%" height="15" fill="rgb(236,87,47)" fg:x="2822" fg:w="4"/><text x="96.1060%" y="431.50"></text></g><g><title>wgpu_core::present::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_present (3 samples, 0.10%)</title><rect x="95.8899%" y="405" width="0.1019%" height="15" fill="rgb(223,190,45)" fg:x="2823" fg:w="3"/><text x="96.1399%" y="415.50"></text></g><g><title>&lt;wgpu_hal::vulkan::Queue as wgpu_hal::Queue&lt;wgpu_hal::vulkan::Api&gt;&gt;::present (2 samples, 0.07%)</title><rect x="95.9239%" y="389" width="0.0679%" height="15" fill="rgb(215,5,16)" fg:x="2824" fg:w="2"/><text x="96.1739%" y="399.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::queue_present (2 samples, 0.07%)</title><rect x="95.9239%" y="373" width="0.0679%" height="15" fill="rgb(252,82,33)" fg:x="2824" fg:w="2"/><text x="96.1739%" y="383.50"></text></g><g><title>[libvulkan_radeon.so] (2 samples, 0.07%)</title><rect x="95.9239%" y="357" width="0.0679%" height="15" fill="rgb(247,213,44)" fg:x="2824" fg:w="2"/><text x="96.1739%" y="367.50"></text></g><g><title>[libvulkan_radeon.so] (2 samples, 0.07%)</title><rect x="95.9239%" y="341" width="0.0679%" height="15" fill="rgb(205,196,44)" fg:x="2824" fg:w="2"/><text x="96.1739%" y="351.50"></text></g><g><title>wl_proxy_marshal_flags (1 samples, 0.03%)</title><rect x="95.9579%" y="325" width="0.0340%" height="15" fill="rgb(237,96,54)" fg:x="2825" fg:w="1"/><text x="96.2079%" y="335.50"></text></g><g><title>wl_proxy_marshal_array_flags (1 samples, 0.03%)</title><rect x="95.9579%" y="309" width="0.0340%" height="15" fill="rgb(230,113,34)" fg:x="2825" fg:w="1"/><text x="96.2079%" y="319.50"></text></g><g><title>&lt;bevy_tasks::usages::IoTaskPool as core::ops::deref::Deref&gt;::deref (1 samples, 0.03%)</title><rect x="95.9918%" y="997" width="0.0340%" height="15" fill="rgb(221,224,12)" fg:x="2826" fg:w="1"/><text x="96.2418%" y="1007.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor as bevy_ecs::schedule::executor::SystemExecutor&gt;::run::{{closure}} (1 samples, 0.03%)</title><rect x="96.0258%" y="917" width="0.0340%" height="15" fill="rgb(219,112,44)" fg:x="2827" fg:w="1"/><text x="96.2758%" y="927.50"></text></g><g><title>bevy_tasks::task_pool::Scope&lt;T&gt;::spawn (1 samples, 0.03%)</title><rect x="96.0258%" y="901" width="0.0340%" height="15" fill="rgb(210,31,13)" fg:x="2827" fg:w="1"/><text x="96.2758%" y="911.50"></text></g><g><title>async_executor::Executor::spawn (1 samples, 0.03%)</title><rect x="96.0258%" y="885" width="0.0340%" height="15" fill="rgb(230,25,16)" fg:x="2827" fg:w="1"/><text x="96.2758%" y="895.50"></text></g><g><title>async_task::runnable::spawn_unchecked (1 samples, 0.03%)</title><rect x="96.0258%" y="869" width="0.0340%" height="15" fill="rgb(246,108,53)" fg:x="2827" fg:w="1"/><text x="96.2758%" y="879.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="96.0258%" y="853" width="0.0340%" height="15" fill="rgb(241,172,50)" fg:x="2827" fg:w="1"/><text x="96.2758%" y="863.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::unbounded (2 samples, 0.07%)</title><rect x="96.0598%" y="917" width="0.0679%" height="15" fill="rgb(235,141,10)" fg:x="2828" fg:w="2"/><text x="96.3098%" y="927.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (2 samples, 0.07%)</title><rect x="96.0598%" y="901" width="0.0679%" height="15" fill="rgb(220,174,43)" fg:x="2828" fg:w="2"/><text x="96.3098%" y="911.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.07%)</title><rect x="96.0598%" y="885" width="0.0679%" height="15" fill="rgb(215,181,40)" fg:x="2828" fg:w="2"/><text x="96.3098%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.07%)</title><rect x="96.0598%" y="869" width="0.0679%" height="15" fill="rgb(230,97,2)" fg:x="2828" fg:w="2"/><text x="96.3098%" y="879.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.07%)</title><rect x="96.0598%" y="853" width="0.0679%" height="15" fill="rgb(211,25,27)" fg:x="2828" fg:w="2"/><text x="96.3098%" y="863.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.07%)</title><rect x="96.0598%" y="837" width="0.0679%" height="15" fill="rgb(230,87,26)" fg:x="2828" fg:w="2"/><text x="96.3098%" y="847.50"></text></g><g><title>__rdl_alloc (2 samples, 0.07%)</title><rect x="96.0598%" y="821" width="0.0679%" height="15" fill="rgb(227,160,17)" fg:x="2828" fg:w="2"/><text x="96.3098%" y="831.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.07%)</title><rect x="96.0598%" y="805" width="0.0679%" height="15" fill="rgb(244,85,34)" fg:x="2828" fg:w="2"/><text x="96.3098%" y="815.50"></text></g><g><title>std::sys::unix::alloc::aligned_malloc (2 samples, 0.07%)</title><rect x="96.0598%" y="789" width="0.0679%" height="15" fill="rgb(207,70,0)" fg:x="2828" fg:w="2"/><text x="96.3098%" y="799.50"></text></g><g><title>posix_memalign (2 samples, 0.07%)</title><rect x="96.0598%" y="773" width="0.0679%" height="15" fill="rgb(223,129,7)" fg:x="2828" fg:w="2"/><text x="96.3098%" y="783.50"></text></g><g><title>[libc.so.6] (2 samples, 0.07%)</title><rect x="96.0598%" y="757" width="0.0679%" height="15" fill="rgb(246,105,7)" fg:x="2828" fg:w="2"/><text x="96.3098%" y="767.50"></text></g><g><title>[libc.so.6] (2 samples, 0.07%)</title><rect x="96.0598%" y="741" width="0.0679%" height="15" fill="rgb(215,154,42)" fg:x="2828" fg:w="2"/><text x="96.3098%" y="751.50"></text></g><g><title>[libc.so.6] (2 samples, 0.07%)</title><rect x="96.0598%" y="725" width="0.0679%" height="15" fill="rgb(220,215,30)" fg:x="2828" fg:w="2"/><text x="96.3098%" y="735.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (1 samples, 0.03%)</title><rect x="96.1617%" y="629" width="0.0340%" height="15" fill="rgb(228,81,51)" fg:x="2831" fg:w="1"/><text x="96.4117%" y="639.50"></text></g><g><title>async_executor::Ticker::runnable::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="96.1957%" y="565" width="0.0340%" height="15" fill="rgb(247,71,54)" fg:x="2832" fg:w="1"/><text x="96.4457%" y="575.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (1 samples, 0.03%)</title><rect x="96.1957%" y="549" width="0.0340%" height="15" fill="rgb(234,176,34)" fg:x="2832" fg:w="1"/><text x="96.4457%" y="559.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (1 samples, 0.03%)</title><rect x="96.1957%" y="533" width="0.0340%" height="15" fill="rgb(241,103,54)" fg:x="2832" fg:w="1"/><text x="96.4457%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="96.1957%" y="517" width="0.0340%" height="15" fill="rgb(228,22,34)" fg:x="2832" fg:w="1"/><text x="96.4457%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="96.1957%" y="501" width="0.0340%" height="15" fill="rgb(241,179,48)" fg:x="2832" fg:w="1"/><text x="96.4457%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="96.1957%" y="485" width="0.0340%" height="15" fill="rgb(235,167,37)" fg:x="2832" fg:w="1"/><text x="96.4457%" y="495.50"></text></g><g><title>async_executor::Ticker::runnable::{{closure}} (2 samples, 0.07%)</title><rect x="96.1957%" y="629" width="0.0679%" height="15" fill="rgb(213,109,30)" fg:x="2832" fg:w="2"/><text x="96.4457%" y="639.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (2 samples, 0.07%)</title><rect x="96.1957%" y="613" width="0.0679%" height="15" fill="rgb(222,172,16)" fg:x="2832" fg:w="2"/><text x="96.4457%" y="623.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (2 samples, 0.07%)</title><rect x="96.1957%" y="597" width="0.0679%" height="15" fill="rgb(233,192,5)" fg:x="2832" fg:w="2"/><text x="96.4457%" y="607.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (2 samples, 0.07%)</title><rect x="96.1957%" y="581" width="0.0679%" height="15" fill="rgb(247,189,41)" fg:x="2832" fg:w="2"/><text x="96.4457%" y="591.50"></text></g><g><title>async_executor::Ticker::wake (1 samples, 0.03%)</title><rect x="96.2296%" y="565" width="0.0340%" height="15" fill="rgb(218,134,47)" fg:x="2833" fg:w="1"/><text x="96.4796%" y="575.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::from_raw (1 samples, 0.03%)</title><rect x="96.3655%" y="453" width="0.0340%" height="15" fill="rgb(216,29,3)" fg:x="2837" fg:w="1"/><text x="96.6155%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::byte_sub (1 samples, 0.03%)</title><rect x="96.3655%" y="437" width="0.0340%" height="15" fill="rgb(246,140,12)" fg:x="2837" fg:w="1"/><text x="96.6155%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub (1 samples, 0.03%)</title><rect x="96.3655%" y="421" width="0.0340%" height="15" fill="rgb(230,136,11)" fg:x="2837" fg:w="1"/><text x="96.6155%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.03%)</title><rect x="96.3655%" y="405" width="0.0340%" height="15" fill="rgb(247,22,47)" fg:x="2837" fg:w="1"/><text x="96.6155%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (2 samples, 0.07%)</title><rect x="96.3995%" y="405" width="0.0679%" height="15" fill="rgb(218,84,22)" fg:x="2838" fg:w="2"/><text x="96.6495%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_swap (2 samples, 0.07%)</title><rect x="96.3995%" y="389" width="0.0679%" height="15" fill="rgb(216,87,39)" fg:x="2838" fg:w="2"/><text x="96.6495%" y="399.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (7 samples, 0.24%)</title><rect x="96.2976%" y="565" width="0.2378%" height="15" fill="rgb(221,178,8)" fg:x="2835" fg:w="7"/><text x="96.5476%" y="575.50"></text></g><g><title>event_listener::Event::notify_additional (7 samples, 0.24%)</title><rect x="96.2976%" y="549" width="0.2378%" height="15" fill="rgb(230,42,11)" fg:x="2835" fg:w="7"/><text x="96.5476%" y="559.50"></text></g><g><title>event_listener::List::notify_additional (6 samples, 0.20%)</title><rect x="96.3315%" y="533" width="0.2038%" height="15" fill="rgb(237,229,4)" fg:x="2836" fg:w="6"/><text x="96.5815%" y="543.50"></text></g><g><title>core::task::wake::Waker::wake (5 samples, 0.17%)</title><rect x="96.3655%" y="517" width="0.1698%" height="15" fill="rgb(222,31,33)" fg:x="2837" fg:w="5"/><text x="96.6155%" y="527.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::wake (5 samples, 0.17%)</title><rect x="96.3655%" y="501" width="0.1698%" height="15" fill="rgb(210,17,39)" fg:x="2837" fg:w="5"/><text x="96.6155%" y="511.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::wake_by_ref (5 samples, 0.17%)</title><rect x="96.3655%" y="485" width="0.1698%" height="15" fill="rgb(244,93,20)" fg:x="2837" fg:w="5"/><text x="96.6155%" y="495.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (5 samples, 0.17%)</title><rect x="96.3655%" y="469" width="0.1698%" height="15" fill="rgb(210,40,47)" fg:x="2837" fg:w="5"/><text x="96.6155%" y="479.50"></text></g><g><title>futures_lite::future::block_on::parker_and_waker::{{closure}} (4 samples, 0.14%)</title><rect x="96.3995%" y="453" width="0.1359%" height="15" fill="rgb(239,211,47)" fg:x="2838" fg:w="4"/><text x="96.6495%" y="463.50"></text></g><g><title>parking::Unparker::unpark (4 samples, 0.14%)</title><rect x="96.3995%" y="437" width="0.1359%" height="15" fill="rgb(251,223,49)" fg:x="2838" fg:w="4"/><text x="96.6495%" y="447.50"></text></g><g><title>parking::Inner::unpark (4 samples, 0.14%)</title><rect x="96.3995%" y="421" width="0.1359%" height="15" fill="rgb(221,149,5)" fg:x="2838" fg:w="4"/><text x="96.6495%" y="431.50"></text></g><g><title>syscall (2 samples, 0.07%)</title><rect x="96.4674%" y="405" width="0.0679%" height="15" fill="rgb(219,224,51)" fg:x="2840" fg:w="2"/><text x="96.7174%" y="415.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="96.4674%" y="389" width="0.0679%" height="15" fill="rgb(223,7,8)" fg:x="2840" fg:w="2"/><text x="96.7174%" y="399.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="96.4674%" y="373" width="0.0679%" height="15" fill="rgb(241,217,22)" fg:x="2840" fg:w="2"/><text x="96.7174%" y="383.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="96.4674%" y="357" width="0.0679%" height="15" fill="rgb(248,209,0)" fg:x="2840" fg:w="2"/><text x="96.7174%" y="367.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="96.4674%" y="341" width="0.0679%" height="15" fill="rgb(217,205,4)" fg:x="2840" fg:w="2"/><text x="96.7174%" y="351.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="96.4674%" y="325" width="0.0679%" height="15" fill="rgb(228,124,39)" fg:x="2840" fg:w="2"/><text x="96.7174%" y="335.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="96.4674%" y="309" width="0.0679%" height="15" fill="rgb(250,116,42)" fg:x="2840" fg:w="2"/><text x="96.7174%" y="319.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="96.4674%" y="293" width="0.0679%" height="15" fill="rgb(223,202,9)" fg:x="2840" fg:w="2"/><text x="96.7174%" y="303.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="96.4674%" y="277" width="0.0679%" height="15" fill="rgb(242,222,40)" fg:x="2840" fg:w="2"/><text x="96.7174%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="96.5014%" y="261" width="0.0340%" height="15" fill="rgb(229,99,46)" fg:x="2841" fg:w="1"/><text x="96.7514%" y="271.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (1 samples, 0.03%)</title><rect x="96.6033%" y="437" width="0.0340%" height="15" fill="rgb(225,56,46)" fg:x="2844" fg:w="1"/><text x="96.8533%" y="447.50"></text></g><g><title>&lt;bevy_ecs::system::function_system::FunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::apply_buffers (4 samples, 0.14%)</title><rect x="96.5353%" y="453" width="0.1359%" height="15" fill="rgb(227,94,5)" fg:x="2842" fg:w="4"/><text x="96.7853%" y="463.50"></text></g><g><title>core::option::Option&lt;T&gt;::expect (1 samples, 0.03%)</title><rect x="96.6372%" y="437" width="0.0340%" height="15" fill="rgb(205,112,38)" fg:x="2845" fg:w="1"/><text x="96.8872%" y="447.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::execute_scope::{{closure}}::{{closure}} (17 samples, 0.58%)</title><rect x="96.1277%" y="805" width="0.5774%" height="15" fill="rgb(231,133,46)" fg:x="2830" fg:w="17"/><text x="96.3777%" y="815.50"></text></g><g><title>&lt;futures_lite::future::CatchUnwind&lt;F&gt; as core::future::future::Future&gt;::poll (17 samples, 0.58%)</title><rect x="96.1277%" y="789" width="0.5774%" height="15" fill="rgb(217,16,9)" fg:x="2830" fg:w="17"/><text x="96.3777%" y="799.50"></text></g><g><title>std::panic::catch_unwind (17 samples, 0.58%)</title><rect x="96.1277%" y="773" width="0.5774%" height="15" fill="rgb(249,173,9)" fg:x="2830" fg:w="17"/><text x="96.3777%" y="783.50"></text></g><g><title>std::panicking::try (17 samples, 0.58%)</title><rect x="96.1277%" y="757" width="0.5774%" height="15" fill="rgb(205,163,53)" fg:x="2830" fg:w="17"/><text x="96.3777%" y="767.50"></text></g><g><title>std::panicking::try::do_call (17 samples, 0.58%)</title><rect x="96.1277%" y="741" width="0.5774%" height="15" fill="rgb(217,54,41)" fg:x="2830" fg:w="17"/><text x="96.3777%" y="751.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (17 samples, 0.58%)</title><rect x="96.1277%" y="725" width="0.5774%" height="15" fill="rgb(228,216,12)" fg:x="2830" fg:w="17"/><text x="96.3777%" y="735.50"></text></g><g><title>&lt;futures_lite::future::CatchUnwind&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (16 samples, 0.54%)</title><rect x="96.1617%" y="709" width="0.5435%" height="15" fill="rgb(244,228,15)" fg:x="2831" fg:w="16"/><text x="96.4117%" y="719.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::future::future::Future&gt;::poll (16 samples, 0.54%)</title><rect x="96.1617%" y="693" width="0.5435%" height="15" fill="rgb(221,176,53)" fg:x="2831" fg:w="16"/><text x="96.4117%" y="703.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::execute_scope::{{closure}}::{{closure}}::{{closure}} (16 samples, 0.54%)</title><rect x="96.1617%" y="677" width="0.5435%" height="15" fill="rgb(205,94,34)" fg:x="2831" fg:w="16"/><text x="96.4117%" y="687.50"></text></g><g><title>bevy_tasks::thread_executor::ThreadExecutorTicker::tick::{{closure}} (16 samples, 0.54%)</title><rect x="96.1617%" y="661" width="0.5435%" height="15" fill="rgb(213,110,48)" fg:x="2831" fg:w="16"/><text x="96.4117%" y="671.50"></text></g><g><title>async_executor::Executor::tick::{{closure}} (16 samples, 0.54%)</title><rect x="96.1617%" y="645" width="0.5435%" height="15" fill="rgb(236,142,28)" fg:x="2831" fg:w="16"/><text x="96.4117%" y="655.50"></text></g><g><title>async_task::runnable::Runnable&lt;M&gt;::run (13 samples, 0.44%)</title><rect x="96.2636%" y="629" width="0.4416%" height="15" fill="rgb(225,135,29)" fg:x="2834" fg:w="13"/><text x="96.5136%" y="639.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::run (12 samples, 0.41%)</title><rect x="96.2976%" y="613" width="0.4076%" height="15" fill="rgb(252,45,31)" fg:x="2835" fg:w="12"/><text x="96.5476%" y="623.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (12 samples, 0.41%)</title><rect x="96.2976%" y="597" width="0.4076%" height="15" fill="rgb(211,187,50)" fg:x="2835" fg:w="12"/><text x="96.5476%" y="607.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::spawn_exclusive_system_task::{{closure}} (12 samples, 0.41%)</title><rect x="96.2976%" y="581" width="0.4076%" height="15" fill="rgb(229,109,7)" fg:x="2835" fg:w="12"/><text x="96.5476%" y="591.50"></text></g><g><title>std::panic::catch_unwind (5 samples, 0.17%)</title><rect x="96.5353%" y="565" width="0.1698%" height="15" fill="rgb(251,131,51)" fg:x="2842" fg:w="5"/><text x="96.7853%" y="575.50"></text></g><g><title>std::panicking::try (5 samples, 0.17%)</title><rect x="96.5353%" y="549" width="0.1698%" height="15" fill="rgb(251,180,35)" fg:x="2842" fg:w="5"/><text x="96.7853%" y="559.50"></text></g><g><title>std::panicking::try::do_call (5 samples, 0.17%)</title><rect x="96.5353%" y="533" width="0.1698%" height="15" fill="rgb(211,46,32)" fg:x="2842" fg:w="5"/><text x="96.7853%" y="543.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5 samples, 0.17%)</title><rect x="96.5353%" y="517" width="0.1698%" height="15" fill="rgb(248,123,17)" fg:x="2842" fg:w="5"/><text x="96.7853%" y="527.50"></text></g><g><title>core::ops::function::FnOnce::call_once (5 samples, 0.17%)</title><rect x="96.5353%" y="501" width="0.1698%" height="15" fill="rgb(227,141,18)" fg:x="2842" fg:w="5"/><text x="96.7853%" y="511.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::spawn_exclusive_system_task::{{closure}}::{{closure}} (5 samples, 0.17%)</title><rect x="96.5353%" y="485" width="0.1698%" height="15" fill="rgb(216,102,9)" fg:x="2842" fg:w="5"/><text x="96.7853%" y="495.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::apply_system_buffers (5 samples, 0.17%)</title><rect x="96.5353%" y="469" width="0.1698%" height="15" fill="rgb(253,47,13)" fg:x="2842" fg:w="5"/><text x="96.7853%" y="479.50"></text></g><g><title>bevy_ecs::system::commands::_::&lt;impl bevy_ecs::system::system_param::SystemParam for bevy_ecs::system::commands::Commands&gt;::apply (1 samples, 0.03%)</title><rect x="96.6712%" y="453" width="0.0340%" height="15" fill="rgb(226,93,23)" fg:x="2846" fg:w="1"/><text x="96.9212%" y="463.50"></text></g><g><title>&lt;(P0,P1) as bevy_ecs::system::system_param::SystemParam&gt;::apply (1 samples, 0.03%)</title><rect x="96.6712%" y="437" width="0.0340%" height="15" fill="rgb(247,104,17)" fg:x="2846" fg:w="1"/><text x="96.9212%" y="447.50"></text></g><g><title>&lt;bevy_ecs::system::system_param::Deferred&lt;T&gt; as bevy_ecs::system::system_param::SystemParam&gt;::apply (1 samples, 0.03%)</title><rect x="96.6712%" y="421" width="0.0340%" height="15" fill="rgb(233,203,26)" fg:x="2846" fg:w="1"/><text x="96.9212%" y="431.50"></text></g><g><title>bevy_ecs::system::commands::&lt;impl bevy_ecs::system::system_param::SystemBuffer for bevy_ecs::system::commands::command_queue::CommandQueue&gt;::apply (1 samples, 0.03%)</title><rect x="96.6712%" y="405" width="0.0340%" height="15" fill="rgb(244,98,49)" fg:x="2846" fg:w="1"/><text x="96.9212%" y="415.50"></text></g><g><title>bevy_ecs::system::commands::command_queue::CommandQueue::apply (1 samples, 0.03%)</title><rect x="96.6712%" y="389" width="0.0340%" height="15" fill="rgb(235,134,22)" fg:x="2846" fg:w="1"/><text x="96.9212%" y="399.50"></text></g><g><title>bevy_ecs::world::World::flush (1 samples, 0.03%)</title><rect x="96.6712%" y="373" width="0.0340%" height="15" fill="rgb(221,70,32)" fg:x="2846" fg:w="1"/><text x="96.9212%" y="383.50"></text></g><g><title>bevy_ecs::entity::Entities::flush (1 samples, 0.03%)</title><rect x="96.6712%" y="357" width="0.0340%" height="15" fill="rgb(238,15,50)" fg:x="2846" fg:w="1"/><text x="96.9212%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::drain (1 samples, 0.03%)</title><rect x="96.6712%" y="341" width="0.0340%" height="15" fill="rgb(215,221,48)" fg:x="2846" fg:w="1"/><text x="96.9212%" y="351.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (1 samples, 0.03%)</title><rect x="96.6712%" y="325" width="0.0340%" height="15" fill="rgb(236,73,3)" fg:x="2846" fg:w="1"/><text x="96.9212%" y="335.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="96.6712%" y="309" width="0.0340%" height="15" fill="rgb(250,107,11)" fg:x="2846" fg:w="1"/><text x="96.9212%" y="319.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.03%)</title><rect x="96.6712%" y="293" width="0.0340%" height="15" fill="rgb(242,39,14)" fg:x="2846" fg:w="1"/><text x="96.9212%" y="303.50"></text></g><g><title>&lt;async_task::task::FallibleTask&lt;T,M&gt; as core::future::future::Future&gt;::poll (1 samples, 0.03%)</title><rect x="96.7052%" y="789" width="0.0340%" height="15" fill="rgb(248,164,37)" fg:x="2847" fg:w="1"/><text x="96.9552%" y="799.50"></text></g><g><title>async_task::task::Task&lt;T,M&gt;::poll_task (1 samples, 0.03%)</title><rect x="96.7052%" y="773" width="0.0340%" height="15" fill="rgb(217,60,12)" fg:x="2847" fg:w="1"/><text x="96.9552%" y="783.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (2 samples, 0.07%)</title><rect x="96.7391%" y="789" width="0.0679%" height="15" fill="rgb(240,125,29)" fg:x="2848" fg:w="2"/><text x="96.9891%" y="799.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (2 samples, 0.07%)</title><rect x="96.7391%" y="773" width="0.0679%" height="15" fill="rgb(208,207,28)" fg:x="2848" fg:w="2"/><text x="96.9891%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (2 samples, 0.07%)</title><rect x="96.7391%" y="757" width="0.0679%" height="15" fill="rgb(209,159,27)" fg:x="2848" fg:w="2"/><text x="96.9891%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_or (2 samples, 0.07%)</title><rect x="96.7391%" y="741" width="0.0679%" height="15" fill="rgb(251,176,53)" fg:x="2848" fg:w="2"/><text x="96.9891%" y="751.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (22 samples, 0.75%)</title><rect x="96.1277%" y="821" width="0.7473%" height="15" fill="rgb(211,85,7)" fg:x="2830" fg:w="22"/><text x="96.3777%" y="831.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope_with_executor_inner::{{closure}}::{{closure}} (5 samples, 0.17%)</title><rect x="96.7052%" y="805" width="0.1698%" height="15" fill="rgb(216,64,54)" fg:x="2847" fg:w="5"/><text x="96.9552%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_task::task::FallibleTask&lt;()&gt;&gt; (2 samples, 0.07%)</title><rect x="96.8071%" y="789" width="0.0679%" height="15" fill="rgb(217,54,24)" fg:x="2850" fg:w="2"/><text x="97.0571%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_task::task::Task&lt;()&gt;&gt; (2 samples, 0.07%)</title><rect x="96.8071%" y="773" width="0.0679%" height="15" fill="rgb(208,206,53)" fg:x="2850" fg:w="2"/><text x="97.0571%" y="783.50"></text></g><g><title>&lt;async_task::task::Task&lt;T,M&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.07%)</title><rect x="96.8071%" y="757" width="0.0679%" height="15" fill="rgb(251,74,39)" fg:x="2850" fg:w="2"/><text x="97.0571%" y="767.50"></text></g><g><title>async_task::task::Task&lt;T,M&gt;::set_detached (2 samples, 0.07%)</title><rect x="96.8071%" y="741" width="0.0679%" height="15" fill="rgb(226,47,5)" fg:x="2850" fg:w="2"/><text x="97.0571%" y="751.50"></text></g><g><title>cfree (1 samples, 0.03%)</title><rect x="96.8410%" y="725" width="0.0340%" height="15" fill="rgb(234,111,33)" fg:x="2851" fg:w="1"/><text x="97.0910%" y="735.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="96.8410%" y="709" width="0.0340%" height="15" fill="rgb(251,14,10)" fg:x="2851" fg:w="1"/><text x="97.0910%" y="719.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope_with_executor_inner::{{closure}} (23 samples, 0.78%)</title><rect x="96.1277%" y="853" width="0.7812%" height="15" fill="rgb(232,43,0)" fg:x="2830" fg:w="23"/><text x="96.3777%" y="863.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::execute_scope::{{closure}} (23 samples, 0.78%)</title><rect x="96.1277%" y="837" width="0.7812%" height="15" fill="rgb(222,68,43)" fg:x="2830" fg:w="23"/><text x="96.3777%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_lite::future::Or&lt;bevy_tasks::task_pool::TaskPool::execute_scope&lt;(),bevy_tasks::task_pool::TaskPool::scope_with_executor_inner&lt;&lt;bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor as bevy_ecs::schedule::executor::SystemExecutor&gt;::run::{{closure}},()&gt;::{{closure}}::{{closure}}&gt;::{{closure}}::{{closure}},bevy_tasks::task_pool::TaskPool::scope_with_executor_inner&lt;&lt;bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor as bevy_ecs::schedule::executor::SystemExecutor&gt;::run::{{closure}},()&gt;::{{closure}}::{{closure}}&gt;&gt; (1 samples, 0.03%)</title><rect x="96.8750%" y="821" width="0.0340%" height="15" fill="rgb(217,24,23)" fg:x="2852" fg:w="1"/><text x="97.1250%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_tasks::task_pool::TaskPool::execute_scope&lt;(),bevy_tasks::task_pool::TaskPool::scope_with_executor_inner&lt;&lt;bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor as bevy_ecs::schedule::executor::SystemExecutor&gt;::run::{{closure}},()&gt;::{{closure}}::{{closure}}&gt;::{{closure}}::{{closure}}&gt; (1 samples, 0.03%)</title><rect x="96.8750%" y="805" width="0.0340%" height="15" fill="rgb(229,209,14)" fg:x="2852" fg:w="1"/><text x="97.1250%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;bevy_tasks::task_pool::TaskPool::execute_scope&lt;(),bevy_tasks::task_pool::TaskPool::scope_with_executor_inner&lt;&lt;bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor as bevy_ecs::schedule::executor::SystemExecutor&gt;::run::{{closure}},()&gt;::{{closure}}::{{closure}}&gt;::{{closure}}::{{closure}}::{{closure}}&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="96.8750%" y="789" width="0.0340%" height="15" fill="rgb(250,149,48)" fg:x="2852" fg:w="1"/><text x="97.1250%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;bevy_tasks::task_pool::TaskPool::execute_scope&lt;(),bevy_tasks::task_pool::TaskPool::scope_with_executor_inner&lt;&lt;bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor as bevy_ecs::schedule::executor::SystemExecutor&gt;::run::{{closure}},()&gt;::{{closure}}::{{closure}}&gt;::{{closure}}::{{closure}}::{{closure}}&gt;&gt; (1 samples, 0.03%)</title><rect x="96.8750%" y="773" width="0.0340%" height="15" fill="rgb(210,120,37)" fg:x="2852" fg:w="1"/><text x="97.1250%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_tasks::task_pool::TaskPool::execute_scope&lt;(),bevy_tasks::task_pool::TaskPool::scope_with_executor_inner&lt;&lt;bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor as bevy_ecs::schedule::executor::SystemExecutor&gt;::run::{{closure}},()&gt;::{{closure}}::{{closure}}&gt;::{{closure}}::{{closure}}::{{closure}}&gt; (1 samples, 0.03%)</title><rect x="96.8750%" y="757" width="0.0340%" height="15" fill="rgb(210,21,8)" fg:x="2852" fg:w="1"/><text x="97.1250%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_tasks::thread_executor::ThreadExecutorTicker::tick::{{closure}}&gt; (1 samples, 0.03%)</title><rect x="96.8750%" y="741" width="0.0340%" height="15" fill="rgb(243,145,7)" fg:x="2852" fg:w="1"/><text x="97.1250%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::Executor::tick::{{closure}}&gt; (1 samples, 0.03%)</title><rect x="96.8750%" y="725" width="0.0340%" height="15" fill="rgb(238,178,32)" fg:x="2852" fg:w="1"/><text x="97.1250%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::Ticker&gt; (1 samples, 0.03%)</title><rect x="96.8750%" y="709" width="0.0340%" height="15" fill="rgb(222,4,10)" fg:x="2852" fg:w="1"/><text x="97.1250%" y="719.50"></text></g><g><title>&lt;async_executor::Ticker as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="96.8750%" y="693" width="0.0340%" height="15" fill="rgb(239,7,37)" fg:x="2852" fg:w="1"/><text x="97.1250%" y="703.50"></text></g><g><title>async_executor::Sleepers::remove (1 samples, 0.03%)</title><rect x="96.8750%" y="677" width="0.0340%" height="15" fill="rgb(215,31,37)" fg:x="2852" fg:w="1"/><text x="97.1250%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::remove (1 samples, 0.03%)</title><rect x="96.8750%" y="661" width="0.0340%" height="15" fill="rgb(224,83,33)" fg:x="2852" fg:w="1"/><text x="97.1250%" y="671.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.03%)</title><rect x="96.8750%" y="645" width="0.0340%" height="15" fill="rgb(239,55,3)" fg:x="2852" fg:w="1"/><text x="97.1250%" y="655.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="96.8750%" y="629" width="0.0340%" height="15" fill="rgb(247,92,11)" fg:x="2852" fg:w="1"/><text x="97.1250%" y="639.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor::single_threaded::SingleThreadedExecutor as bevy_ecs::schedule::executor::SystemExecutor&gt;::run (35 samples, 1.19%)</title><rect x="95.9918%" y="1157" width="1.1889%" height="15" fill="rgb(239,200,7)" fg:x="2826" fg:w="35"/><text x="96.2418%" y="1167.50"></text></g><g><title>&lt;bevy_ecs::system::exclusive_function_system::ExclusiveFunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::run (35 samples, 1.19%)</title><rect x="95.9918%" y="1141" width="1.1889%" height="15" fill="rgb(227,115,8)" fg:x="2826" fg:w="35"/><text x="96.2418%" y="1151.50"></text></g><g><title>&lt;Func as bevy_ecs::system::exclusive_function_system::ExclusiveSystemParamFunction&lt;fn(F0) .&gt; Out&gt;&gt;::run (35 samples, 1.19%)</title><rect x="95.9918%" y="1125" width="1.1889%" height="15" fill="rgb(215,189,27)" fg:x="2826" fg:w="35"/><text x="96.2418%" y="1135.50"></text></g><g><title>&lt;Func as bevy_ecs::system::exclusive_function_system::ExclusiveSystemParamFunction&lt;fn(F0) .&gt; Out&gt;&gt;::run::call_inner (35 samples, 1.19%)</title><rect x="95.9918%" y="1109" width="1.1889%" height="15" fill="rgb(251,216,39)" fg:x="2826" fg:w="35"/><text x="96.2418%" y="1119.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (35 samples, 1.19%)</title><rect x="95.9918%" y="1093" width="1.1889%" height="15" fill="rgb(207,29,47)" fg:x="2826" fg:w="35"/><text x="96.2418%" y="1103.50"></text></g><g><title>core::ops::function::FnMut::call_mut (35 samples, 1.19%)</title><rect x="95.9918%" y="1077" width="1.1889%" height="15" fill="rgb(210,71,34)" fg:x="2826" fg:w="35"/><text x="96.2418%" y="1087.50"></text></g><g><title>bevy_app::CoreSchedule::outer_loop (35 samples, 1.19%)</title><rect x="95.9918%" y="1061" width="1.1889%" height="15" fill="rgb(253,217,51)" fg:x="2826" fg:w="35"/><text x="96.2418%" y="1071.50"></text></g><g><title>bevy_ecs::world::World::run_schedule (35 samples, 1.19%)</title><rect x="95.9918%" y="1045" width="1.1889%" height="15" fill="rgb(222,117,46)" fg:x="2826" fg:w="35"/><text x="96.2418%" y="1055.50"></text></g><g><title>bevy_ecs::world::World::run_schedule_ref (35 samples, 1.19%)</title><rect x="95.9918%" y="1029" width="1.1889%" height="15" fill="rgb(226,132,6)" fg:x="2826" fg:w="35"/><text x="96.2418%" y="1039.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor as bevy_ecs::schedule::executor::SystemExecutor&gt;::run (35 samples, 1.19%)</title><rect x="95.9918%" y="1013" width="1.1889%" height="15" fill="rgb(254,145,51)" fg:x="2826" fg:w="35"/><text x="96.2418%" y="1023.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope_with_executor (34 samples, 1.15%)</title><rect x="96.0258%" y="997" width="1.1549%" height="15" fill="rgb(231,199,27)" fg:x="2827" fg:w="34"/><text x="96.2758%" y="1007.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (34 samples, 1.15%)</title><rect x="96.0258%" y="981" width="1.1549%" height="15" fill="rgb(245,158,14)" fg:x="2827" fg:w="34"/><text x="96.2758%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (34 samples, 1.15%)</title><rect x="96.0258%" y="965" width="1.1549%" height="15" fill="rgb(240,113,14)" fg:x="2827" fg:w="34"/><text x="96.2758%" y="975.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope_with_executor::{{closure}} (34 samples, 1.15%)</title><rect x="96.0258%" y="949" width="1.1549%" height="15" fill="rgb(210,20,13)" fg:x="2827" fg:w="34"/><text x="96.2758%" y="959.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope_with_executor_inner (34 samples, 1.15%)</title><rect x="96.0258%" y="933" width="1.1549%" height="15" fill="rgb(241,144,13)" fg:x="2827" fg:w="34"/><text x="96.2758%" y="943.50"></text></g><g><title>futures_lite::future::block_on (31 samples, 1.05%)</title><rect x="96.1277%" y="917" width="1.0530%" height="15" fill="rgb(235,43,34)" fg:x="2830" fg:w="31"/><text x="96.3777%" y="927.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (31 samples, 1.05%)</title><rect x="96.1277%" y="901" width="1.0530%" height="15" fill="rgb(208,36,20)" fg:x="2830" fg:w="31"/><text x="96.3777%" y="911.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (31 samples, 1.05%)</title><rect x="96.1277%" y="885" width="1.0530%" height="15" fill="rgb(239,204,10)" fg:x="2830" fg:w="31"/><text x="96.3777%" y="895.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (31 samples, 1.05%)</title><rect x="96.1277%" y="869" width="1.0530%" height="15" fill="rgb(217,84,43)" fg:x="2830" fg:w="31"/><text x="96.3777%" y="879.50"></text></g><g><title>parking::Inner::park (8 samples, 0.27%)</title><rect x="96.9090%" y="853" width="0.2717%" height="15" fill="rgb(241,170,50)" fg:x="2853" fg:w="8"/><text x="97.1590%" y="863.50"></text></g><g><title>std::sync::condvar::Condvar::wait (8 samples, 0.27%)</title><rect x="96.9090%" y="837" width="0.2717%" height="15" fill="rgb(226,205,29)" fg:x="2853" fg:w="8"/><text x="97.1590%" y="847.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait (8 samples, 0.27%)</title><rect x="96.9090%" y="821" width="0.2717%" height="15" fill="rgb(233,113,1)" fg:x="2853" fg:w="8"/><text x="97.1590%" y="831.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait_optional_timeout (8 samples, 0.27%)</title><rect x="96.9090%" y="805" width="0.2717%" height="15" fill="rgb(253,98,13)" fg:x="2853" fg:w="8"/><text x="97.1590%" y="815.50"></text></g><g><title>std::sys::unix::futex::futex_wait (8 samples, 0.27%)</title><rect x="96.9090%" y="789" width="0.2717%" height="15" fill="rgb(211,115,12)" fg:x="2853" fg:w="8"/><text x="97.1590%" y="799.50"></text></g><g><title>syscall (8 samples, 0.27%)</title><rect x="96.9090%" y="773" width="0.2717%" height="15" fill="rgb(208,12,16)" fg:x="2853" fg:w="8"/><text x="97.1590%" y="783.50"></text></g><g><title>[unknown] (8 samples, 0.27%)</title><rect x="96.9090%" y="757" width="0.2717%" height="15" fill="rgb(237,193,54)" fg:x="2853" fg:w="8"/><text x="97.1590%" y="767.50"></text></g><g><title>[unknown] (8 samples, 0.27%)</title><rect x="96.9090%" y="741" width="0.2717%" height="15" fill="rgb(243,22,42)" fg:x="2853" fg:w="8"/><text x="97.1590%" y="751.50"></text></g><g><title>[unknown] (8 samples, 0.27%)</title><rect x="96.9090%" y="725" width="0.2717%" height="15" fill="rgb(233,151,36)" fg:x="2853" fg:w="8"/><text x="97.1590%" y="735.50"></text></g><g><title>[unknown] (8 samples, 0.27%)</title><rect x="96.9090%" y="709" width="0.2717%" height="15" fill="rgb(237,57,45)" fg:x="2853" fg:w="8"/><text x="97.1590%" y="719.50"></text></g><g><title>[unknown] (8 samples, 0.27%)</title><rect x="96.9090%" y="693" width="0.2717%" height="15" fill="rgb(221,88,17)" fg:x="2853" fg:w="8"/><text x="97.1590%" y="703.50"></text></g><g><title>[unknown] (7 samples, 0.24%)</title><rect x="96.9429%" y="677" width="0.2378%" height="15" fill="rgb(230,79,15)" fg:x="2854" fg:w="7"/><text x="97.1929%" y="687.50"></text></g><g><title>[unknown] (7 samples, 0.24%)</title><rect x="96.9429%" y="661" width="0.2378%" height="15" fill="rgb(213,57,13)" fg:x="2854" fg:w="7"/><text x="97.1929%" y="671.50"></text></g><g><title>[unknown] (6 samples, 0.20%)</title><rect x="96.9769%" y="645" width="0.2038%" height="15" fill="rgb(222,116,39)" fg:x="2855" fg:w="6"/><text x="97.2269%" y="655.50"></text></g><g><title>[unknown] (6 samples, 0.20%)</title><rect x="96.9769%" y="629" width="0.2038%" height="15" fill="rgb(245,107,2)" fg:x="2855" fg:w="6"/><text x="97.2269%" y="639.50"></text></g><g><title>[unknown] (5 samples, 0.17%)</title><rect x="97.0109%" y="613" width="0.1698%" height="15" fill="rgb(238,1,10)" fg:x="2856" fg:w="5"/><text x="97.2609%" y="623.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="97.1128%" y="597" width="0.0679%" height="15" fill="rgb(249,4,48)" fg:x="2859" fg:w="2"/><text x="97.3628%" y="607.50"></text></g><g><title>bevy_ecs::world::World::run_schedule_ref (56 samples, 1.90%)</title><rect x="95.3125%" y="1173" width="1.9022%" height="15" fill="rgb(223,151,18)" fg:x="2806" fg:w="56"/><text x="95.5625%" y="1183.50">b..</text></g><g><title>bevy_ecs::schedule::schedule::Schedule::run (1 samples, 0.03%)</title><rect x="97.1807%" y="1157" width="0.0340%" height="15" fill="rgb(227,65,43)" fg:x="2861" fg:w="1"/><text x="97.4307%" y="1167.50"></text></g><g><title>bevy_ecs::schedule::schedule::Schedule::initialize (1 samples, 0.03%)</title><rect x="97.1807%" y="1141" width="0.0340%" height="15" fill="rgb(218,40,45)" fg:x="2861" fg:w="1"/><text x="97.4307%" y="1151.50"></text></g><g><title>bevy_ecs::schedule::schedule::ScheduleGraph::update_schedule (1 samples, 0.03%)</title><rect x="97.1807%" y="1125" width="0.0340%" height="15" fill="rgb(252,121,31)" fg:x="2861" fg:w="1"/><text x="97.4307%" y="1135.50"></text></g><g><title>bevy_ecs::schedule::schedule::ScheduleGraph::build_schedule (1 samples, 0.03%)</title><rect x="97.1807%" y="1109" width="0.0340%" height="15" fill="rgb(219,158,43)" fg:x="2861" fg:w="1"/><text x="97.4307%" y="1119.50"></text></g><g><title>bevy_ecs::schedule::graph_utils::check_graph (1 samples, 0.03%)</title><rect x="97.1807%" y="1093" width="0.0340%" height="15" fill="rgb(231,162,42)" fg:x="2861" fg:w="1"/><text x="97.4307%" y="1103.50"></text></g><g><title>wgpu_core::command::CommandEncoder&lt;A&gt;::close (1 samples, 0.03%)</title><rect x="97.2147%" y="517" width="0.0340%" height="15" fill="rgb(217,179,25)" fg:x="2862" fg:w="1"/><text x="97.4647%" y="527.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::end_encoding (1 samples, 0.03%)</title><rect x="97.2147%" y="501" width="0.0340%" height="15" fill="rgb(206,212,31)" fg:x="2862" fg:w="1"/><text x="97.4647%" y="511.50"></text></g><g><title>ash::device::Device::end_command_buffer (1 samples, 0.03%)</title><rect x="97.2147%" y="485" width="0.0340%" height="15" fill="rgb(235,144,12)" fg:x="2862" fg:w="1"/><text x="97.4647%" y="495.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="97.2147%" y="469" width="0.0340%" height="15" fill="rgb(213,51,10)" fg:x="2862" fg:w="1"/><text x="97.4647%" y="479.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="97.2147%" y="453" width="0.0340%" height="15" fill="rgb(231,145,14)" fg:x="2862" fg:w="1"/><text x="97.4647%" y="463.50"></text></g><g><title>wgpu_core::command::bind::Binder::change_pipeline_layout (1 samples, 0.03%)</title><rect x="97.2486%" y="517" width="0.0340%" height="15" fill="rgb(235,15,28)" fg:x="2863" fg:w="1"/><text x="97.4986%" y="527.50"></text></g><g><title>wgpu_core::LifeGuard::add_ref (2 samples, 0.07%)</title><rect x="97.2826%" y="501" width="0.0679%" height="15" fill="rgb(237,206,10)" fg:x="2864" fg:w="2"/><text x="97.5326%" y="511.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.07%)</title><rect x="97.2826%" y="485" width="0.0679%" height="15" fill="rgb(236,227,27)" fg:x="2864" fg:w="2"/><text x="97.5326%" y="495.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::clone::Clone&gt;::clone (2 samples, 0.07%)</title><rect x="97.2826%" y="469" width="0.0679%" height="15" fill="rgb(246,83,35)" fg:x="2864" fg:w="2"/><text x="97.5326%" y="479.50"></text></g><g><title>wgpu_core::track::stateless::StatelessTracker&lt;A,T,Id&gt;::add_single (3 samples, 0.10%)</title><rect x="97.2826%" y="517" width="0.1019%" height="15" fill="rgb(220,136,24)" fg:x="2864" fg:w="3"/><text x="97.5326%" y="527.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::get (1 samples, 0.03%)</title><rect x="97.3505%" y="501" width="0.0340%" height="15" fill="rgb(217,3,25)" fg:x="2866" fg:w="1"/><text x="97.6005%" y="511.50"></text></g><g><title>&lt;game_render::pipeline::MainPass as game_render::graph::Node&gt;::render (7 samples, 0.24%)</title><rect x="97.2147%" y="629" width="0.2378%" height="15" fill="rgb(239,24,14)" fg:x="2862" fg:w="7"/><text x="97.4647%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (7 samples, 0.24%)</title><rect x="97.2147%" y="613" width="0.2378%" height="15" fill="rgb(244,16,53)" fg:x="2862" fg:w="7"/><text x="97.4647%" y="623.50"></text></g><g><title>&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (7 samples, 0.24%)</title><rect x="97.2147%" y="597" width="0.2378%" height="15" fill="rgb(208,175,44)" fg:x="2862" fg:w="7"/><text x="97.4647%" y="607.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::command_encoder_end_render_pass (7 samples, 0.24%)</title><rect x="97.2147%" y="581" width="0.2378%" height="15" fill="rgb(252,18,48)" fg:x="2862" fg:w="7"/><text x="97.4647%" y="591.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::command_encoder_end_render_pass (7 samples, 0.24%)</title><rect x="97.2147%" y="565" width="0.2378%" height="15" fill="rgb(234,199,32)" fg:x="2862" fg:w="7"/><text x="97.4647%" y="575.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (7 samples, 0.24%)</title><rect x="97.2147%" y="549" width="0.2378%" height="15" fill="rgb(225,77,54)" fg:x="2862" fg:w="7"/><text x="97.4647%" y="559.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (7 samples, 0.24%)</title><rect x="97.2147%" y="533" width="0.2378%" height="15" fill="rgb(225,42,25)" fg:x="2862" fg:w="7"/><text x="97.4647%" y="543.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::set_bind_group (2 samples, 0.07%)</title><rect x="97.3845%" y="517" width="0.0679%" height="15" fill="rgb(242,227,46)" fg:x="2867" fg:w="2"/><text x="97.6345%" y="527.50"></text></g><g><title>ash::device::Device::cmd_bind_descriptor_sets (2 samples, 0.07%)</title><rect x="97.3845%" y="501" width="0.0679%" height="15" fill="rgb(246,197,35)" fg:x="2867" fg:w="2"/><text x="97.6345%" y="511.50"></text></g><g><title>[libvulkan_radeon.so] (2 samples, 0.07%)</title><rect x="97.3845%" y="485" width="0.0679%" height="15" fill="rgb(215,159,26)" fg:x="2867" fg:w="2"/><text x="97.6345%" y="495.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="97.4185%" y="469" width="0.0340%" height="15" fill="rgb(212,194,50)" fg:x="2868" fg:w="1"/><text x="97.6685%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (1 samples, 0.03%)</title><rect x="97.4524%" y="629" width="0.0340%" height="15" fill="rgb(246,132,1)" fg:x="2869" fg:w="1"/><text x="97.7024%" y="639.50"></text></g><g><title>&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="97.4524%" y="613" width="0.0340%" height="15" fill="rgb(217,71,7)" fg:x="2869" fg:w="1"/><text x="97.7024%" y="623.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::command_encoder_end_render_pass (1 samples, 0.03%)</title><rect x="97.4524%" y="597" width="0.0340%" height="15" fill="rgb(252,59,32)" fg:x="2869" fg:w="1"/><text x="97.7024%" y="607.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::command_encoder_end_render_pass (1 samples, 0.03%)</title><rect x="97.4524%" y="581" width="0.0340%" height="15" fill="rgb(253,204,25)" fg:x="2869" fg:w="1"/><text x="97.7024%" y="591.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (1 samples, 0.03%)</title><rect x="97.4524%" y="565" width="0.0340%" height="15" fill="rgb(232,21,16)" fg:x="2869" fg:w="1"/><text x="97.7024%" y="575.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (1 samples, 0.03%)</title><rect x="97.4524%" y="549" width="0.0340%" height="15" fill="rgb(248,90,29)" fg:x="2869" fg:w="1"/><text x="97.7024%" y="559.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;A&gt;::finish (1 samples, 0.03%)</title><rect x="97.4524%" y="533" width="0.0340%" height="15" fill="rgb(249,223,7)" fg:x="2869" fg:w="1"/><text x="97.7024%" y="543.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::end_render_pass (1 samples, 0.03%)</title><rect x="97.4524%" y="517" width="0.0340%" height="15" fill="rgb(231,119,42)" fg:x="2869" fg:w="1"/><text x="97.7024%" y="527.50"></text></g><g><title>&lt;wgpu_core::hub::Storage&lt;T,I&gt; as core::ops::index::IndexMut&lt;wgpu_core::id::Valid&lt;I&gt;&gt;&gt;::index_mut (1 samples, 0.03%)</title><rect x="97.4864%" y="565" width="0.0340%" height="15" fill="rgb(215,41,35)" fg:x="2870" fg:w="1"/><text x="97.7364%" y="575.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::get_mut (1 samples, 0.03%)</title><rect x="97.4864%" y="549" width="0.0340%" height="15" fill="rgb(220,44,45)" fg:x="2870" fg:w="1"/><text x="97.7364%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.03%)</title><rect x="97.5204%" y="565" width="0.0340%" height="15" fill="rgb(253,197,36)" fg:x="2871" fg:w="1"/><text x="97.7704%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.03%)</title><rect x="97.5204%" y="549" width="0.0340%" height="15" fill="rgb(245,225,54)" fg:x="2871" fg:w="1"/><text x="97.7704%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.03%)</title><rect x="97.5204%" y="533" width="0.0340%" height="15" fill="rgb(239,94,37)" fg:x="2871" fg:w="1"/><text x="97.7704%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.03%)</title><rect x="97.5204%" y="517" width="0.0340%" height="15" fill="rgb(242,217,10)" fg:x="2871" fg:w="1"/><text x="97.7704%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.03%)</title><rect x="97.5204%" y="501" width="0.0340%" height="15" fill="rgb(250,193,7)" fg:x="2871" fg:w="1"/><text x="97.7704%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.03%)</title><rect x="97.5204%" y="485" width="0.0340%" height="15" fill="rgb(230,104,19)" fg:x="2871" fg:w="1"/><text x="97.7704%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="97.5204%" y="469" width="0.0340%" height="15" fill="rgb(230,181,4)" fg:x="2871" fg:w="1"/><text x="97.7704%" y="479.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (1 samples, 0.03%)</title><rect x="97.5204%" y="453" width="0.0340%" height="15" fill="rgb(216,219,49)" fg:x="2871" fg:w="1"/><text x="97.7704%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (1 samples, 0.03%)</title><rect x="97.5204%" y="437" width="0.0340%" height="15" fill="rgb(254,144,0)" fg:x="2871" fg:w="1"/><text x="97.7704%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="97.5204%" y="421" width="0.0340%" height="15" fill="rgb(205,209,38)" fg:x="2871" fg:w="1"/><text x="97.7704%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="97.5204%" y="405" width="0.0340%" height="15" fill="rgb(240,21,42)" fg:x="2871" fg:w="1"/><text x="97.7704%" y="415.50"></text></g><g><title>core::iter::adapters::flatten::and_then_or_clear (1 samples, 0.03%)</title><rect x="97.5204%" y="389" width="0.0340%" height="15" fill="rgb(241,132,3)" fg:x="2871" fg:w="1"/><text x="97.7704%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (1 samples, 0.03%)</title><rect x="97.5204%" y="373" width="0.0340%" height="15" fill="rgb(225,14,2)" fg:x="2871" fg:w="1"/><text x="97.7704%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::texture::TextureUsageScope&lt;wgpu_hal::vulkan::Api&gt;&gt; (1 samples, 0.03%)</title><rect x="97.5543%" y="565" width="0.0340%" height="15" fill="rgb(210,141,35)" fg:x="2872" fg:w="1"/><text x="97.8043%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::metadata::ResourceMetadata&lt;wgpu_hal::gles::Api&gt;&gt; (1 samples, 0.03%)</title><rect x="97.5543%" y="549" width="0.0340%" height="15" fill="rgb(251,14,44)" fg:x="2872" fg:w="1"/><text x="97.8043%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::option::Option&lt;wgpu_core::RefCount&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="97.5543%" y="533" width="0.0340%" height="15" fill="rgb(247,48,18)" fg:x="2872" fg:w="1"/><text x="97.8043%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="97.5543%" y="517" width="0.0340%" height="15" fill="rgb(225,0,40)" fg:x="2872" fg:w="1"/><text x="97.8043%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;[core::option::Option&lt;wgpu_core::RefCount&gt;]&gt; (1 samples, 0.03%)</title><rect x="97.5543%" y="501" width="0.0340%" height="15" fill="rgb(221,31,33)" fg:x="2872" fg:w="1"/><text x="97.8043%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;wgpu_core::RefCount&gt;&gt; (1 samples, 0.03%)</title><rect x="97.5543%" y="485" width="0.0340%" height="15" fill="rgb(237,42,40)" fg:x="2872" fg:w="1"/><text x="97.8043%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::RefCount&gt; (1 samples, 0.03%)</title><rect x="97.5543%" y="469" width="0.0340%" height="15" fill="rgb(233,51,29)" fg:x="2872" fg:w="1"/><text x="97.8043%" y="479.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="97.5543%" y="453" width="0.0340%" height="15" fill="rgb(226,58,20)" fg:x="2872" fg:w="1"/><text x="97.8043%" y="463.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;A&gt;::insert_barriers_from_tracker (1 samples, 0.03%)</title><rect x="97.5883%" y="565" width="0.0340%" height="15" fill="rgb(208,98,7)" fg:x="2873" fg:w="1"/><text x="97.8383%" y="575.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;A&gt;::drain_barriers (1 samples, 0.03%)</title><rect x="97.5883%" y="549" width="0.0340%" height="15" fill="rgb(228,143,44)" fg:x="2873" fg:w="1"/><text x="97.8383%" y="559.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::transition_buffers (1 samples, 0.03%)</title><rect x="97.5883%" y="533" width="0.0340%" height="15" fill="rgb(246,55,38)" fg:x="2873" fg:w="1"/><text x="97.8383%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="97.5883%" y="517" width="0.0340%" height="15" fill="rgb(247,87,16)" fg:x="2873" fg:w="1"/><text x="97.8383%" y="527.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="97.5883%" y="501" width="0.0340%" height="15" fill="rgb(234,129,42)" fg:x="2873" fg:w="1"/><text x="97.8383%" y="511.50"></text></g><g><title>wgpu_core::command::memory_init::&lt;impl wgpu_core::command::BakedCommands&lt;A&gt;&gt;::initialize_texture_memory (2 samples, 0.07%)</title><rect x="97.6223%" y="565" width="0.0679%" height="15" fill="rgb(220,82,16)" fg:x="2874" fg:w="2"/><text x="97.8723%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::init_tracker::InitTrackerDrain&lt;u32&gt;&gt; (1 samples, 0.03%)</title><rect x="97.6562%" y="549" width="0.0340%" height="15" fill="rgb(211,88,4)" fg:x="2875" fg:w="1"/><text x="97.9062%" y="559.50"></text></g><g><title>&lt;wgpu_core::init_tracker::InitTrackerDrain&lt;Idx&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="97.6562%" y="533" width="0.0340%" height="15" fill="rgb(248,151,21)" fg:x="2875" fg:w="1"/><text x="97.9062%" y="543.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="97.6562%" y="517" width="0.0340%" height="15" fill="rgb(238,163,6)" fg:x="2875" fg:w="1"/><text x="97.9062%" y="527.50"></text></g><g><title>&lt;wgpu_core::init_tracker::InitTrackerDrain&lt;Idx&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="97.6562%" y="501" width="0.0340%" height="15" fill="rgb(209,183,11)" fg:x="2875" fg:w="1"/><text x="97.9062%" y="511.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::maintain (1 samples, 0.03%)</title><rect x="97.6902%" y="565" width="0.0340%" height="15" fill="rgb(219,37,20)" fg:x="2876" fg:w="1"/><text x="97.9402%" y="575.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::get_fence_value (1 samples, 0.03%)</title><rect x="97.6902%" y="549" width="0.0340%" height="15" fill="rgb(210,158,4)" fg:x="2876" fg:w="1"/><text x="97.9402%" y="559.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope_with_executor_inner::{{closure}} (17 samples, 0.58%)</title><rect x="97.2147%" y="1173" width="0.5774%" height="15" fill="rgb(221,167,53)" fg:x="2862" fg:w="17"/><text x="97.4647%" y="1183.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::execute_scope::{{closure}} (17 samples, 0.58%)</title><rect x="97.2147%" y="1157" width="0.5774%" height="15" fill="rgb(237,151,45)" fg:x="2862" fg:w="17"/><text x="97.4647%" y="1167.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (17 samples, 0.58%)</title><rect x="97.2147%" y="1141" width="0.5774%" height="15" fill="rgb(231,39,3)" fg:x="2862" fg:w="17"/><text x="97.4647%" y="1151.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::execute_scope::{{closure}}::{{closure}} (17 samples, 0.58%)</title><rect x="97.2147%" y="1125" width="0.5774%" height="15" fill="rgb(212,167,28)" fg:x="2862" fg:w="17"/><text x="97.4647%" y="1135.50"></text></g><g><title>&lt;futures_lite::future::CatchUnwind&lt;F&gt; as core::future::future::Future&gt;::poll (17 samples, 0.58%)</title><rect x="97.2147%" y="1109" width="0.5774%" height="15" fill="rgb(232,178,8)" fg:x="2862" fg:w="17"/><text x="97.4647%" y="1119.50"></text></g><g><title>std::panic::catch_unwind (17 samples, 0.58%)</title><rect x="97.2147%" y="1093" width="0.5774%" height="15" fill="rgb(225,151,20)" fg:x="2862" fg:w="17"/><text x="97.4647%" y="1103.50"></text></g><g><title>std::panicking::try (17 samples, 0.58%)</title><rect x="97.2147%" y="1077" width="0.5774%" height="15" fill="rgb(238,3,37)" fg:x="2862" fg:w="17"/><text x="97.4647%" y="1087.50"></text></g><g><title>std::panicking::try::do_call (17 samples, 0.58%)</title><rect x="97.2147%" y="1061" width="0.5774%" height="15" fill="rgb(251,147,42)" fg:x="2862" fg:w="17"/><text x="97.4647%" y="1071.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (17 samples, 0.58%)</title><rect x="97.2147%" y="1045" width="0.5774%" height="15" fill="rgb(208,173,10)" fg:x="2862" fg:w="17"/><text x="97.4647%" y="1055.50"></text></g><g><title>&lt;futures_lite::future::CatchUnwind&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (17 samples, 0.58%)</title><rect x="97.2147%" y="1029" width="0.5774%" height="15" fill="rgb(246,225,4)" fg:x="2862" fg:w="17"/><text x="97.4647%" y="1039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::future::future::Future&gt;::poll (17 samples, 0.58%)</title><rect x="97.2147%" y="1013" width="0.5774%" height="15" fill="rgb(248,102,6)" fg:x="2862" fg:w="17"/><text x="97.4647%" y="1023.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::execute_scope::{{closure}}::{{closure}}::{{closure}} (17 samples, 0.58%)</title><rect x="97.2147%" y="997" width="0.5774%" height="15" fill="rgb(232,6,21)" fg:x="2862" fg:w="17"/><text x="97.4647%" y="1007.50"></text></g><g><title>bevy_tasks::thread_executor::ThreadExecutorTicker::tick::{{closure}} (17 samples, 0.58%)</title><rect x="97.2147%" y="981" width="0.5774%" height="15" fill="rgb(221,179,22)" fg:x="2862" fg:w="17"/><text x="97.4647%" y="991.50"></text></g><g><title>async_executor::Executor::tick::{{closure}} (17 samples, 0.58%)</title><rect x="97.2147%" y="965" width="0.5774%" height="15" fill="rgb(252,50,20)" fg:x="2862" fg:w="17"/><text x="97.4647%" y="975.50"></text></g><g><title>async_task::runnable::Runnable&lt;M&gt;::run (17 samples, 0.58%)</title><rect x="97.2147%" y="949" width="0.5774%" height="15" fill="rgb(222,56,38)" fg:x="2862" fg:w="17"/><text x="97.4647%" y="959.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::run (17 samples, 0.58%)</title><rect x="97.2147%" y="933" width="0.5774%" height="15" fill="rgb(206,193,29)" fg:x="2862" fg:w="17"/><text x="97.4647%" y="943.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (17 samples, 0.58%)</title><rect x="97.2147%" y="917" width="0.5774%" height="15" fill="rgb(239,192,45)" fg:x="2862" fg:w="17"/><text x="97.4647%" y="927.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::spawn_exclusive_system_task::{{closure}} (17 samples, 0.58%)</title><rect x="97.2147%" y="901" width="0.5774%" height="15" fill="rgb(254,18,36)" fg:x="2862" fg:w="17"/><text x="97.4647%" y="911.50"></text></g><g><title>std::panic::catch_unwind (17 samples, 0.58%)</title><rect x="97.2147%" y="885" width="0.5774%" height="15" fill="rgb(221,127,11)" fg:x="2862" fg:w="17"/><text x="97.4647%" y="895.50"></text></g><g><title>std::panicking::try (17 samples, 0.58%)</title><rect x="97.2147%" y="869" width="0.5774%" height="15" fill="rgb(234,146,35)" fg:x="2862" fg:w="17"/><text x="97.4647%" y="879.50"></text></g><g><title>std::panicking::try::do_call (17 samples, 0.58%)</title><rect x="97.2147%" y="853" width="0.5774%" height="15" fill="rgb(254,201,37)" fg:x="2862" fg:w="17"/><text x="97.4647%" y="863.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (17 samples, 0.58%)</title><rect x="97.2147%" y="837" width="0.5774%" height="15" fill="rgb(211,202,23)" fg:x="2862" fg:w="17"/><text x="97.4647%" y="847.50"></text></g><g><title>core::ops::function::FnOnce::call_once (17 samples, 0.58%)</title><rect x="97.2147%" y="821" width="0.5774%" height="15" fill="rgb(237,91,2)" fg:x="2862" fg:w="17"/><text x="97.4647%" y="831.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::spawn_exclusive_system_task::{{closure}}::{{closure}} (17 samples, 0.58%)</title><rect x="97.2147%" y="805" width="0.5774%" height="15" fill="rgb(226,228,36)" fg:x="2862" fg:w="17"/><text x="97.4647%" y="815.50"></text></g><g><title>&lt;bevy_ecs::system::exclusive_function_system::ExclusiveFunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::run (17 samples, 0.58%)</title><rect x="97.2147%" y="789" width="0.5774%" height="15" fill="rgb(213,63,50)" fg:x="2862" fg:w="17"/><text x="97.4647%" y="799.50"></text></g><g><title>&lt;Func as bevy_ecs::system::exclusive_function_system::ExclusiveSystemParamFunction&lt;fn() .&gt; Out&gt;&gt;::run (17 samples, 0.58%)</title><rect x="97.2147%" y="773" width="0.5774%" height="15" fill="rgb(235,194,19)" fg:x="2862" fg:w="17"/><text x="97.4647%" y="783.50"></text></g><g><title>&lt;Func as bevy_ecs::system::exclusive_function_system::ExclusiveSystemParamFunction&lt;fn() .&gt; Out&gt;&gt;::run::call_inner (17 samples, 0.58%)</title><rect x="97.2147%" y="757" width="0.5774%" height="15" fill="rgb(207,204,18)" fg:x="2862" fg:w="17"/><text x="97.4647%" y="767.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (17 samples, 0.58%)</title><rect x="97.2147%" y="741" width="0.5774%" height="15" fill="rgb(248,8,7)" fg:x="2862" fg:w="17"/><text x="97.4647%" y="751.50"></text></g><g><title>core::ops::function::FnMut::call_mut (17 samples, 0.58%)</title><rect x="97.2147%" y="725" width="0.5774%" height="15" fill="rgb(223,145,47)" fg:x="2862" fg:w="17"/><text x="97.4647%" y="735.50"></text></g><g><title>game_render::render_surfaces (17 samples, 0.58%)</title><rect x="97.2147%" y="709" width="0.5774%" height="15" fill="rgb(228,84,11)" fg:x="2862" fg:w="17"/><text x="97.4647%" y="719.50"></text></g><g><title>bevy_ecs::world::World::resource_scope (17 samples, 0.58%)</title><rect x="97.2147%" y="693" width="0.5774%" height="15" fill="rgb(218,76,45)" fg:x="2862" fg:w="17"/><text x="97.4647%" y="703.50"></text></g><g><title>game_render::render_surfaces::{{closure}} (17 samples, 0.58%)</title><rect x="97.2147%" y="677" width="0.5774%" height="15" fill="rgb(223,80,15)" fg:x="2862" fg:w="17"/><text x="97.4647%" y="687.50"></text></g><g><title>bevy_ecs::world::World::resource_scope (17 samples, 0.58%)</title><rect x="97.2147%" y="661" width="0.5774%" height="15" fill="rgb(219,218,33)" fg:x="2862" fg:w="17"/><text x="97.4647%" y="671.50"></text></g><g><title>game_render::render_surfaces::{{closure}}::{{closure}} (17 samples, 0.58%)</title><rect x="97.2147%" y="645" width="0.5774%" height="15" fill="rgb(208,51,11)" fg:x="2862" fg:w="17"/><text x="97.4647%" y="655.50"></text></g><g><title>wgpu::Queue::submit (9 samples, 0.31%)</title><rect x="97.4864%" y="629" width="0.3057%" height="15" fill="rgb(229,165,39)" fg:x="2870" fg:w="9"/><text x="97.7364%" y="639.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::queue_submit (9 samples, 0.31%)</title><rect x="97.4864%" y="613" width="0.3057%" height="15" fill="rgb(241,100,24)" fg:x="2870" fg:w="9"/><text x="97.7364%" y="623.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::queue_submit (9 samples, 0.31%)</title><rect x="97.4864%" y="597" width="0.3057%" height="15" fill="rgb(228,14,23)" fg:x="2870" fg:w="9"/><text x="97.7364%" y="607.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (9 samples, 0.31%)</title><rect x="97.4864%" y="581" width="0.3057%" height="15" fill="rgb(247,116,52)" fg:x="2870" fg:w="9"/><text x="97.7364%" y="591.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::end_encoding (2 samples, 0.07%)</title><rect x="97.7242%" y="565" width="0.0679%" height="15" fill="rgb(216,149,33)" fg:x="2877" fg:w="2"/><text x="97.9742%" y="575.50"></text></g><g><title>ash::device::Device::end_command_buffer (2 samples, 0.07%)</title><rect x="97.7242%" y="549" width="0.0679%" height="15" fill="rgb(238,142,29)" fg:x="2877" fg:w="2"/><text x="97.9742%" y="559.50"></text></g><g><title>[libvulkan_radeon.so] (2 samples, 0.07%)</title><rect x="97.7242%" y="533" width="0.0679%" height="15" fill="rgb(224,83,40)" fg:x="2877" fg:w="2"/><text x="97.9742%" y="543.50"></text></g><g><title>[libvulkan_radeon.so] (2 samples, 0.07%)</title><rect x="97.7242%" y="517" width="0.0679%" height="15" fill="rgb(234,165,11)" fg:x="2877" fg:w="2"/><text x="97.9742%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.03%)</title><rect x="97.7921%" y="437" width="0.0340%" height="15" fill="rgb(215,96,23)" fg:x="2879" fg:w="1"/><text x="98.0421%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.03%)</title><rect x="97.7921%" y="421" width="0.0340%" height="15" fill="rgb(233,179,26)" fg:x="2879" fg:w="1"/><text x="98.0421%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1 samples, 0.03%)</title><rect x="97.7921%" y="405" width="0.0340%" height="15" fill="rgb(225,129,33)" fg:x="2879" fg:w="1"/><text x="98.0421%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.03%)</title><rect x="97.7921%" y="389" width="0.0340%" height="15" fill="rgb(237,49,13)" fg:x="2879" fg:w="1"/><text x="98.0421%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.03%)</title><rect x="97.7921%" y="373" width="0.0340%" height="15" fill="rgb(211,3,31)" fg:x="2879" fg:w="1"/><text x="98.0421%" y="383.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="97.8261%" y="437" width="0.0340%" height="15" fill="rgb(216,152,19)" fg:x="2880" fg:w="1"/><text x="98.0761%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::command::render::State&gt; (1 samples, 0.03%)</title><rect x="97.8601%" y="437" width="0.0340%" height="15" fill="rgb(251,121,35)" fg:x="2881" fg:w="1"/><text x="98.1101%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::command::bind::Binder&gt; (1 samples, 0.03%)</title><rect x="97.8601%" y="421" width="0.0340%" height="15" fill="rgb(210,217,47)" fg:x="2881" fg:w="1"/><text x="98.1101%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;[wgpu_core::command::bind::EntryPayload: 8]&gt; (1 samples, 0.03%)</title><rect x="97.8601%" y="405" width="0.0340%" height="15" fill="rgb(244,116,22)" fg:x="2881" fg:w="1"/><text x="98.1101%" y="415.50"></text></g><g><title>cfree (1 samples, 0.03%)</title><rect x="97.8601%" y="389" width="0.0340%" height="15" fill="rgb(228,17,21)" fg:x="2881" fg:w="1"/><text x="98.1101%" y="399.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::read (1 samples, 0.03%)</title><rect x="97.8940%" y="437" width="0.0340%" height="15" fill="rgb(240,149,34)" fg:x="2882" fg:w="1"/><text x="98.1440%" y="447.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (1 samples, 0.03%)</title><rect x="97.8940%" y="421" width="0.0340%" height="15" fill="rgb(208,125,47)" fg:x="2882" fg:w="1"/><text x="98.1440%" y="431.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (1 samples, 0.03%)</title><rect x="97.8940%" y="405" width="0.0340%" height="15" fill="rgb(249,186,39)" fg:x="2882" fg:w="1"/><text x="98.1440%" y="415.50"></text></g><g><title>&lt;game_render::pipeline::MainPass as game_render::graph::Node&gt;::render (5 samples, 0.17%)</title><rect x="97.7921%" y="549" width="0.1698%" height="15" fill="rgb(240,220,33)" fg:x="2879" fg:w="5"/><text x="98.0421%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (5 samples, 0.17%)</title><rect x="97.7921%" y="533" width="0.1698%" height="15" fill="rgb(243,110,23)" fg:x="2879" fg:w="5"/><text x="98.0421%" y="543.50"></text></g><g><title>&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (5 samples, 0.17%)</title><rect x="97.7921%" y="517" width="0.1698%" height="15" fill="rgb(219,163,46)" fg:x="2879" fg:w="5"/><text x="98.0421%" y="527.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::command_encoder_end_render_pass (5 samples, 0.17%)</title><rect x="97.7921%" y="501" width="0.1698%" height="15" fill="rgb(216,126,30)" fg:x="2879" fg:w="5"/><text x="98.0421%" y="511.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::command_encoder_end_render_pass (5 samples, 0.17%)</title><rect x="97.7921%" y="485" width="0.1698%" height="15" fill="rgb(208,139,11)" fg:x="2879" fg:w="5"/><text x="98.0421%" y="495.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (5 samples, 0.17%)</title><rect x="97.7921%" y="469" width="0.1698%" height="15" fill="rgb(213,118,36)" fg:x="2879" fg:w="5"/><text x="98.0421%" y="479.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (5 samples, 0.17%)</title><rect x="97.7921%" y="453" width="0.1698%" height="15" fill="rgb(226,43,17)" fg:x="2879" fg:w="5"/><text x="98.0421%" y="463.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::set_vertex_buffer (1 samples, 0.03%)</title><rect x="97.9280%" y="437" width="0.0340%" height="15" fill="rgb(254,217,4)" fg:x="2883" fg:w="1"/><text x="98.1780%" y="447.50"></text></g><g><title>ash::device::Device::cmd_bind_vertex_buffers (1 samples, 0.03%)</title><rect x="97.9280%" y="421" width="0.0340%" height="15" fill="rgb(210,134,47)" fg:x="2883" fg:w="1"/><text x="98.1780%" y="431.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="97.9280%" y="405" width="0.0340%" height="15" fill="rgb(237,24,49)" fg:x="2883" fg:w="1"/><text x="98.1780%" y="415.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="97.9280%" y="389" width="0.0340%" height="15" fill="rgb(251,39,46)" fg:x="2883" fg:w="1"/><text x="98.1780%" y="399.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;A&gt;::insert_barriers_from_scope (1 samples, 0.03%)</title><rect x="97.9620%" y="453" width="0.0340%" height="15" fill="rgb(251,220,3)" fg:x="2884" fg:w="1"/><text x="98.2120%" y="463.50"></text></g><g><title>wgpu_core::track::texture::TextureTracker&lt;A&gt;::set_from_usage_scope (1 samples, 0.03%)</title><rect x="97.9620%" y="437" width="0.0340%" height="15" fill="rgb(228,105,12)" fg:x="2884" fg:w="1"/><text x="98.2120%" y="447.50"></text></g><g><title>wgpu_core::command::CommandEncoder&lt;A&gt;::close (2 samples, 0.07%)</title><rect x="97.9959%" y="453" width="0.0679%" height="15" fill="rgb(215,196,1)" fg:x="2885" fg:w="2"/><text x="98.2459%" y="463.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::end_encoding (2 samples, 0.07%)</title><rect x="97.9959%" y="437" width="0.0679%" height="15" fill="rgb(214,33,39)" fg:x="2885" fg:w="2"/><text x="98.2459%" y="447.50"></text></g><g><title>ash::device::Device::end_command_buffer (2 samples, 0.07%)</title><rect x="97.9959%" y="421" width="0.0679%" height="15" fill="rgb(220,19,52)" fg:x="2885" fg:w="2"/><text x="98.2459%" y="431.50"></text></g><g><title>[libvulkan_radeon.so] (2 samples, 0.07%)</title><rect x="97.9959%" y="405" width="0.0679%" height="15" fill="rgb(221,78,38)" fg:x="2885" fg:w="2"/><text x="98.2459%" y="415.50"></text></g><g><title>wgpu_core::command::CommandEncoder&lt;A&gt;::open_pass (1 samples, 0.03%)</title><rect x="98.0639%" y="453" width="0.0340%" height="15" fill="rgb(253,30,16)" fg:x="2887" fg:w="1"/><text x="98.3139%" y="463.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_encoding (1 samples, 0.03%)</title><rect x="98.0639%" y="437" width="0.0340%" height="15" fill="rgb(242,65,0)" fg:x="2887" fg:w="1"/><text x="98.3139%" y="447.50"></text></g><g><title>ash::device::Device::begin_command_buffer (1 samples, 0.03%)</title><rect x="98.0639%" y="421" width="0.0340%" height="15" fill="rgb(235,201,12)" fg:x="2887" fg:w="1"/><text x="98.3139%" y="431.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="98.0639%" y="405" width="0.0340%" height="15" fill="rgb(233,161,9)" fg:x="2887" fg:w="1"/><text x="98.3139%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (5 samples, 0.17%)</title><rect x="97.9620%" y="549" width="0.1698%" height="15" fill="rgb(241,207,41)" fg:x="2884" fg:w="5"/><text x="98.2120%" y="559.50"></text></g><g><title>&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (5 samples, 0.17%)</title><rect x="97.9620%" y="533" width="0.1698%" height="15" fill="rgb(212,69,46)" fg:x="2884" fg:w="5"/><text x="98.2120%" y="543.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::command_encoder_end_render_pass (5 samples, 0.17%)</title><rect x="97.9620%" y="517" width="0.1698%" height="15" fill="rgb(239,69,45)" fg:x="2884" fg:w="5"/><text x="98.2120%" y="527.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::command_encoder_end_render_pass (5 samples, 0.17%)</title><rect x="97.9620%" y="501" width="0.1698%" height="15" fill="rgb(242,117,48)" fg:x="2884" fg:w="5"/><text x="98.2120%" y="511.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (5 samples, 0.17%)</title><rect x="97.9620%" y="485" width="0.1698%" height="15" fill="rgb(228,41,36)" fg:x="2884" fg:w="5"/><text x="98.2120%" y="495.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (5 samples, 0.17%)</title><rect x="97.9620%" y="469" width="0.1698%" height="15" fill="rgb(212,3,32)" fg:x="2884" fg:w="5"/><text x="98.2120%" y="479.50"></text></g><g><title>wgpu_core::track::Tracker&lt;A&gt;::set_size (1 samples, 0.03%)</title><rect x="98.0978%" y="453" width="0.0340%" height="15" fill="rgb(233,41,49)" fg:x="2888" fg:w="1"/><text x="98.3478%" y="463.50"></text></g><g><title>wgpu_core::track::stateless::StatelessTracker&lt;A,T,Id&gt;::set_size (1 samples, 0.03%)</title><rect x="98.0978%" y="437" width="0.0340%" height="15" fill="rgb(252,170,49)" fg:x="2888" fg:w="1"/><text x="98.3478%" y="447.50"></text></g><g><title>wgpu_core::track::metadata::ResourceMetadata&lt;A&gt;::set_size (1 samples, 0.03%)</title><rect x="98.0978%" y="421" width="0.0340%" height="15" fill="rgb(229,53,26)" fg:x="2888" fg:w="1"/><text x="98.3478%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (1 samples, 0.03%)</title><rect x="98.0978%" y="405" width="0.0340%" height="15" fill="rgb(217,157,12)" fg:x="2888" fg:w="1"/><text x="98.3478%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (1 samples, 0.03%)</title><rect x="98.0978%" y="389" width="0.0340%" height="15" fill="rgb(227,17,9)" fg:x="2888" fg:w="1"/><text x="98.3478%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.03%)</title><rect x="98.0978%" y="373" width="0.0340%" height="15" fill="rgb(218,84,12)" fg:x="2888" fg:w="1"/><text x="98.3478%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.03%)</title><rect x="98.0978%" y="357" width="0.0340%" height="15" fill="rgb(212,79,24)" fg:x="2888" fg:w="1"/><text x="98.3478%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.03%)</title><rect x="98.0978%" y="341" width="0.0340%" height="15" fill="rgb(217,222,37)" fg:x="2888" fg:w="1"/><text x="98.3478%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.03%)</title><rect x="98.0978%" y="325" width="0.0340%" height="15" fill="rgb(246,208,8)" fg:x="2888" fg:w="1"/><text x="98.3478%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.03%)</title><rect x="98.0978%" y="309" width="0.0340%" height="15" fill="rgb(244,133,10)" fg:x="2888" fg:w="1"/><text x="98.3478%" y="319.50"></text></g><g><title>malloc (1 samples, 0.03%)</title><rect x="98.0978%" y="293" width="0.0340%" height="15" fill="rgb(209,219,41)" fg:x="2888" fg:w="1"/><text x="98.3478%" y="303.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="98.0978%" y="277" width="0.0340%" height="15" fill="rgb(253,175,45)" fg:x="2888" fg:w="1"/><text x="98.3478%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,wgpu_core::hub::Storage&lt;wgpu_core::command::bundle::RenderBundle&lt;wgpu_hal::vulkan::Api&gt;,wgpu_core::id::Id&lt;wgpu_core::command::bundle::RenderBundle&lt;wgpu_hal::empty::Api&gt;&gt;&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="98.1658%" y="485" width="0.0340%" height="15" fill="rgb(235,100,37)" fg:x="2890" fg:w="1"/><text x="98.4158%" y="495.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="98.1658%" y="469" width="0.0340%" height="15" fill="rgb(225,87,19)" fg:x="2890" fg:w="1"/><text x="98.4158%" y="479.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (1 samples, 0.03%)</title><rect x="98.1658%" y="453" width="0.0340%" height="15" fill="rgb(217,152,17)" fg:x="2890" fg:w="1"/><text x="98.4158%" y="463.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::maintain (1 samples, 0.03%)</title><rect x="98.1997%" y="485" width="0.0340%" height="15" fill="rgb(235,72,13)" fg:x="2891" fg:w="1"/><text x="98.4497%" y="495.50"></text></g><g><title>wgpu::Queue::submit (5 samples, 0.17%)</title><rect x="98.1318%" y="549" width="0.1698%" height="15" fill="rgb(233,140,18)" fg:x="2889" fg:w="5"/><text x="98.3818%" y="559.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::queue_submit (5 samples, 0.17%)</title><rect x="98.1318%" y="533" width="0.1698%" height="15" fill="rgb(207,212,28)" fg:x="2889" fg:w="5"/><text x="98.3818%" y="543.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::queue_submit (5 samples, 0.17%)</title><rect x="98.1318%" y="517" width="0.1698%" height="15" fill="rgb(220,130,25)" fg:x="2889" fg:w="5"/><text x="98.3818%" y="527.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (5 samples, 0.17%)</title><rect x="98.1318%" y="501" width="0.1698%" height="15" fill="rgb(205,55,34)" fg:x="2889" fg:w="5"/><text x="98.3818%" y="511.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::read (2 samples, 0.07%)</title><rect x="98.2337%" y="485" width="0.0679%" height="15" fill="rgb(237,54,35)" fg:x="2892" fg:w="2"/><text x="98.4837%" y="495.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (2 samples, 0.07%)</title><rect x="98.2337%" y="469" width="0.0679%" height="15" fill="rgb(208,67,23)" fg:x="2892" fg:w="2"/><text x="98.4837%" y="479.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (2 samples, 0.07%)</title><rect x="98.2337%" y="453" width="0.0679%" height="15" fill="rgb(206,207,50)" fg:x="2892" fg:w="2"/><text x="98.4837%" y="463.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (1 samples, 0.03%)</title><rect x="98.2677%" y="437" width="0.0340%" height="15" fill="rgb(213,211,42)" fg:x="2893" fg:w="1"/><text x="98.5177%" y="447.50"></text></g><g><title>wgpu_core::hub::FutureId&lt;I,T&gt;::assign (1 samples, 0.03%)</title><rect x="98.3016%" y="485" width="0.0340%" height="15" fill="rgb(252,197,50)" fg:x="2894" fg:w="1"/><text x="98.5516%" y="495.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="98.3016%" y="469" width="0.0340%" height="15" fill="rgb(251,211,41)" fg:x="2894" fg:w="1"/><text x="98.5516%" y="479.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope_with_executor_inner (17 samples, 0.58%)</title><rect x="97.7921%" y="1173" width="0.5774%" height="15" fill="rgb(229,211,5)" fg:x="2879" fg:w="17"/><text x="98.0421%" y="1183.50"></text></g><g><title>futures_lite::future::block_on (17 samples, 0.58%)</title><rect x="97.7921%" y="1157" width="0.5774%" height="15" fill="rgb(239,36,31)" fg:x="2879" fg:w="17"/><text x="98.0421%" y="1167.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (17 samples, 0.58%)</title><rect x="97.7921%" y="1141" width="0.5774%" height="15" fill="rgb(248,67,31)" fg:x="2879" fg:w="17"/><text x="98.0421%" y="1151.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (17 samples, 0.58%)</title><rect x="97.7921%" y="1125" width="0.5774%" height="15" fill="rgb(249,55,44)" fg:x="2879" fg:w="17"/><text x="98.0421%" y="1135.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (17 samples, 0.58%)</title><rect x="97.7921%" y="1109" width="0.5774%" height="15" fill="rgb(216,82,12)" fg:x="2879" fg:w="17"/><text x="98.0421%" y="1119.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope_with_executor_inner::{{closure}} (17 samples, 0.58%)</title><rect x="97.7921%" y="1093" width="0.5774%" height="15" fill="rgb(242,174,1)" fg:x="2879" fg:w="17"/><text x="98.0421%" y="1103.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::execute_scope::{{closure}} (17 samples, 0.58%)</title><rect x="97.7921%" y="1077" width="0.5774%" height="15" fill="rgb(208,120,29)" fg:x="2879" fg:w="17"/><text x="98.0421%" y="1087.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (17 samples, 0.58%)</title><rect x="97.7921%" y="1061" width="0.5774%" height="15" fill="rgb(221,105,43)" fg:x="2879" fg:w="17"/><text x="98.0421%" y="1071.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::execute_scope::{{closure}}::{{closure}} (17 samples, 0.58%)</title><rect x="97.7921%" y="1045" width="0.5774%" height="15" fill="rgb(234,124,22)" fg:x="2879" fg:w="17"/><text x="98.0421%" y="1055.50"></text></g><g><title>&lt;futures_lite::future::CatchUnwind&lt;F&gt; as core::future::future::Future&gt;::poll (17 samples, 0.58%)</title><rect x="97.7921%" y="1029" width="0.5774%" height="15" fill="rgb(212,23,30)" fg:x="2879" fg:w="17"/><text x="98.0421%" y="1039.50"></text></g><g><title>std::panic::catch_unwind (17 samples, 0.58%)</title><rect x="97.7921%" y="1013" width="0.5774%" height="15" fill="rgb(219,122,53)" fg:x="2879" fg:w="17"/><text x="98.0421%" y="1023.50"></text></g><g><title>std::panicking::try (17 samples, 0.58%)</title><rect x="97.7921%" y="997" width="0.5774%" height="15" fill="rgb(248,84,24)" fg:x="2879" fg:w="17"/><text x="98.0421%" y="1007.50"></text></g><g><title>std::panicking::try::do_call (17 samples, 0.58%)</title><rect x="97.7921%" y="981" width="0.5774%" height="15" fill="rgb(245,115,18)" fg:x="2879" fg:w="17"/><text x="98.0421%" y="991.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (17 samples, 0.58%)</title><rect x="97.7921%" y="965" width="0.5774%" height="15" fill="rgb(227,176,51)" fg:x="2879" fg:w="17"/><text x="98.0421%" y="975.50"></text></g><g><title>&lt;futures_lite::future::CatchUnwind&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (17 samples, 0.58%)</title><rect x="97.7921%" y="949" width="0.5774%" height="15" fill="rgb(229,63,42)" fg:x="2879" fg:w="17"/><text x="98.0421%" y="959.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::future::future::Future&gt;::poll (17 samples, 0.58%)</title><rect x="97.7921%" y="933" width="0.5774%" height="15" fill="rgb(247,202,24)" fg:x="2879" fg:w="17"/><text x="98.0421%" y="943.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::execute_scope::{{closure}}::{{closure}}::{{closure}} (17 samples, 0.58%)</title><rect x="97.7921%" y="917" width="0.5774%" height="15" fill="rgb(244,173,20)" fg:x="2879" fg:w="17"/><text x="98.0421%" y="927.50"></text></g><g><title>bevy_tasks::thread_executor::ThreadExecutorTicker::tick::{{closure}} (17 samples, 0.58%)</title><rect x="97.7921%" y="901" width="0.5774%" height="15" fill="rgb(242,81,47)" fg:x="2879" fg:w="17"/><text x="98.0421%" y="911.50"></text></g><g><title>async_executor::Executor::tick::{{closure}} (17 samples, 0.58%)</title><rect x="97.7921%" y="885" width="0.5774%" height="15" fill="rgb(231,185,54)" fg:x="2879" fg:w="17"/><text x="98.0421%" y="895.50"></text></g><g><title>async_task::runnable::Runnable&lt;M&gt;::run (17 samples, 0.58%)</title><rect x="97.7921%" y="869" width="0.5774%" height="15" fill="rgb(243,55,32)" fg:x="2879" fg:w="17"/><text x="98.0421%" y="879.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::run (17 samples, 0.58%)</title><rect x="97.7921%" y="853" width="0.5774%" height="15" fill="rgb(208,167,19)" fg:x="2879" fg:w="17"/><text x="98.0421%" y="863.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (17 samples, 0.58%)</title><rect x="97.7921%" y="837" width="0.5774%" height="15" fill="rgb(231,72,35)" fg:x="2879" fg:w="17"/><text x="98.0421%" y="847.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::spawn_exclusive_system_task::{{closure}} (17 samples, 0.58%)</title><rect x="97.7921%" y="821" width="0.5774%" height="15" fill="rgb(250,173,51)" fg:x="2879" fg:w="17"/><text x="98.0421%" y="831.50"></text></g><g><title>std::panic::catch_unwind (17 samples, 0.58%)</title><rect x="97.7921%" y="805" width="0.5774%" height="15" fill="rgb(209,5,22)" fg:x="2879" fg:w="17"/><text x="98.0421%" y="815.50"></text></g><g><title>std::panicking::try (17 samples, 0.58%)</title><rect x="97.7921%" y="789" width="0.5774%" height="15" fill="rgb(250,174,19)" fg:x="2879" fg:w="17"/><text x="98.0421%" y="799.50"></text></g><g><title>std::panicking::try::do_call (17 samples, 0.58%)</title><rect x="97.7921%" y="773" width="0.5774%" height="15" fill="rgb(217,3,49)" fg:x="2879" fg:w="17"/><text x="98.0421%" y="783.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (17 samples, 0.58%)</title><rect x="97.7921%" y="757" width="0.5774%" height="15" fill="rgb(218,225,5)" fg:x="2879" fg:w="17"/><text x="98.0421%" y="767.50"></text></g><g><title>core::ops::function::FnOnce::call_once (17 samples, 0.58%)</title><rect x="97.7921%" y="741" width="0.5774%" height="15" fill="rgb(236,89,11)" fg:x="2879" fg:w="17"/><text x="98.0421%" y="751.50"></text></g><g><title>bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor::spawn_exclusive_system_task::{{closure}}::{{closure}} (17 samples, 0.58%)</title><rect x="97.7921%" y="725" width="0.5774%" height="15" fill="rgb(206,33,28)" fg:x="2879" fg:w="17"/><text x="98.0421%" y="735.50"></text></g><g><title>&lt;bevy_ecs::system::exclusive_function_system::ExclusiveFunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::run (17 samples, 0.58%)</title><rect x="97.7921%" y="709" width="0.5774%" height="15" fill="rgb(241,56,42)" fg:x="2879" fg:w="17"/><text x="98.0421%" y="719.50"></text></g><g><title>&lt;Func as bevy_ecs::system::exclusive_function_system::ExclusiveSystemParamFunction&lt;fn() .&gt; Out&gt;&gt;::run (17 samples, 0.58%)</title><rect x="97.7921%" y="693" width="0.5774%" height="15" fill="rgb(222,44,11)" fg:x="2879" fg:w="17"/><text x="98.0421%" y="703.50"></text></g><g><title>&lt;Func as bevy_ecs::system::exclusive_function_system::ExclusiveSystemParamFunction&lt;fn() .&gt; Out&gt;&gt;::run::call_inner (17 samples, 0.58%)</title><rect x="97.7921%" y="677" width="0.5774%" height="15" fill="rgb(234,111,20)" fg:x="2879" fg:w="17"/><text x="98.0421%" y="687.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (17 samples, 0.58%)</title><rect x="97.7921%" y="661" width="0.5774%" height="15" fill="rgb(237,77,6)" fg:x="2879" fg:w="17"/><text x="98.0421%" y="671.50"></text></g><g><title>core::ops::function::FnMut::call_mut (17 samples, 0.58%)</title><rect x="97.7921%" y="645" width="0.5774%" height="15" fill="rgb(235,111,23)" fg:x="2879" fg:w="17"/><text x="98.0421%" y="655.50"></text></g><g><title>game_render::render_surfaces (17 samples, 0.58%)</title><rect x="97.7921%" y="629" width="0.5774%" height="15" fill="rgb(251,135,29)" fg:x="2879" fg:w="17"/><text x="98.0421%" y="639.50"></text></g><g><title>bevy_ecs::world::World::resource_scope (17 samples, 0.58%)</title><rect x="97.7921%" y="613" width="0.5774%" height="15" fill="rgb(217,57,1)" fg:x="2879" fg:w="17"/><text x="98.0421%" y="623.50"></text></g><g><title>game_render::render_surfaces::{{closure}} (17 samples, 0.58%)</title><rect x="97.7921%" y="597" width="0.5774%" height="15" fill="rgb(249,119,31)" fg:x="2879" fg:w="17"/><text x="98.0421%" y="607.50"></text></g><g><title>bevy_ecs::world::World::resource_scope (17 samples, 0.58%)</title><rect x="97.7921%" y="581" width="0.5774%" height="15" fill="rgb(233,164,33)" fg:x="2879" fg:w="17"/><text x="98.0421%" y="591.50"></text></g><g><title>game_render::render_surfaces::{{closure}}::{{closure}} (17 samples, 0.58%)</title><rect x="97.7921%" y="565" width="0.5774%" height="15" fill="rgb(250,217,43)" fg:x="2879" fg:w="17"/><text x="98.0421%" y="575.50"></text></g><g><title>wgpu::Surface::get_current_texture (2 samples, 0.07%)</title><rect x="98.3016%" y="549" width="0.0679%" height="15" fill="rgb(232,154,50)" fg:x="2894" fg:w="2"/><text x="98.5516%" y="559.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::surface_get_current_texture (2 samples, 0.07%)</title><rect x="98.3016%" y="533" width="0.0679%" height="15" fill="rgb(227,190,8)" fg:x="2894" fg:w="2"/><text x="98.5516%" y="543.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::surface_get_current_texture (2 samples, 0.07%)</title><rect x="98.3016%" y="517" width="0.0679%" height="15" fill="rgb(209,217,32)" fg:x="2894" fg:w="2"/><text x="98.5516%" y="527.50"></text></g><g><title>wgpu_core::present::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_get_current_texture (2 samples, 0.07%)</title><rect x="98.3016%" y="501" width="0.0679%" height="15" fill="rgb(243,203,50)" fg:x="2894" fg:w="2"/><text x="98.5516%" y="511.50"></text></g><g><title>wgpu_hal::vulkan::instance::&lt;impl wgpu_hal::Surface&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Surface&gt;::acquire_texture (1 samples, 0.03%)</title><rect x="98.3356%" y="485" width="0.0340%" height="15" fill="rgb(232,152,27)" fg:x="2895" fg:w="1"/><text x="98.5856%" y="495.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::acquire_next_image (1 samples, 0.03%)</title><rect x="98.3356%" y="469" width="0.0340%" height="15" fill="rgb(240,34,29)" fg:x="2895" fg:w="1"/><text x="98.5856%" y="479.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="98.3356%" y="453" width="0.0340%" height="15" fill="rgb(215,185,52)" fg:x="2895" fg:w="1"/><text x="98.5856%" y="463.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="98.3356%" y="437" width="0.0340%" height="15" fill="rgb(240,89,49)" fg:x="2895" fg:w="1"/><text x="98.5856%" y="447.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="98.3356%" y="421" width="0.0340%" height="15" fill="rgb(225,12,52)" fg:x="2895" fg:w="1"/><text x="98.5856%" y="431.50"></text></g><g><title>wl_display_dispatch_queue_pending (1 samples, 0.03%)</title><rect x="98.3356%" y="405" width="0.0340%" height="15" fill="rgb(239,128,45)" fg:x="2895" fg:w="1"/><text x="98.5856%" y="415.50"></text></g><g><title>[libwayland-client.so.0.22.0] (1 samples, 0.03%)</title><rect x="98.3356%" y="389" width="0.0340%" height="15" fill="rgb(211,78,47)" fg:x="2895" fg:w="1"/><text x="98.5856%" y="399.50"></text></g><g><title>[libwayland-client.so.0.22.0] (1 samples, 0.03%)</title><rect x="98.3356%" y="373" width="0.0340%" height="15" fill="rgb(232,31,21)" fg:x="2895" fg:w="1"/><text x="98.5856%" y="383.50"></text></g><g><title>calloop::loop_logic::EventLoop&lt;Data&gt;::dispatch (1 samples, 0.03%)</title><rect x="98.3696%" y="1173" width="0.0340%" height="15" fill="rgb(222,168,14)" fg:x="2896" fg:w="1"/><text x="98.6196%" y="1183.50"></text></g><g><title>calloop::loop_logic::EventLoop&lt;Data&gt;::dispatch_events (1 samples, 0.03%)</title><rect x="98.3696%" y="1157" width="0.0340%" height="15" fill="rgb(209,128,24)" fg:x="2896" fg:w="1"/><text x="98.6196%" y="1167.50"></text></g><g><title>&lt;core::cell::RefCell&lt;calloop::sources::DispatcherInner&lt;S,F&gt;&gt; as calloop::sources::EventDispatcher&lt;Data&gt;&gt;::process_events (1 samples, 0.03%)</title><rect x="98.3696%" y="1141" width="0.0340%" height="15" fill="rgb(249,35,13)" fg:x="2896" fg:w="1"/><text x="98.6196%" y="1151.50"></text></g><g><title>&lt;smithay_client_toolkit::event_loop::WaylandSource as calloop::sources::EventSource&gt;::process_events (1 samples, 0.03%)</title><rect x="98.3696%" y="1125" width="0.0340%" height="15" fill="rgb(218,7,2)" fg:x="2896" fg:w="1"/><text x="98.6196%" y="1135.50"></text></g><g><title>&lt;calloop::sources::generic::Generic&lt;F,E&gt; as calloop::sources::EventSource&gt;::process_events (1 samples, 0.03%)</title><rect x="98.3696%" y="1109" width="0.0340%" height="15" fill="rgb(238,107,27)" fg:x="2896" fg:w="1"/><text x="98.6196%" y="1119.50"></text></g><g><title>&lt;smithay_client_toolkit::event_loop::WaylandSource as calloop::sources::EventSource&gt;::process_events::{{closure}} (1 samples, 0.03%)</title><rect x="98.3696%" y="1093" width="0.0340%" height="15" fill="rgb(217,88,38)" fg:x="2896" fg:w="1"/><text x="98.6196%" y="1103.50"></text></g><g><title>&lt;core::cell::RefCell&lt;calloop::sources::DispatcherInner&lt;S,F&gt;&gt; as calloop::sources::EventDispatcher&lt;Data&gt;&gt;::process_events::{{closure}} (1 samples, 0.03%)</title><rect x="98.3696%" y="1077" width="0.0340%" height="15" fill="rgb(230,207,0)" fg:x="2896" fg:w="1"/><text x="98.6196%" y="1087.50"></text></g><g><title>winit::platform_impl::platform::wayland::event_loop::EventLoop&lt;T&gt;::new::{{closure}} (1 samples, 0.03%)</title><rect x="98.3696%" y="1061" width="0.0340%" height="15" fill="rgb(249,64,54)" fg:x="2896" fg:w="1"/><text x="98.6196%" y="1071.50"></text></g><g><title>wayland_client::event_queue::EventQueue::dispatch_pending (1 samples, 0.03%)</title><rect x="98.3696%" y="1045" width="0.0340%" height="15" fill="rgb(231,7,11)" fg:x="2896" fg:w="1"/><text x="98.6196%" y="1055.50"></text></g><g><title>wayland_client::imp::event_queue::EventQueueInner::dispatch_pending (1 samples, 0.03%)</title><rect x="98.3696%" y="1029" width="0.0340%" height="15" fill="rgb(205,149,21)" fg:x="2896" fg:w="1"/><text x="98.6196%" y="1039.50"></text></g><g><title>wayland_client::imp::event_queue::with_dispatch_meta (1 samples, 0.03%)</title><rect x="98.3696%" y="1013" width="0.0340%" height="15" fill="rgb(215,126,34)" fg:x="2896" fg:w="1"/><text x="98.6196%" y="1023.50"></text></g><g><title>scoped_tls::ScopedKey&lt;T&gt;::set (1 samples, 0.03%)</title><rect x="98.3696%" y="997" width="0.0340%" height="15" fill="rgb(241,132,45)" fg:x="2896" fg:w="1"/><text x="98.6196%" y="1007.50"></text></g><g><title>wayland_client::imp::event_queue::EventQueueInner::dispatch_pending::{{closure}} (1 samples, 0.03%)</title><rect x="98.3696%" y="981" width="0.0340%" height="15" fill="rgb(252,69,32)" fg:x="2896" fg:w="1"/><text x="98.6196%" y="991.50"></text></g><g><title>wl_display_dispatch_queue_pending (1 samples, 0.03%)</title><rect x="98.3696%" y="965" width="0.0340%" height="15" fill="rgb(232,204,19)" fg:x="2896" fg:w="1"/><text x="98.6196%" y="975.50"></text></g><g><title>[libwayland-client.so.0.22.0] (1 samples, 0.03%)</title><rect x="98.3696%" y="949" width="0.0340%" height="15" fill="rgb(249,15,47)" fg:x="2896" fg:w="1"/><text x="98.6196%" y="959.50"></text></g><g><title>wayland_client::imp::proxy::proxy_dispatcher (1 samples, 0.03%)</title><rect x="98.3696%" y="933" width="0.0340%" height="15" fill="rgb(209,227,23)" fg:x="2896" fg:w="1"/><text x="98.6196%" y="943.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.03%)</title><rect x="98.3696%" y="917" width="0.0340%" height="15" fill="rgb(248,92,24)" fg:x="2896" fg:w="1"/><text x="98.6196%" y="927.50"></text></g><g><title>std::panicking::try (1 samples, 0.03%)</title><rect x="98.3696%" y="901" width="0.0340%" height="15" fill="rgb(247,59,2)" fg:x="2896" fg:w="1"/><text x="98.6196%" y="911.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.03%)</title><rect x="98.3696%" y="885" width="0.0340%" height="15" fill="rgb(221,30,5)" fg:x="2896" fg:w="1"/><text x="98.6196%" y="895.50"></text></g><g><title>wayland_client::imp::proxy::proxy_dispatcher::{{closure}} (1 samples, 0.03%)</title><rect x="98.3696%" y="869" width="0.0340%" height="15" fill="rgb(208,108,53)" fg:x="2896" fg:w="1"/><text x="98.6196%" y="879.50"></text></g><g><title>scoped_tls::ScopedKey&lt;T&gt;::with (1 samples, 0.03%)</title><rect x="98.3696%" y="853" width="0.0340%" height="15" fill="rgb(211,183,26)" fg:x="2896" fg:w="1"/><text x="98.6196%" y="863.50"></text></g><g><title>wayland_client::imp::proxy::proxy_dispatcher::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="98.3696%" y="837" width="0.0340%" height="15" fill="rgb(232,132,4)" fg:x="2896" fg:w="1"/><text x="98.6196%" y="847.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::Fn&lt;Args&gt;&gt;::call (1 samples, 0.03%)</title><rect x="98.3696%" y="821" width="0.0340%" height="15" fill="rgb(253,128,37)" fg:x="2896" fg:w="1"/><text x="98.6196%" y="831.50"></text></g><g><title>wayland_client::imp::proxy::ProxyInner::assign::{{closure}} (1 samples, 0.03%)</title><rect x="98.3696%" y="805" width="0.0340%" height="15" fill="rgb(221,58,24)" fg:x="2896" fg:w="1"/><text x="98.6196%" y="815.50"></text></g><g><title>wayland_commons::filter::Filter&lt;E&gt;::send (1 samples, 0.03%)</title><rect x="98.3696%" y="789" width="0.0340%" height="15" fill="rgb(230,54,45)" fg:x="2896" fg:w="1"/><text x="98.6196%" y="799.50"></text></g><g><title>wayland_client::proxy::Main&lt;I&gt;::quick_assign::{{closure}} (1 samples, 0.03%)</title><rect x="98.3696%" y="773" width="0.0340%" height="15" fill="rgb(254,21,18)" fg:x="2896" fg:w="1"/><text x="98.6196%" y="783.50"></text></g><g><title>smithay_client_toolkit::seat::keyboard::map_keyboard_repeat::{{closure}} (1 samples, 0.03%)</title><rect x="98.3696%" y="757" width="0.0340%" height="15" fill="rgb(221,108,0)" fg:x="2896" fg:w="1"/><text x="98.6196%" y="767.50"></text></g><g><title>smithay_client_toolkit::seat::keyboard::KbdHandler::event (1 samples, 0.03%)</title><rect x="98.3696%" y="741" width="0.0340%" height="15" fill="rgb(206,95,1)" fg:x="2896" fg:w="1"/><text x="98.6196%" y="751.50"></text></g><g><title>smithay_client_toolkit::seat::keyboard::KbdHandler::keymap (1 samples, 0.03%)</title><rect x="98.3696%" y="725" width="0.0340%" height="15" fill="rgb(237,52,5)" fg:x="2896" fg:w="1"/><text x="98.6196%" y="735.50"></text></g><g><title>smithay_client_toolkit::seat::keyboard::state::KbState::init_with_fd (1 samples, 0.03%)</title><rect x="98.3696%" y="709" width="0.0340%" height="15" fill="rgb(218,150,34)" fg:x="2896" fg:w="1"/><text x="98.6196%" y="719.50"></text></g><g><title>xkb_keymap_new_from_buffer (1 samples, 0.03%)</title><rect x="98.3696%" y="693" width="0.0340%" height="15" fill="rgb(235,194,28)" fg:x="2896" fg:w="1"/><text x="98.6196%" y="703.50"></text></g><g><title>[libxkbcommon.so.0.0.0] (1 samples, 0.03%)</title><rect x="98.3696%" y="677" width="0.0340%" height="15" fill="rgb(245,92,18)" fg:x="2896" fg:w="1"/><text x="98.6196%" y="687.50"></text></g><g><title>[libxkbcommon.so.0.0.0] (1 samples, 0.03%)</title><rect x="98.3696%" y="661" width="0.0340%" height="15" fill="rgb(253,203,53)" fg:x="2896" fg:w="1"/><text x="98.6196%" y="671.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.03%)</title><rect x="98.4035%" y="1173" width="0.0340%" height="15" fill="rgb(249,185,47)" fg:x="2897" fg:w="1"/><text x="98.6535%" y="1183.50"></text></g><g><title>game_window::main_loop (1 samples, 0.03%)</title><rect x="98.4035%" y="1157" width="0.0340%" height="15" fill="rgb(252,194,52)" fg:x="2897" fg:w="1"/><text x="98.6535%" y="1167.50"></text></g><g><title>winit::event_loop::EventLoop&lt;T&gt;::run (1 samples, 0.03%)</title><rect x="98.4035%" y="1141" width="0.0340%" height="15" fill="rgb(210,53,36)" fg:x="2897" fg:w="1"/><text x="98.6535%" y="1151.50"></text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::run (1 samples, 0.03%)</title><rect x="98.4035%" y="1125" width="0.0340%" height="15" fill="rgb(237,37,25)" fg:x="2897" fg:w="1"/><text x="98.6535%" y="1135.50"></text></g><g><title>winit::platform_impl::platform::wayland::event_loop::EventLoop&lt;T&gt;::run (1 samples, 0.03%)</title><rect x="98.4035%" y="1109" width="0.0340%" height="15" fill="rgb(242,116,27)" fg:x="2897" fg:w="1"/><text x="98.6535%" y="1119.50"></text></g><g><title>winit::platform_impl::platform::wayland::event_loop::EventLoop&lt;T&gt;::run_return (1 samples, 0.03%)</title><rect x="98.4035%" y="1093" width="0.0340%" height="15" fill="rgb(213,185,26)" fg:x="2897" fg:w="1"/><text x="98.6535%" y="1103.50"></text></g><g><title>winit::platform_impl::platform::sticky_exit_callback (1 samples, 0.03%)</title><rect x="98.4035%" y="1077" width="0.0340%" height="15" fill="rgb(225,204,8)" fg:x="2897" fg:w="1"/><text x="98.6535%" y="1087.50"></text></g><g><title>game_window::main_loop::{{closure}} (1 samples, 0.03%)</title><rect x="98.4035%" y="1061" width="0.0340%" height="15" fill="rgb(254,111,37)" fg:x="2897" fg:w="1"/><text x="98.6535%" y="1071.50"></text></g><g><title>bevy_ecs::world::World::query (1 samples, 0.03%)</title><rect x="98.4035%" y="1045" width="0.0340%" height="15" fill="rgb(242,35,9)" fg:x="2897" fg:w="1"/><text x="98.6535%" y="1055.50"></text></g><g><title>bevy_ecs::world::World::query_filtered (1 samples, 0.03%)</title><rect x="98.4035%" y="1029" width="0.0340%" height="15" fill="rgb(232,138,49)" fg:x="2897" fg:w="1"/><text x="98.6535%" y="1039.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::new (1 samples, 0.03%)</title><rect x="98.4035%" y="1013" width="0.0340%" height="15" fill="rgb(247,56,4)" fg:x="2897" fg:w="1"/><text x="98.6535%" y="1023.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::update_archetypes (1 samples, 0.03%)</title><rect x="98.4035%" y="997" width="0.0340%" height="15" fill="rgb(226,179,17)" fg:x="2897" fg:w="1"/><text x="98.6535%" y="1007.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::new_archetype (1 samples, 0.03%)</title><rect x="98.4035%" y="981" width="0.0340%" height="15" fill="rgb(216,163,45)" fg:x="2897" fg:w="1"/><text x="98.6535%" y="991.50"></text></g><g><title>&lt;&amp;T as bevy_ecs::query::fetch::WorldQuery&gt;::matches_component_set (1 samples, 0.03%)</title><rect x="98.4035%" y="965" width="0.0340%" height="15" fill="rgb(211,157,3)" fg:x="2897" fg:w="1"/><text x="98.6535%" y="975.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::new_archetype::{{closure}} (1 samples, 0.03%)</title><rect x="98.4035%" y="949" width="0.0340%" height="15" fill="rgb(234,44,20)" fg:x="2897" fg:w="1"/><text x="98.6535%" y="959.50"></text></g><g><title>bevy_ecs::archetype::Archetype::contains (1 samples, 0.03%)</title><rect x="98.4035%" y="933" width="0.0340%" height="15" fill="rgb(254,138,23)" fg:x="2897" fg:w="1"/><text x="98.6535%" y="943.50"></text></g><g><title>bevy_ecs::storage::sparse_set::ImmutableSparseSet&lt;I,V&gt;::contains (1 samples, 0.03%)</title><rect x="98.4035%" y="917" width="0.0340%" height="15" fill="rgb(206,119,39)" fg:x="2897" fg:w="1"/><text x="98.6535%" y="927.50"></text></g><g><title>bevy_ecs::storage::sparse_set::ImmutableSparseArray&lt;I,V&gt;::contains (1 samples, 0.03%)</title><rect x="98.4035%" y="901" width="0.0340%" height="15" fill="rgb(231,105,52)" fg:x="2897" fg:w="1"/><text x="98.6535%" y="911.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.03%)</title><rect x="98.4035%" y="885" width="0.0340%" height="15" fill="rgb(250,20,5)" fg:x="2897" fg:w="1"/><text x="98.6535%" y="895.50"></text></g><g><title>game_window::main_loop::{{closure}} (3 samples, 0.10%)</title><rect x="98.4375%" y="1173" width="0.1019%" height="15" fill="rgb(215,198,30)" fg:x="2898" fg:w="3"/><text x="98.6875%" y="1183.50"></text></g><g><title>game_window::systems::create_windows (3 samples, 0.10%)</title><rect x="98.4375%" y="1157" width="0.1019%" height="15" fill="rgb(246,142,8)" fg:x="2898" fg:w="3"/><text x="98.6875%" y="1167.50"></text></g><g><title>winit::window::WindowBuilder::build (3 samples, 0.10%)</title><rect x="98.4375%" y="1141" width="0.1019%" height="15" fill="rgb(243,26,38)" fg:x="2898" fg:w="3"/><text x="98.6875%" y="1151.50"></text></g><g><title>winit::platform_impl::platform::Window::new (3 samples, 0.10%)</title><rect x="98.4375%" y="1125" width="0.1019%" height="15" fill="rgb(205,133,28)" fg:x="2898" fg:w="3"/><text x="98.6875%" y="1135.50"></text></g><g><title>winit::platform_impl::platform::wayland::window::Window::new (3 samples, 0.10%)</title><rect x="98.4375%" y="1109" width="0.1019%" height="15" fill="rgb(212,34,0)" fg:x="2898" fg:w="3"/><text x="98.6875%" y="1119.50"></text></g><g><title>smithay_client_toolkit::window::&lt;impl smithay_client_toolkit::environment::Environment&lt;E&gt;&gt;::create_window (3 samples, 0.10%)</title><rect x="98.4375%" y="1093" width="0.1019%" height="15" fill="rgb(251,226,22)" fg:x="2898" fg:w="3"/><text x="98.6875%" y="1103.50"></text></g><g><title>smithay_client_toolkit::window::Window&lt;F&gt;::init_with_decorations (3 samples, 0.10%)</title><rect x="98.4375%" y="1077" width="0.1019%" height="15" fill="rgb(252,119,9)" fg:x="2898" fg:w="3"/><text x="98.6875%" y="1087.50"></text></g><g><title>&lt;sctk_adwaita::AdwaitaFrame as smithay_client_toolkit::window::Frame&gt;::init (3 samples, 0.10%)</title><rect x="98.4375%" y="1061" width="0.1019%" height="15" fill="rgb(213,150,50)" fg:x="2898" fg:w="3"/><text x="98.6875%" y="1071.50"></text></g><g><title>sctk_adwaita::theme::ColorTheme::auto (3 samples, 0.10%)</title><rect x="98.4375%" y="1045" width="0.1019%" height="15" fill="rgb(212,24,39)" fg:x="2898" fg:w="3"/><text x="98.6875%" y="1055.50"></text></g><g><title>sctk_adwaita::config::prefer_dark (3 samples, 0.10%)</title><rect x="98.4375%" y="1029" width="0.1019%" height="15" fill="rgb(213,46,39)" fg:x="2898" fg:w="3"/><text x="98.6875%" y="1039.50"></text></g><g><title>std::process::Command::output (3 samples, 0.10%)</title><rect x="98.4375%" y="1013" width="0.1019%" height="15" fill="rgb(239,106,12)" fg:x="2898" fg:w="3"/><text x="98.6875%" y="1023.50"></text></g><g><title>std::sys::unix::process::process_inner::&lt;impl std::sys::unix::process::process_common::Command&gt;::output (3 samples, 0.10%)</title><rect x="98.4375%" y="997" width="0.1019%" height="15" fill="rgb(249,229,21)" fg:x="2898" fg:w="3"/><text x="98.6875%" y="1007.50"></text></g><g><title>std::sys_common::process::wait_with_output (3 samples, 0.10%)</title><rect x="98.4375%" y="981" width="0.1019%" height="15" fill="rgb(212,158,3)" fg:x="2898" fg:w="3"/><text x="98.6875%" y="991.50"></text></g><g><title>std::sys::unix::pipe::read2 (3 samples, 0.10%)</title><rect x="98.4375%" y="965" width="0.1019%" height="15" fill="rgb(253,26,48)" fg:x="2898" fg:w="3"/><text x="98.6875%" y="975.50"></text></g><g><title>std::sys::unix::pipe::read2::read (3 samples, 0.10%)</title><rect x="98.4375%" y="949" width="0.1019%" height="15" fill="rgb(238,178,20)" fg:x="2898" fg:w="3"/><text x="98.6875%" y="959.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read_to_end (3 samples, 0.10%)</title><rect x="98.4375%" y="933" width="0.1019%" height="15" fill="rgb(208,86,15)" fg:x="2898" fg:w="3"/><text x="98.6875%" y="943.50"></text></g><g><title>std::io::Read::read_to_end (2 samples, 0.07%)</title><rect x="98.4715%" y="917" width="0.0679%" height="15" fill="rgb(239,42,53)" fg:x="2899" fg:w="2"/><text x="98.7215%" y="927.50"></text></g><g><title>std::io::default_read_to_end (2 samples, 0.07%)</title><rect x="98.4715%" y="901" width="0.0679%" height="15" fill="rgb(245,226,8)" fg:x="2899" fg:w="2"/><text x="98.7215%" y="911.50"></text></g><g><title>&lt;&amp;std::sys::unix::fd::FileDesc as std::io::Read&gt;::read_buf (2 samples, 0.07%)</title><rect x="98.4715%" y="885" width="0.0679%" height="15" fill="rgb(216,176,32)" fg:x="2899" fg:w="2"/><text x="98.7215%" y="895.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read_buf (2 samples, 0.07%)</title><rect x="98.4715%" y="869" width="0.0679%" height="15" fill="rgb(231,186,21)" fg:x="2899" fg:w="2"/><text x="98.7215%" y="879.50"></text></g><g><title>read (2 samples, 0.07%)</title><rect x="98.4715%" y="853" width="0.0679%" height="15" fill="rgb(205,95,49)" fg:x="2899" fg:w="2"/><text x="98.7215%" y="863.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="98.4715%" y="837" width="0.0679%" height="15" fill="rgb(217,145,8)" fg:x="2899" fg:w="2"/><text x="98.7215%" y="847.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="98.4715%" y="821" width="0.0679%" height="15" fill="rgb(239,144,48)" fg:x="2899" fg:w="2"/><text x="98.7215%" y="831.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="98.4715%" y="805" width="0.0679%" height="15" fill="rgb(214,189,23)" fg:x="2899" fg:w="2"/><text x="98.7215%" y="815.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="98.4715%" y="789" width="0.0679%" height="15" fill="rgb(229,157,17)" fg:x="2899" fg:w="2"/><text x="98.7215%" y="799.50"></text></g><g><title>[unknown] (2 samples, 0.07%)</title><rect x="98.4715%" y="773" width="0.0679%" height="15" fill="rgb(230,5,48)" fg:x="2899" fg:w="2"/><text x="98.7215%" y="783.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor::single_threaded::SingleThreadedExecutor as bevy_ecs::schedule::executor::SystemExecutor&gt;::run (2 samples, 0.07%)</title><rect x="98.5394%" y="1029" width="0.0679%" height="15" fill="rgb(224,156,48)" fg:x="2901" fg:w="2"/><text x="98.7894%" y="1039.50"></text></g><g><title>bevy_ecs::schedule::executor::single_threaded::SingleThreadedExecutor::apply_system_buffers (2 samples, 0.07%)</title><rect x="98.5394%" y="1013" width="0.0679%" height="15" fill="rgb(223,14,29)" fg:x="2901" fg:w="2"/><text x="98.7894%" y="1023.50"></text></g><g><title>&lt;bevy_ecs::system::exclusive_function_system::ExclusiveFunctionSystem&lt;Marker,F&gt; as bevy_ecs::system::system::System&gt;::apply_buffers (1 samples, 0.03%)</title><rect x="98.5734%" y="997" width="0.0340%" height="15" fill="rgb(229,96,36)" fg:x="2902" fg:w="1"/><text x="98.8234%" y="1007.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="98.6073%" y="1029" width="0.0340%" height="15" fill="rgb(231,102,53)" fg:x="2903" fg:w="1"/><text x="98.8573%" y="1039.50"></text></g><g><title>bevy_ecs::schedule::schedule::Schedules::remove_entry (1 samples, 0.03%)</title><rect x="98.6413%" y="1029" width="0.0340%" height="15" fill="rgb(210,77,38)" fg:x="2904" fg:w="1"/><text x="98.8913%" y="1039.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.03%)</title><rect x="98.6413%" y="1013" width="0.0340%" height="15" fill="rgb(235,131,6)" fg:x="2904" fg:w="1"/><text x="98.8913%" y="1023.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.03%)</title><rect x="98.6413%" y="997" width="0.0340%" height="15" fill="rgb(252,55,38)" fg:x="2904" fg:w="1"/><text x="98.8913%" y="1007.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get (1 samples, 0.03%)</title><rect x="98.6413%" y="981" width="0.0340%" height="15" fill="rgb(246,38,14)" fg:x="2904" fg:w="1"/><text x="98.8913%" y="991.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (1 samples, 0.03%)</title><rect x="98.6413%" y="965" width="0.0340%" height="15" fill="rgb(242,27,5)" fg:x="2904" fg:w="1"/><text x="98.8913%" y="975.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.03%)</title><rect x="98.6413%" y="949" width="0.0340%" height="15" fill="rgb(228,65,35)" fg:x="2904" fg:w="1"/><text x="98.8913%" y="959.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::load (1 samples, 0.03%)</title><rect x="98.6413%" y="933" width="0.0340%" height="15" fill="rgb(245,93,11)" fg:x="2904" fg:w="1"/><text x="98.8913%" y="943.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.03%)</title><rect x="98.6413%" y="917" width="0.0340%" height="15" fill="rgb(213,1,31)" fg:x="2904" fg:w="1"/><text x="98.8913%" y="927.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.03%)</title><rect x="98.6413%" y="901" width="0.0340%" height="15" fill="rgb(237,205,14)" fg:x="2904" fg:w="1"/><text x="98.8913%" y="911.50"></text></g><g><title>winit::platform_impl::platform::sticky_exit_callback (5 samples, 0.17%)</title><rect x="98.5394%" y="1093" width="0.1698%" height="15" fill="rgb(232,118,45)" fg:x="2901" fg:w="5"/><text x="98.7894%" y="1103.50"></text></g><g><title>game_window::main_loop::{{closure}} (5 samples, 0.17%)</title><rect x="98.5394%" y="1077" width="0.1698%" height="15" fill="rgb(218,5,6)" fg:x="2901" fg:w="5"/><text x="98.7894%" y="1087.50"></text></g><g><title>bevy_app::app::App::update (5 samples, 0.17%)</title><rect x="98.5394%" y="1061" width="0.1698%" height="15" fill="rgb(251,87,51)" fg:x="2901" fg:w="5"/><text x="98.7894%" y="1071.50"></text></g><g><title>bevy_ecs::world::World::run_schedule_ref (5 samples, 0.17%)</title><rect x="98.5394%" y="1045" width="0.1698%" height="15" fill="rgb(207,225,20)" fg:x="2901" fg:w="5"/><text x="98.7894%" y="1055.50"></text></g><g><title>bevy_ecs::world::World::resource_mut (1 samples, 0.03%)</title><rect x="98.6753%" y="1029" width="0.0340%" height="15" fill="rgb(222,78,54)" fg:x="2905" fg:w="1"/><text x="98.9253%" y="1039.50"></text></g><g><title>bevy_ecs::world::World::get_resource_mut (1 samples, 0.03%)</title><rect x="98.6753%" y="1013" width="0.0340%" height="15" fill="rgb(232,85,16)" fg:x="2905" fg:w="1"/><text x="98.9253%" y="1023.50"></text></g><g><title>bevy_ecs::world::unsafe_world_cell::UnsafeWorldCell::get_resource_mut (1 samples, 0.03%)</title><rect x="98.6753%" y="997" width="0.0340%" height="15" fill="rgb(244,25,33)" fg:x="2905" fg:w="1"/><text x="98.9253%" y="1007.50"></text></g><g><title>bevy_ecs::component::Components::get_resource_id (1 samples, 0.03%)</title><rect x="98.6753%" y="981" width="0.0340%" height="15" fill="rgb(233,24,36)" fg:x="2905" fg:w="1"/><text x="98.9253%" y="991.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.03%)</title><rect x="98.6753%" y="965" width="0.0340%" height="15" fill="rgb(253,49,54)" fg:x="2905" fg:w="1"/><text x="98.9253%" y="975.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.03%)</title><rect x="98.6753%" y="949" width="0.0340%" height="15" fill="rgb(245,12,22)" fg:x="2905" fg:w="1"/><text x="98.9253%" y="959.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.03%)</title><rect x="98.6753%" y="933" width="0.0340%" height="15" fill="rgb(253,141,28)" fg:x="2905" fg:w="1"/><text x="98.9253%" y="943.50"></text></g><g><title>game_window::main_loop (6 samples, 0.20%)</title><rect x="98.5394%" y="1173" width="0.2038%" height="15" fill="rgb(225,207,27)" fg:x="2901" fg:w="6"/><text x="98.7894%" y="1183.50"></text></g><g><title>winit::event_loop::EventLoop&lt;T&gt;::run (6 samples, 0.20%)</title><rect x="98.5394%" y="1157" width="0.2038%" height="15" fill="rgb(220,84,2)" fg:x="2901" fg:w="6"/><text x="98.7894%" y="1167.50"></text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::run (6 samples, 0.20%)</title><rect x="98.5394%" y="1141" width="0.2038%" height="15" fill="rgb(224,37,37)" fg:x="2901" fg:w="6"/><text x="98.7894%" y="1151.50"></text></g><g><title>winit::platform_impl::platform::wayland::event_loop::EventLoop&lt;T&gt;::run (6 samples, 0.20%)</title><rect x="98.5394%" y="1125" width="0.2038%" height="15" fill="rgb(220,143,18)" fg:x="2901" fg:w="6"/><text x="98.7894%" y="1135.50"></text></g><g><title>winit::platform_impl::platform::wayland::event_loop::EventLoop&lt;T&gt;::run_return (6 samples, 0.20%)</title><rect x="98.5394%" y="1109" width="0.2038%" height="15" fill="rgb(210,88,33)" fg:x="2901" fg:w="6"/><text x="98.7894%" y="1119.50"></text></g><g><title>winit::platform_impl::platform::wayland::event_loop::EventLoop&lt;T&gt;::loop_dispatch (1 samples, 0.03%)</title><rect x="98.7092%" y="1093" width="0.0340%" height="15" fill="rgb(219,87,51)" fg:x="2906" fg:w="1"/><text x="98.9592%" y="1103.50"></text></g><g><title>calloop::loop_logic::EventLoop&lt;Data&gt;::dispatch (1 samples, 0.03%)</title><rect x="98.7092%" y="1077" width="0.0340%" height="15" fill="rgb(211,7,35)" fg:x="2906" fg:w="1"/><text x="98.9592%" y="1087.50"></text></g><g><title>calloop::loop_logic::EventLoop&lt;Data&gt;::dispatch_events (1 samples, 0.03%)</title><rect x="98.7092%" y="1061" width="0.0340%" height="15" fill="rgb(232,77,2)" fg:x="2906" fg:w="1"/><text x="98.9592%" y="1071.50"></text></g><g><title>&lt;core::cell::RefCell&lt;calloop::sources::DispatcherInner&lt;S,F&gt;&gt; as calloop::sources::EventDispatcher&lt;Data&gt;&gt;::process_events (1 samples, 0.03%)</title><rect x="98.7092%" y="1045" width="0.0340%" height="15" fill="rgb(249,94,25)" fg:x="2906" fg:w="1"/><text x="98.9592%" y="1055.50"></text></g><g><title>&lt;smithay_client_toolkit::event_loop::WaylandSource as calloop::sources::EventSource&gt;::process_events (1 samples, 0.03%)</title><rect x="98.7092%" y="1029" width="0.0340%" height="15" fill="rgb(215,112,2)" fg:x="2906" fg:w="1"/><text x="98.9592%" y="1039.50"></text></g><g><title>&lt;calloop::sources::generic::Generic&lt;F,E&gt; as calloop::sources::EventSource&gt;::process_events (1 samples, 0.03%)</title><rect x="98.7092%" y="1013" width="0.0340%" height="15" fill="rgb(226,115,48)" fg:x="2906" fg:w="1"/><text x="98.9592%" y="1023.50"></text></g><g><title>&lt;smithay_client_toolkit::event_loop::WaylandSource as calloop::sources::EventSource&gt;::process_events::{{closure}} (1 samples, 0.03%)</title><rect x="98.7092%" y="997" width="0.0340%" height="15" fill="rgb(249,196,10)" fg:x="2906" fg:w="1"/><text x="98.9592%" y="1007.50"></text></g><g><title>&lt;core::cell::RefCell&lt;calloop::sources::DispatcherInner&lt;S,F&gt;&gt; as calloop::sources::EventDispatcher&lt;Data&gt;&gt;::process_events::{{closure}} (1 samples, 0.03%)</title><rect x="98.7092%" y="981" width="0.0340%" height="15" fill="rgb(237,109,14)" fg:x="2906" fg:w="1"/><text x="98.9592%" y="991.50"></text></g><g><title>winit::platform_impl::platform::wayland::event_loop::EventLoop&lt;T&gt;::new::{{closure}} (1 samples, 0.03%)</title><rect x="98.7092%" y="965" width="0.0340%" height="15" fill="rgb(217,103,53)" fg:x="2906" fg:w="1"/><text x="98.9592%" y="975.50"></text></g><g><title>wayland_client::event_queue::EventQueue::dispatch_pending (1 samples, 0.03%)</title><rect x="98.7092%" y="949" width="0.0340%" height="15" fill="rgb(244,137,9)" fg:x="2906" fg:w="1"/><text x="98.9592%" y="959.50"></text></g><g><title>wayland_client::imp::event_queue::EventQueueInner::dispatch_pending (1 samples, 0.03%)</title><rect x="98.7092%" y="933" width="0.0340%" height="15" fill="rgb(227,201,3)" fg:x="2906" fg:w="1"/><text x="98.9592%" y="943.50"></text></g><g><title>wayland_client::imp::event_queue::with_dispatch_meta (1 samples, 0.03%)</title><rect x="98.7092%" y="917" width="0.0340%" height="15" fill="rgb(243,94,6)" fg:x="2906" fg:w="1"/><text x="98.9592%" y="927.50"></text></g><g><title>scoped_tls::ScopedKey&lt;T&gt;::set (1 samples, 0.03%)</title><rect x="98.7092%" y="901" width="0.0340%" height="15" fill="rgb(235,118,5)" fg:x="2906" fg:w="1"/><text x="98.9592%" y="911.50"></text></g><g><title>wayland_client::imp::event_queue::EventQueueInner::dispatch_pending::{{closure}} (1 samples, 0.03%)</title><rect x="98.7092%" y="885" width="0.0340%" height="15" fill="rgb(247,10,30)" fg:x="2906" fg:w="1"/><text x="98.9592%" y="895.50"></text></g><g><title>wl_display_dispatch_queue_pending (1 samples, 0.03%)</title><rect x="98.7092%" y="869" width="0.0340%" height="15" fill="rgb(205,26,28)" fg:x="2906" fg:w="1"/><text x="98.9592%" y="879.50"></text></g><g><title>[libwayland-client.so.0.22.0] (1 samples, 0.03%)</title><rect x="98.7092%" y="853" width="0.0340%" height="15" fill="rgb(206,99,35)" fg:x="2906" fg:w="1"/><text x="98.9592%" y="863.50"></text></g><g><title>wayland_client::imp::proxy::proxy_dispatcher (1 samples, 0.03%)</title><rect x="98.7092%" y="837" width="0.0340%" height="15" fill="rgb(238,130,40)" fg:x="2906" fg:w="1"/><text x="98.9592%" y="847.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.03%)</title><rect x="98.7092%" y="821" width="0.0340%" height="15" fill="rgb(224,126,31)" fg:x="2906" fg:w="1"/><text x="98.9592%" y="831.50"></text></g><g><title>std::panicking::try (1 samples, 0.03%)</title><rect x="98.7092%" y="805" width="0.0340%" height="15" fill="rgb(254,105,17)" fg:x="2906" fg:w="1"/><text x="98.9592%" y="815.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.03%)</title><rect x="98.7092%" y="789" width="0.0340%" height="15" fill="rgb(216,87,36)" fg:x="2906" fg:w="1"/><text x="98.9592%" y="799.50"></text></g><g><title>wayland_client::imp::proxy::proxy_dispatcher::{{closure}} (1 samples, 0.03%)</title><rect x="98.7092%" y="773" width="0.0340%" height="15" fill="rgb(240,21,12)" fg:x="2906" fg:w="1"/><text x="98.9592%" y="783.50"></text></g><g><title>scoped_tls::ScopedKey&lt;T&gt;::with (1 samples, 0.03%)</title><rect x="98.7092%" y="757" width="0.0340%" height="15" fill="rgb(245,192,34)" fg:x="2906" fg:w="1"/><text x="98.9592%" y="767.50"></text></g><g><title>wayland_client::imp::proxy::proxy_dispatcher::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="98.7092%" y="741" width="0.0340%" height="15" fill="rgb(226,100,49)" fg:x="2906" fg:w="1"/><text x="98.9592%" y="751.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::Fn&lt;Args&gt;&gt;::call (1 samples, 0.03%)</title><rect x="98.7092%" y="725" width="0.0340%" height="15" fill="rgb(245,188,27)" fg:x="2906" fg:w="1"/><text x="98.9592%" y="735.50"></text></g><g><title>wayland_client::imp::proxy::ProxyInner::assign::{{closure}} (1 samples, 0.03%)</title><rect x="98.7092%" y="709" width="0.0340%" height="15" fill="rgb(212,170,8)" fg:x="2906" fg:w="1"/><text x="98.9592%" y="719.50"></text></g><g><title>wayland_commons::filter::Filter&lt;E&gt;::send (1 samples, 0.03%)</title><rect x="98.7092%" y="693" width="0.0340%" height="15" fill="rgb(217,113,29)" fg:x="2906" fg:w="1"/><text x="98.9592%" y="703.50"></text></g><g><title>wayland_client::proxy::Main&lt;I&gt;::quick_assign::{{closure}} (1 samples, 0.03%)</title><rect x="98.7092%" y="677" width="0.0340%" height="15" fill="rgb(237,30,3)" fg:x="2906" fg:w="1"/><text x="98.9592%" y="687.50"></text></g><g><title>smithay_client_toolkit::seat::pointer::theme::ThemeManager::theme_pointer_with_impl::{{closure}} (1 samples, 0.03%)</title><rect x="98.7092%" y="661" width="0.0340%" height="15" fill="rgb(227,19,28)" fg:x="2906" fg:w="1"/><text x="98.9592%" y="671.50"></text></g><g><title>winit::platform_impl::platform::wayland::seat::pointer::Pointers::new::{{closure}} (1 samples, 0.03%)</title><rect x="98.7092%" y="645" width="0.0340%" height="15" fill="rgb(239,172,45)" fg:x="2906" fg:w="1"/><text x="98.9592%" y="655.50"></text></g><g><title>winit::platform_impl::platform::wayland::seat::pointer::handlers::handle_pointer (1 samples, 0.03%)</title><rect x="98.7092%" y="629" width="0.0340%" height="15" fill="rgb(254,55,39)" fg:x="2906" fg:w="1"/><text x="98.9592%" y="639.50"></text></g><g><title>winit::platform_impl::platform::wayland::window::shim::WindowHandle::pointer_entered (1 samples, 0.03%)</title><rect x="98.7092%" y="613" width="0.0340%" height="15" fill="rgb(249,208,12)" fg:x="2906" fg:w="1"/><text x="98.9592%" y="623.50"></text></g><g><title>winit::platform_impl::platform::wayland::window::shim::WindowHandle::set_cursor_visible (1 samples, 0.03%)</title><rect x="98.7092%" y="597" width="0.0340%" height="15" fill="rgb(240,52,13)" fg:x="2906" fg:w="1"/><text x="98.9592%" y="607.50"></text></g><g><title>winit::platform_impl::platform::wayland::seat::pointer::WinitPointer::set_cursor (1 samples, 0.03%)</title><rect x="98.7092%" y="581" width="0.0340%" height="15" fill="rgb(252,149,13)" fg:x="2906" fg:w="1"/><text x="98.9592%" y="591.50"></text></g><g><title>smithay_client_toolkit::seat::pointer::theme::ThemedPointer::set_cursor (1 samples, 0.03%)</title><rect x="98.7092%" y="565" width="0.0340%" height="15" fill="rgb(232,81,48)" fg:x="2906" fg:w="1"/><text x="98.9592%" y="575.50"></text></g><g><title>smithay_client_toolkit::seat::pointer::theme::PointerInner::update_cursor (1 samples, 0.03%)</title><rect x="98.7092%" y="549" width="0.0340%" height="15" fill="rgb(222,144,2)" fg:x="2906" fg:w="1"/><text x="98.9592%" y="559.50"></text></g><g><title>smithay_client_toolkit::seat::pointer::theme::ScaledThemeList::get_cursor (1 samples, 0.03%)</title><rect x="98.7092%" y="533" width="0.0340%" height="15" fill="rgb(216,81,32)" fg:x="2906" fg:w="1"/><text x="98.9592%" y="543.50"></text></g><g><title>wayland_cursor::CursorTheme::get_cursor (1 samples, 0.03%)</title><rect x="98.7092%" y="517" width="0.0340%" height="15" fill="rgb(244,78,51)" fg:x="2906" fg:w="1"/><text x="98.9592%" y="527.50"></text></g><g><title>wayland_cursor::CursorTheme::load_cursor (1 samples, 0.03%)</title><rect x="98.7092%" y="501" width="0.0340%" height="15" fill="rgb(217,66,21)" fg:x="2906" fg:w="1"/><text x="98.9592%" y="511.50"></text></g><g><title>xcursor::parser::parse_xcursor (1 samples, 0.03%)</title><rect x="98.7092%" y="485" width="0.0340%" height="15" fill="rgb(247,101,42)" fg:x="2906" fg:w="1"/><text x="98.9592%" y="495.50"></text></g><g><title>xcursor::parser::parse_img (1 samples, 0.03%)</title><rect x="98.7092%" y="469" width="0.0340%" height="15" fill="rgb(227,81,39)" fg:x="2906" fg:w="1"/><text x="98.9592%" y="479.50"></text></g><g><title>xcursor::parser::rgba_to_argb (1 samples, 0.03%)</title><rect x="98.7092%" y="453" width="0.0340%" height="15" fill="rgb(220,223,44)" fg:x="2906" fg:w="1"/><text x="98.9592%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.03%)</title><rect x="98.7092%" y="437" width="0.0340%" height="15" fill="rgb(205,218,2)" fg:x="2906" fg:w="1"/><text x="98.9592%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.03%)</title><rect x="98.7432%" y="821" width="0.0340%" height="15" fill="rgb(212,207,28)" fg:x="2907" fg:w="1"/><text x="98.9932%" y="831.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.03%)</title><rect x="98.7432%" y="805" width="0.0340%" height="15" fill="rgb(224,12,41)" fg:x="2907" fg:w="1"/><text x="98.9932%" y="815.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.03%)</title><rect x="98.7432%" y="789" width="0.0340%" height="15" fill="rgb(216,118,12)" fg:x="2907" fg:w="1"/><text x="98.9932%" y="799.50"></text></g><g><title>realloc (1 samples, 0.03%)</title><rect x="98.7432%" y="773" width="0.0340%" height="15" fill="rgb(252,97,46)" fg:x="2907" fg:w="1"/><text x="98.9932%" y="783.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="98.7432%" y="757" width="0.0340%" height="15" fill="rgb(244,206,19)" fg:x="2907" fg:w="1"/><text x="98.9932%" y="767.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="98.7432%" y="741" width="0.0340%" height="15" fill="rgb(231,84,31)" fg:x="2907" fg:w="1"/><text x="98.9932%" y="751.50"></text></g><g><title>game_window::systems::create_windows (2 samples, 0.07%)</title><rect x="98.7432%" y="1173" width="0.0679%" height="15" fill="rgb(244,133,0)" fg:x="2907" fg:w="2"/><text x="98.9932%" y="1183.50"></text></g><g><title>winit::window::WindowBuilder::build (2 samples, 0.07%)</title><rect x="98.7432%" y="1157" width="0.0679%" height="15" fill="rgb(223,15,50)" fg:x="2907" fg:w="2"/><text x="98.9932%" y="1167.50"></text></g><g><title>winit::platform_impl::platform::Window::new (2 samples, 0.07%)</title><rect x="98.7432%" y="1141" width="0.0679%" height="15" fill="rgb(250,118,49)" fg:x="2907" fg:w="2"/><text x="98.9932%" y="1151.50"></text></g><g><title>winit::platform_impl::platform::wayland::window::Window::new (2 samples, 0.07%)</title><rect x="98.7432%" y="1125" width="0.0679%" height="15" fill="rgb(248,25,38)" fg:x="2907" fg:w="2"/><text x="98.9932%" y="1135.50"></text></g><g><title>smithay_client_toolkit::window::&lt;impl smithay_client_toolkit::environment::Environment&lt;E&gt;&gt;::create_window (2 samples, 0.07%)</title><rect x="98.7432%" y="1109" width="0.0679%" height="15" fill="rgb(215,70,14)" fg:x="2907" fg:w="2"/><text x="98.9932%" y="1119.50"></text></g><g><title>smithay_client_toolkit::window::Window&lt;F&gt;::init_with_decorations (2 samples, 0.07%)</title><rect x="98.7432%" y="1093" width="0.0679%" height="15" fill="rgb(215,28,15)" fg:x="2907" fg:w="2"/><text x="98.9932%" y="1103.50"></text></g><g><title>&lt;sctk_adwaita::AdwaitaFrame as smithay_client_toolkit::window::Frame&gt;::init (2 samples, 0.07%)</title><rect x="98.7432%" y="1077" width="0.0679%" height="15" fill="rgb(243,6,28)" fg:x="2907" fg:w="2"/><text x="98.9932%" y="1087.50"></text></g><g><title>sctk_adwaita::theme::ColorTheme::auto (2 samples, 0.07%)</title><rect x="98.7432%" y="1061" width="0.0679%" height="15" fill="rgb(222,130,1)" fg:x="2907" fg:w="2"/><text x="98.9932%" y="1071.50"></text></g><g><title>sctk_adwaita::config::prefer_dark (2 samples, 0.07%)</title><rect x="98.7432%" y="1045" width="0.0679%" height="15" fill="rgb(236,166,44)" fg:x="2907" fg:w="2"/><text x="98.9932%" y="1055.50"></text></g><g><title>std::process::Command::output (2 samples, 0.07%)</title><rect x="98.7432%" y="1029" width="0.0679%" height="15" fill="rgb(221,108,14)" fg:x="2907" fg:w="2"/><text x="98.9932%" y="1039.50"></text></g><g><title>std::sys::unix::process::process_inner::&lt;impl std::sys::unix::process::process_common::Command&gt;::output (2 samples, 0.07%)</title><rect x="98.7432%" y="1013" width="0.0679%" height="15" fill="rgb(252,3,45)" fg:x="2907" fg:w="2"/><text x="98.9932%" y="1023.50"></text></g><g><title>std::sys_common::process::wait_with_output (2 samples, 0.07%)</title><rect x="98.7432%" y="997" width="0.0679%" height="15" fill="rgb(237,68,30)" fg:x="2907" fg:w="2"/><text x="98.9932%" y="1007.50"></text></g><g><title>std::sys::unix::pipe::read2 (2 samples, 0.07%)</title><rect x="98.7432%" y="981" width="0.0679%" height="15" fill="rgb(211,79,22)" fg:x="2907" fg:w="2"/><text x="98.9932%" y="991.50"></text></g><g><title>std::sys::unix::pipe::read2::read (2 samples, 0.07%)</title><rect x="98.7432%" y="965" width="0.0679%" height="15" fill="rgb(252,185,21)" fg:x="2907" fg:w="2"/><text x="98.9932%" y="975.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read_to_end (2 samples, 0.07%)</title><rect x="98.7432%" y="949" width="0.0679%" height="15" fill="rgb(225,189,26)" fg:x="2907" fg:w="2"/><text x="98.9932%" y="959.50"></text></g><g><title>std::io::Read::read_to_end (2 samples, 0.07%)</title><rect x="98.7432%" y="933" width="0.0679%" height="15" fill="rgb(241,30,40)" fg:x="2907" fg:w="2"/><text x="98.9932%" y="943.50"></text></g><g><title>std::io::default_read_to_end (2 samples, 0.07%)</title><rect x="98.7432%" y="917" width="0.0679%" height="15" fill="rgb(235,215,44)" fg:x="2907" fg:w="2"/><text x="98.9932%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.07%)</title><rect x="98.7432%" y="901" width="0.0679%" height="15" fill="rgb(205,8,29)" fg:x="2907" fg:w="2"/><text x="98.9932%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.07%)</title><rect x="98.7432%" y="885" width="0.0679%" height="15" fill="rgb(241,137,42)" fg:x="2907" fg:w="2"/><text x="98.9932%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.07%)</title><rect x="98.7432%" y="869" width="0.0679%" height="15" fill="rgb(237,155,2)" fg:x="2907" fg:w="2"/><text x="98.9932%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.07%)</title><rect x="98.7432%" y="853" width="0.0679%" height="15" fill="rgb(245,29,42)" fg:x="2907" fg:w="2"/><text x="98.9932%" y="863.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.07%)</title><rect x="98.7432%" y="837" width="0.0679%" height="15" fill="rgb(234,101,35)" fg:x="2907" fg:w="2"/><text x="98.9932%" y="847.50"></text></g><g><title>malloc (1 samples, 0.03%)</title><rect x="98.7772%" y="821" width="0.0340%" height="15" fill="rgb(228,64,37)" fg:x="2908" fg:w="1"/><text x="99.0272%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.03%)</title><rect x="98.8111%" y="1077" width="0.0340%" height="15" fill="rgb(217,214,36)" fg:x="2909" fg:w="1"/><text x="99.0611%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.03%)</title><rect x="98.8111%" y="1061" width="0.0340%" height="15" fill="rgb(243,70,3)" fg:x="2909" fg:w="1"/><text x="99.0611%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.03%)</title><rect x="98.8111%" y="1045" width="0.0340%" height="15" fill="rgb(253,158,52)" fg:x="2909" fg:w="1"/><text x="99.0611%" y="1055.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.03%)</title><rect x="98.8111%" y="1029" width="0.0340%" height="15" fill="rgb(234,111,54)" fg:x="2909" fg:w="1"/><text x="99.0611%" y="1039.50"></text></g><g><title>malloc (1 samples, 0.03%)</title><rect x="98.8111%" y="1013" width="0.0340%" height="15" fill="rgb(217,70,32)" fg:x="2909" fg:w="1"/><text x="99.0611%" y="1023.50"></text></g><g><title>cfree (2 samples, 0.07%)</title><rect x="98.8451%" y="1077" width="0.0679%" height="15" fill="rgb(234,18,33)" fg:x="2910" fg:w="2"/><text x="99.0951%" y="1087.50"></text></g><g><title>[libc.so.6] (2 samples, 0.07%)</title><rect x="98.8451%" y="1061" width="0.0679%" height="15" fill="rgb(234,12,49)" fg:x="2910" fg:w="2"/><text x="99.0951%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="98.9130%" y="1029" width="0.0340%" height="15" fill="rgb(236,10,21)" fg:x="2912" fg:w="1"/><text x="99.1630%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(wgpu_core::id::Valid&lt;wgpu_core::id::Id&lt;wgpu_core::resource::TextureView&lt;wgpu_hal::empty::Api&gt;&gt;&gt;,wgpu_core::RefCount)]&gt; (1 samples, 0.03%)</title><rect x="98.9130%" y="1013" width="0.0340%" height="15" fill="rgb(248,182,45)" fg:x="2912" fg:w="1"/><text x="99.1630%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;(wgpu_core::id::Valid&lt;wgpu_core::id::Id&lt;wgpu_core::resource::TextureView&lt;wgpu_hal::empty::Api&gt;&gt;&gt;,wgpu_core::RefCount)&gt; (1 samples, 0.03%)</title><rect x="98.9130%" y="997" width="0.0340%" height="15" fill="rgb(217,95,36)" fg:x="2912" fg:w="1"/><text x="99.1630%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::RefCount&gt; (1 samples, 0.03%)</title><rect x="98.9130%" y="981" width="0.0340%" height="15" fill="rgb(212,110,31)" fg:x="2912" fg:w="1"/><text x="99.1630%" y="991.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="98.9130%" y="965" width="0.0340%" height="15" fill="rgb(206,32,53)" fg:x="2912" fg:w="1"/><text x="99.1630%" y="975.50"></text></g><g><title>wgpu::Queue::submit (5 samples, 0.17%)</title><rect x="98.8111%" y="1173" width="0.1698%" height="15" fill="rgb(246,141,37)" fg:x="2909" fg:w="5"/><text x="99.0611%" y="1183.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::queue_submit (5 samples, 0.17%)</title><rect x="98.8111%" y="1157" width="0.1698%" height="15" fill="rgb(219,16,7)" fg:x="2909" fg:w="5"/><text x="99.0611%" y="1167.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::queue_submit (5 samples, 0.17%)</title><rect x="98.8111%" y="1141" width="0.1698%" height="15" fill="rgb(230,205,45)" fg:x="2909" fg:w="5"/><text x="99.0611%" y="1151.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (5 samples, 0.17%)</title><rect x="98.8111%" y="1125" width="0.1698%" height="15" fill="rgb(231,43,49)" fg:x="2909" fg:w="5"/><text x="99.0611%" y="1135.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::maintain (5 samples, 0.17%)</title><rect x="98.8111%" y="1109" width="0.1698%" height="15" fill="rgb(212,106,34)" fg:x="2909" fg:w="5"/><text x="99.0611%" y="1119.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;A&gt;::triage_suspected (5 samples, 0.17%)</title><rect x="98.8111%" y="1093" width="0.1698%" height="15" fill="rgb(206,83,17)" fg:x="2909" fg:w="5"/><text x="99.0611%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::BindGroupStates&lt;wgpu_hal::gles::Api&gt;&gt; (2 samples, 0.07%)</title><rect x="98.9130%" y="1077" width="0.0679%" height="15" fill="rgb(244,154,49)" fg:x="2912" fg:w="2"/><text x="99.1630%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::stateless::StatelessBindGroupSate&lt;wgpu_core::resource::TextureView&lt;wgpu_hal::gles::Api&gt;,wgpu_core::id::Id&lt;wgpu_core::resource::TextureView&lt;wgpu_hal::empty::Api&gt;&gt;&gt;&gt; (2 samples, 0.07%)</title><rect x="98.9130%" y="1061" width="0.0679%" height="15" fill="rgb(244,149,49)" fg:x="2912" fg:w="2"/><text x="99.1630%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(wgpu_core::id::Valid&lt;wgpu_core::id::Id&lt;wgpu_core::resource::TextureView&lt;wgpu_hal::empty::Api&gt;&gt;&gt;,wgpu_core::RefCount)&gt;&gt; (2 samples, 0.07%)</title><rect x="98.9130%" y="1045" width="0.0679%" height="15" fill="rgb(227,134,18)" fg:x="2912" fg:w="2"/><text x="99.1630%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(wgpu_core::id::Valid&lt;wgpu_core::id::Id&lt;wgpu_core::resource::TextureView&lt;wgpu_hal::empty::Api&gt;&gt;&gt;,wgpu_core::RefCount)&gt;&gt; (1 samples, 0.03%)</title><rect x="98.9470%" y="1029" width="0.0340%" height="15" fill="rgb(237,116,36)" fg:x="2913" fg:w="1"/><text x="99.1970%" y="1039.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="98.9470%" y="1013" width="0.0340%" height="15" fill="rgb(205,129,40)" fg:x="2913" fg:w="1"/><text x="99.1970%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.03%)</title><rect x="98.9470%" y="997" width="0.0340%" height="15" fill="rgb(236,178,4)" fg:x="2913" fg:w="1"/><text x="99.1970%" y="1007.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;A&gt;::start (2 samples, 0.07%)</title><rect x="98.9810%" y="1173" width="0.0679%" height="15" fill="rgb(251,76,53)" fg:x="2914" fg:w="2"/><text x="99.2310%" y="1183.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_render_pass (2 samples, 0.07%)</title><rect x="98.9810%" y="1157" width="0.0679%" height="15" fill="rgb(242,92,40)" fg:x="2914" fg:w="2"/><text x="99.2310%" y="1167.50"></text></g><g><title>ash::device::Device::cmd_begin_render_pass (1 samples, 0.03%)</title><rect x="99.0149%" y="1141" width="0.0340%" height="15" fill="rgb(209,45,30)" fg:x="2915" fg:w="1"/><text x="99.2649%" y="1151.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="99.0149%" y="1125" width="0.0340%" height="15" fill="rgb(218,157,36)" fg:x="2915" fg:w="1"/><text x="99.2649%" y="1135.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="99.0149%" y="1109" width="0.0340%" height="15" fill="rgb(222,186,16)" fg:x="2915" fg:w="1"/><text x="99.2649%" y="1119.50"></text></g><g><title>&lt;wgpu_hal::vulkan::Queue as wgpu_hal::Queue&lt;wgpu_hal::vulkan::Api&gt;&gt;::submit (2 samples, 0.07%)</title><rect x="99.0489%" y="1157" width="0.0679%" height="15" fill="rgb(254,72,35)" fg:x="2916" fg:w="2"/><text x="99.2989%" y="1167.50"></text></g><g><title>ash::device::Device::queue_submit (2 samples, 0.07%)</title><rect x="99.0489%" y="1141" width="0.0679%" height="15" fill="rgb(224,25,35)" fg:x="2916" fg:w="2"/><text x="99.2989%" y="1151.50"></text></g><g><title>[libvulkan_radeon.so] (2 samples, 0.07%)</title><rect x="99.0489%" y="1125" width="0.0679%" height="15" fill="rgb(206,135,52)" fg:x="2916" fg:w="2"/><text x="99.2989%" y="1135.50"></text></g><g><title>[libvulkan_radeon.so] (2 samples, 0.07%)</title><rect x="99.0489%" y="1109" width="0.0679%" height="15" fill="rgb(229,174,47)" fg:x="2916" fg:w="2"/><text x="99.2989%" y="1119.50"></text></g><g><title>[libvulkan_radeon.so] (2 samples, 0.07%)</title><rect x="99.0489%" y="1093" width="0.0679%" height="15" fill="rgb(242,184,21)" fg:x="2916" fg:w="2"/><text x="99.2989%" y="1103.50"></text></g><g><title>[libvulkan_radeon.so] (2 samples, 0.07%)</title><rect x="99.0489%" y="1077" width="0.0679%" height="15" fill="rgb(213,22,45)" fg:x="2916" fg:w="2"/><text x="99.2989%" y="1087.50"></text></g><g><title>[libvulkan_radeon.so] (2 samples, 0.07%)</title><rect x="99.0489%" y="1061" width="0.0679%" height="15" fill="rgb(237,81,54)" fg:x="2916" fg:w="2"/><text x="99.2989%" y="1071.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="99.0829%" y="1045" width="0.0340%" height="15" fill="rgb(248,177,18)" fg:x="2917" fg:w="1"/><text x="99.3329%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.03%)</title><rect x="99.1168%" y="1125" width="0.0340%" height="15" fill="rgb(254,31,16)" fg:x="2918" fg:w="1"/><text x="99.3668%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.03%)</title><rect x="99.1168%" y="1109" width="0.0340%" height="15" fill="rgb(235,20,31)" fg:x="2918" fg:w="1"/><text x="99.3668%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1 samples, 0.03%)</title><rect x="99.1168%" y="1093" width="0.0340%" height="15" fill="rgb(240,56,43)" fg:x="2918" fg:w="1"/><text x="99.3668%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.03%)</title><rect x="99.1168%" y="1077" width="0.0340%" height="15" fill="rgb(237,197,51)" fg:x="2918" fg:w="1"/><text x="99.3668%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.03%)</title><rect x="99.1168%" y="1061" width="0.0340%" height="15" fill="rgb(241,162,44)" fg:x="2918" fg:w="1"/><text x="99.3668%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.03%)</title><rect x="99.1168%" y="1045" width="0.0340%" height="15" fill="rgb(224,23,20)" fg:x="2918" fg:w="1"/><text x="99.3668%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.03%)</title><rect x="99.1168%" y="1029" width="0.0340%" height="15" fill="rgb(250,109,34)" fg:x="2918" fg:w="1"/><text x="99.3668%" y="1039.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.03%)</title><rect x="99.1168%" y="1013" width="0.0340%" height="15" fill="rgb(214,175,50)" fg:x="2918" fg:w="1"/><text x="99.3668%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.03%)</title><rect x="99.1168%" y="997" width="0.0340%" height="15" fill="rgb(213,182,5)" fg:x="2918" fg:w="1"/><text x="99.3668%" y="1007.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.03%)</title><rect x="99.1168%" y="981" width="0.0340%" height="15" fill="rgb(209,199,19)" fg:x="2918" fg:w="1"/><text x="99.3668%" y="991.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.03%)</title><rect x="99.1168%" y="965" width="0.0340%" height="15" fill="rgb(236,224,42)" fg:x="2918" fg:w="1"/><text x="99.3668%" y="975.50"></text></g><g><title>realloc (1 samples, 0.03%)</title><rect x="99.1168%" y="949" width="0.0340%" height="15" fill="rgb(246,226,29)" fg:x="2918" fg:w="1"/><text x="99.3668%" y="959.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="99.1168%" y="933" width="0.0340%" height="15" fill="rgb(227,223,11)" fg:x="2918" fg:w="1"/><text x="99.3668%" y="943.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="99.1168%" y="917" width="0.0340%" height="15" fill="rgb(219,7,51)" fg:x="2918" fg:w="1"/><text x="99.3668%" y="927.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="99.1168%" y="901" width="0.0340%" height="15" fill="rgb(245,167,10)" fg:x="2918" fg:w="1"/><text x="99.3668%" y="911.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (5 samples, 0.17%)</title><rect x="99.0489%" y="1173" width="0.1698%" height="15" fill="rgb(237,224,16)" fg:x="2916" fg:w="5"/><text x="99.2989%" y="1183.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::maintain (3 samples, 0.10%)</title><rect x="99.1168%" y="1157" width="0.1019%" height="15" fill="rgb(226,132,13)" fg:x="2918" fg:w="3"/><text x="99.3668%" y="1167.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;A&gt;::triage_suspected (3 samples, 0.10%)</title><rect x="99.1168%" y="1141" width="0.1019%" height="15" fill="rgb(214,140,3)" fg:x="2918" fg:w="3"/><text x="99.3668%" y="1151.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::unregister_locked (2 samples, 0.07%)</title><rect x="99.1508%" y="1125" width="0.0679%" height="15" fill="rgb(221,177,4)" fg:x="2919" fg:w="2"/><text x="99.4008%" y="1135.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::remove (2 samples, 0.07%)</title><rect x="99.1508%" y="1109" width="0.0679%" height="15" fill="rgb(238,139,3)" fg:x="2919" fg:w="2"/><text x="99.4008%" y="1119.50"></text></g><g><title>core::mem::replace (2 samples, 0.07%)</title><rect x="99.1508%" y="1093" width="0.0679%" height="15" fill="rgb(216,17,39)" fg:x="2919" fg:w="2"/><text x="99.4008%" y="1103.50"></text></g><g><title>core::ptr::read (2 samples, 0.07%)</title><rect x="99.1508%" y="1077" width="0.0679%" height="15" fill="rgb(238,120,9)" fg:x="2919" fg:w="2"/><text x="99.4008%" y="1087.50"></text></g><g><title>[libc.so.6] (2 samples, 0.07%)</title><rect x="99.1508%" y="1061" width="0.0679%" height="15" fill="rgb(244,92,53)" fg:x="2919" fg:w="2"/><text x="99.4008%" y="1071.50"></text></g><g><title>wgpu_hal::vulkan::adapter::&lt;impl wgpu_hal::Adapter&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Adapter&gt;::open (5 samples, 0.17%)</title><rect x="99.2188%" y="1173" width="0.1698%" height="15" fill="rgb(224,148,33)" fg:x="2921" fg:w="5"/><text x="99.4688%" y="1183.50"></text></g><g><title>ash::instance::Instance::create_device (5 samples, 0.17%)</title><rect x="99.2188%" y="1157" width="0.1698%" height="15" fill="rgb(243,6,36)" fg:x="2921" fg:w="5"/><text x="99.4688%" y="1167.50"></text></g><g><title>vkCreateDevice (5 samples, 0.17%)</title><rect x="99.2188%" y="1141" width="0.1698%" height="15" fill="rgb(230,102,11)" fg:x="2921" fg:w="5"/><text x="99.4688%" y="1151.50"></text></g><g><title>[libvulkan.so.1.3.245] (5 samples, 0.17%)</title><rect x="99.2188%" y="1125" width="0.1698%" height="15" fill="rgb(234,148,36)" fg:x="2921" fg:w="5"/><text x="99.4688%" y="1135.50"></text></g><g><title>[libvulkan.so.1.3.245] (5 samples, 0.17%)</title><rect x="99.2188%" y="1109" width="0.1698%" height="15" fill="rgb(251,153,25)" fg:x="2921" fg:w="5"/><text x="99.4688%" y="1119.50"></text></g><g><title>[libvulkan.so.1.3.245] (5 samples, 0.17%)</title><rect x="99.2188%" y="1093" width="0.1698%" height="15" fill="rgb(215,129,8)" fg:x="2921" fg:w="5"/><text x="99.4688%" y="1103.50"></text></g><g><title>[libvulkan_radeon.so] (5 samples, 0.17%)</title><rect x="99.2188%" y="1077" width="0.1698%" height="15" fill="rgb(224,128,35)" fg:x="2921" fg:w="5"/><text x="99.4688%" y="1087.50"></text></g><g><title>[libvulkan_radeon.so] (5 samples, 0.17%)</title><rect x="99.2188%" y="1061" width="0.1698%" height="15" fill="rgb(237,56,52)" fg:x="2921" fg:w="5"/><text x="99.4688%" y="1071.50"></text></g><g><title>[libvulkan_radeon.so] (5 samples, 0.17%)</title><rect x="99.2188%" y="1045" width="0.1698%" height="15" fill="rgb(234,213,19)" fg:x="2921" fg:w="5"/><text x="99.4688%" y="1055.50"></text></g><g><title>[libvulkan_radeon.so] (5 samples, 0.17%)</title><rect x="99.2188%" y="1029" width="0.1698%" height="15" fill="rgb(252,82,23)" fg:x="2921" fg:w="5"/><text x="99.4688%" y="1039.50"></text></g><g><title>[libvulkan_radeon.so] (3 samples, 0.10%)</title><rect x="99.2867%" y="1013" width="0.1019%" height="15" fill="rgb(254,201,21)" fg:x="2923" fg:w="3"/><text x="99.5367%" y="1023.50"></text></g><g><title>[libvulkan_radeon.so] (2 samples, 0.07%)</title><rect x="99.3207%" y="997" width="0.0679%" height="15" fill="rgb(250,186,11)" fg:x="2924" fg:w="2"/><text x="99.5707%" y="1007.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="99.3546%" y="981" width="0.0340%" height="15" fill="rgb(211,174,5)" fg:x="2925" fg:w="1"/><text x="99.6046%" y="991.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="99.3546%" y="965" width="0.0340%" height="15" fill="rgb(214,121,10)" fg:x="2925" fg:w="1"/><text x="99.6046%" y="975.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="99.3546%" y="949" width="0.0340%" height="15" fill="rgb(241,66,2)" fg:x="2925" fg:w="1"/><text x="99.6046%" y="959.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="99.3546%" y="933" width="0.0340%" height="15" fill="rgb(220,167,19)" fg:x="2925" fg:w="1"/><text x="99.6046%" y="943.50"></text></g><g><title>malloc (1 samples, 0.03%)</title><rect x="99.3546%" y="917" width="0.0340%" height="15" fill="rgb(231,54,50)" fg:x="2925" fg:w="1"/><text x="99.6046%" y="927.50"></text></g><g><title>ash::device::Device::cmd_begin_render_pass (5 samples, 0.17%)</title><rect x="99.3886%" y="1157" width="0.1698%" height="15" fill="rgb(239,217,53)" fg:x="2926" fg:w="5"/><text x="99.6386%" y="1167.50"></text></g><g><title>[libvulkan_radeon.so] (5 samples, 0.17%)</title><rect x="99.3886%" y="1141" width="0.1698%" height="15" fill="rgb(248,8,0)" fg:x="2926" fg:w="5"/><text x="99.6386%" y="1151.50"></text></g><g><title>[libvulkan_radeon.so] (5 samples, 0.17%)</title><rect x="99.3886%" y="1125" width="0.1698%" height="15" fill="rgb(229,118,37)" fg:x="2926" fg:w="5"/><text x="99.6386%" y="1135.50"></text></g><g><title>[libvulkan_radeon.so] (4 samples, 0.14%)</title><rect x="99.4226%" y="1109" width="0.1359%" height="15" fill="rgb(253,223,43)" fg:x="2927" fg:w="4"/><text x="99.6726%" y="1119.50"></text></g><g><title>[libvulkan_radeon.so] (1 samples, 0.03%)</title><rect x="99.5245%" y="1093" width="0.0340%" height="15" fill="rgb(211,77,36)" fg:x="2930" fg:w="1"/><text x="99.7745%" y="1103.50"></text></g><g><title>hashbrown::map::make_insert_hash (1 samples, 0.03%)</title><rect x="99.5924%" y="1109" width="0.0340%" height="15" fill="rgb(219,3,53)" fg:x="2932" fg:w="1"/><text x="99.8424%" y="1119.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.03%)</title><rect x="99.5924%" y="1093" width="0.0340%" height="15" fill="rgb(244,45,42)" fg:x="2932" fg:w="1"/><text x="99.8424%" y="1103.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.03%)</title><rect x="99.5924%" y="1077" width="0.0340%" height="15" fill="rgb(225,95,27)" fg:x="2932" fg:w="1"/><text x="99.8424%" y="1087.50"></text></g><g><title>&lt;wgpu_hal::vulkan::RenderPassKey as core::hash::Hash&gt;::hash (1 samples, 0.03%)</title><rect x="99.5924%" y="1061" width="0.0340%" height="15" fill="rgb(207,74,8)" fg:x="2932" fg:w="1"/><text x="99.8424%" y="1071.50"></text></g><g><title>&lt;arrayvec::arrayvec::ArrayVec&lt;T,_&gt; as core::hash::Hash&gt;::hash (1 samples, 0.03%)</title><rect x="99.5924%" y="1045" width="0.0340%" height="15" fill="rgb(243,63,36)" fg:x="2932" fg:w="1"/><text x="99.8424%" y="1055.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (1 samples, 0.03%)</title><rect x="99.5924%" y="1029" width="0.0340%" height="15" fill="rgb(211,180,12)" fg:x="2932" fg:w="1"/><text x="99.8424%" y="1039.50"></text></g><g><title>core::hash::Hash::hash_slice (1 samples, 0.03%)</title><rect x="99.5924%" y="1013" width="0.0340%" height="15" fill="rgb(254,166,49)" fg:x="2932" fg:w="1"/><text x="99.8424%" y="1023.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="99.5924%" y="997" width="0.0340%" height="15" fill="rgb(205,19,0)" fg:x="2932" fg:w="1"/><text x="99.8424%" y="1007.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_render_pass (8 samples, 0.27%)</title><rect x="99.3886%" y="1173" width="0.2717%" height="15" fill="rgb(224,172,32)" fg:x="2926" fg:w="8"/><text x="99.6386%" y="1183.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::vulkan::DeviceShared&gt;::make_render_pass (3 samples, 0.10%)</title><rect x="99.5584%" y="1157" width="0.1019%" height="15" fill="rgb(254,136,30)" fg:x="2931" fg:w="3"/><text x="99.8084%" y="1167.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (2 samples, 0.07%)</title><rect x="99.5924%" y="1141" width="0.0679%" height="15" fill="rgb(246,19,35)" fg:x="2932" fg:w="2"/><text x="99.8424%" y="1151.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (2 samples, 0.07%)</title><rect x="99.5924%" y="1125" width="0.0679%" height="15" fill="rgb(219,24,36)" fg:x="2932" fg:w="2"/><text x="99.8424%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.03%)</title><rect x="99.6264%" y="1109" width="0.0340%" height="15" fill="rgb(251,55,1)" fg:x="2933" fg:w="1"/><text x="99.8764%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.03%)</title><rect x="99.6264%" y="1093" width="0.0340%" height="15" fill="rgb(218,117,39)" fg:x="2933" fg:w="1"/><text x="99.8764%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (1 samples, 0.03%)</title><rect x="99.6264%" y="1077" width="0.0340%" height="15" fill="rgb(248,169,11)" fg:x="2933" fg:w="1"/><text x="99.8764%" y="1087.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (1 samples, 0.03%)</title><rect x="99.6264%" y="1061" width="0.0340%" height="15" fill="rgb(244,40,44)" fg:x="2933" fg:w="1"/><text x="99.8764%" y="1071.50"></text></g><g><title>&lt;wgpu_hal::vulkan::RenderPassKey as core::cmp::PartialEq&gt;::eq (1 samples, 0.03%)</title><rect x="99.6264%" y="1045" width="0.0340%" height="15" fill="rgb(234,62,37)" fg:x="2933" fg:w="1"/><text x="99.8764%" y="1055.50"></text></g><g><title>&lt;arrayvec::arrayvec::ArrayVec&lt;T,_&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.03%)</title><rect x="99.6264%" y="1029" width="0.0340%" height="15" fill="rgb(207,117,42)" fg:x="2933" fg:w="1"/><text x="99.8764%" y="1039.50"></text></g><g><title>&lt;arrayvec::arrayvec::ArrayVec&lt;T,_&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.03%)</title><rect x="99.6264%" y="1013" width="0.0340%" height="15" fill="rgb(213,43,2)" fg:x="2933" fg:w="1"/><text x="99.8764%" y="1023.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::as_slice (1 samples, 0.03%)</title><rect x="99.6264%" y="997" width="0.0340%" height="15" fill="rgb(244,202,51)" fg:x="2933" fg:w="1"/><text x="99.8764%" y="1007.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::as_slice (1 samples, 0.03%)</title><rect x="99.6264%" y="981" width="0.0340%" height="15" fill="rgb(253,174,46)" fg:x="2933" fg:w="1"/><text x="99.8764%" y="991.50"></text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="99.6603%" y="1173" width="0.0340%" height="15" fill="rgb(251,23,1)" fg:x="2934" fg:w="1"/><text x="99.9103%" y="1183.50"></text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::new_wayland_any_thread (1 samples, 0.03%)</title><rect x="99.6603%" y="1157" width="0.0340%" height="15" fill="rgb(253,26,1)" fg:x="2934" fg:w="1"/><text x="99.9103%" y="1167.50"></text></g><g><title>winit::platform_impl::platform::wayland::event_loop::EventLoop&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="99.6603%" y="1141" width="0.0340%" height="15" fill="rgb(216,89,31)" fg:x="2934" fg:w="1"/><text x="99.9103%" y="1151.50"></text></g><g><title>winit::platform_impl::platform::wayland::seat::SeatManager::new (1 samples, 0.03%)</title><rect x="99.6603%" y="1125" width="0.0340%" height="15" fill="rgb(209,109,5)" fg:x="2934" fg:w="1"/><text x="99.9103%" y="1135.50"></text></g><g><title>winit::platform_impl::platform::wayland::seat::SeatManagerInner::process_seat_update (1 samples, 0.03%)</title><rect x="99.6603%" y="1109" width="0.0340%" height="15" fill="rgb(229,63,13)" fg:x="2934" fg:w="1"/><text x="99.9103%" y="1119.50"></text></g><g><title>winit::platform_impl::platform::wayland::seat::keyboard::Keyboard::new (1 samples, 0.03%)</title><rect x="99.6603%" y="1093" width="0.0340%" height="15" fill="rgb(238,137,54)" fg:x="2934" fg:w="1"/><text x="99.9103%" y="1103.50"></text></g><g><title>smithay_client_toolkit::seat::keyboard::map_keyboard_repeat (1 samples, 0.03%)</title><rect x="99.6603%" y="1077" width="0.0340%" height="15" fill="rgb(228,1,9)" fg:x="2934" fg:w="1"/><text x="99.9103%" y="1087.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (1 samples, 0.03%)</title><rect x="99.6603%" y="1061" width="0.0340%" height="15" fill="rgb(249,120,48)" fg:x="2934" fg:w="1"/><text x="99.9103%" y="1071.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.03%)</title><rect x="99.6603%" y="1045" width="0.0340%" height="15" fill="rgb(209,72,36)" fg:x="2934" fg:w="1"/><text x="99.9103%" y="1055.50"></text></g><g><title>smithay_client_toolkit::seat::keyboard::state::KbState::new (1 samples, 0.03%)</title><rect x="99.6603%" y="1029" width="0.0340%" height="15" fill="rgb(247,98,49)" fg:x="2934" fg:w="1"/><text x="99.9103%" y="1039.50"></text></g><g><title>smithay_client_toolkit::seat::keyboard::state::KbState::init_compose (1 samples, 0.03%)</title><rect x="99.6603%" y="1013" width="0.0340%" height="15" fill="rgb(233,75,36)" fg:x="2934" fg:w="1"/><text x="99.9103%" y="1023.50"></text></g><g><title>xkb_compose_table_new_from_locale (1 samples, 0.03%)</title><rect x="99.6603%" y="997" width="0.0340%" height="15" fill="rgb(225,14,24)" fg:x="2934" fg:w="1"/><text x="99.9103%" y="1007.50"></text></g><g><title>[libxkbcommon.so.0.0.0] (1 samples, 0.03%)</title><rect x="99.6603%" y="981" width="0.0340%" height="15" fill="rgb(237,193,20)" fg:x="2934" fg:w="1"/><text x="99.9103%" y="991.50"></text></g><g><title>[libxkbcommon.so.0.0.0] (1 samples, 0.03%)</title><rect x="99.6603%" y="965" width="0.0340%" height="15" fill="rgb(239,122,19)" fg:x="2934" fg:w="1"/><text x="99.9103%" y="975.50"></text></g><g><title>[libxkbcommon.so.0.0.0] (1 samples, 0.03%)</title><rect x="99.6603%" y="949" width="0.0340%" height="15" fill="rgb(231,220,10)" fg:x="2934" fg:w="1"/><text x="99.9103%" y="959.50"></text></g><g><title>[libxkbcommon.so.0.0.0] (1 samples, 0.03%)</title><rect x="99.6603%" y="933" width="0.0340%" height="15" fill="rgb(220,66,15)" fg:x="2934" fg:w="1"/><text x="99.9103%" y="943.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="99.6603%" y="917" width="0.0340%" height="15" fill="rgb(215,171,52)" fg:x="2934" fg:w="1"/><text x="99.9103%" y="927.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="99.6603%" y="901" width="0.0340%" height="15" fill="rgb(241,169,50)" fg:x="2934" fg:w="1"/><text x="99.9103%" y="911.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="99.6603%" y="885" width="0.0340%" height="15" fill="rgb(236,189,0)" fg:x="2934" fg:w="1"/><text x="99.9103%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="99.6603%" y="869" width="0.0340%" height="15" fill="rgb(217,147,20)" fg:x="2934" fg:w="1"/><text x="99.9103%" y="879.50"></text></g><g><title>[unknown] (279 samples, 9.48%)</title><rect x="90.2514%" y="1189" width="9.4769%" height="15" fill="rgb(206,188,39)" fg:x="2657" fg:w="279"/><text x="90.5014%" y="1199.50">[unknown]</text></g><g><title>winit::platform_impl::platform::wayland::event_loop::EventLoop&lt;T&gt;::run (1 samples, 0.03%)</title><rect x="99.6943%" y="1173" width="0.0340%" height="15" fill="rgb(227,118,25)" fg:x="2935" fg:w="1"/><text x="99.9443%" y="1183.50"></text></g><g><title>winit::platform_impl::platform::wayland::event_loop::EventLoop&lt;T&gt;::run_return (1 samples, 0.03%)</title><rect x="99.6943%" y="1157" width="0.0340%" height="15" fill="rgb(248,171,40)" fg:x="2935" fg:w="1"/><text x="99.9443%" y="1167.50"></text></g><g><title>winit::platform_impl::platform::sticky_exit_callback (1 samples, 0.03%)</title><rect x="99.6943%" y="1141" width="0.0340%" height="15" fill="rgb(251,90,54)" fg:x="2935" fg:w="1"/><text x="99.9443%" y="1151.50"></text></g><g><title>game_window::main_loop::{{closure}} (1 samples, 0.03%)</title><rect x="99.6943%" y="1125" width="0.0340%" height="15" fill="rgb(234,11,46)" fg:x="2935" fg:w="1"/><text x="99.9443%" y="1135.50"></text></g><g><title>game_window::systems::create_windows (1 samples, 0.03%)</title><rect x="99.6943%" y="1109" width="0.0340%" height="15" fill="rgb(229,134,13)" fg:x="2935" fg:w="1"/><text x="99.9443%" y="1119.50"></text></g><g><title>winit::window::WindowBuilder::build (1 samples, 0.03%)</title><rect x="99.6943%" y="1093" width="0.0340%" height="15" fill="rgb(223,129,3)" fg:x="2935" fg:w="1"/><text x="99.9443%" y="1103.50"></text></g><g><title>winit::platform_impl::platform::Window::new (1 samples, 0.03%)</title><rect x="99.6943%" y="1077" width="0.0340%" height="15" fill="rgb(221,124,13)" fg:x="2935" fg:w="1"/><text x="99.9443%" y="1087.50"></text></g><g><title>winit::platform_impl::platform::wayland::window::Window::new (1 samples, 0.03%)</title><rect x="99.6943%" y="1061" width="0.0340%" height="15" fill="rgb(234,3,18)" fg:x="2935" fg:w="1"/><text x="99.9443%" y="1071.50"></text></g><g><title>smithay_client_toolkit::window::&lt;impl smithay_client_toolkit::environment::Environment&lt;E&gt;&gt;::create_window (1 samples, 0.03%)</title><rect x="99.6943%" y="1045" width="0.0340%" height="15" fill="rgb(249,199,20)" fg:x="2935" fg:w="1"/><text x="99.9443%" y="1055.50"></text></g><g><title>smithay_client_toolkit::window::Window&lt;F&gt;::init_with_decorations (1 samples, 0.03%)</title><rect x="99.6943%" y="1029" width="0.0340%" height="15" fill="rgb(224,134,6)" fg:x="2935" fg:w="1"/><text x="99.9443%" y="1039.50"></text></g><g><title>&lt;sctk_adwaita::AdwaitaFrame as smithay_client_toolkit::window::Frame&gt;::init (1 samples, 0.03%)</title><rect x="99.6943%" y="1013" width="0.0340%" height="15" fill="rgb(254,83,26)" fg:x="2935" fg:w="1"/><text x="99.9443%" y="1023.50"></text></g><g><title>&lt;wayland_client::protocol::wl_surface::WlSurface as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="99.6943%" y="997" width="0.0340%" height="15" fill="rgb(217,88,9)" fg:x="2935" fg:w="1"/><text x="99.9443%" y="1007.50"></text></g><g><title>&lt;wayland_client::proxy::Proxy&lt;I&gt; as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="99.6943%" y="981" width="0.0340%" height="15" fill="rgb(225,73,2)" fg:x="2935" fg:w="1"/><text x="99.9443%" y="991.50"></text></g><g><title>wayland_client::imp::proxy::ProxyInner::detach (1 samples, 0.03%)</title><rect x="99.6943%" y="965" width="0.0340%" height="15" fill="rgb(226,44,39)" fg:x="2935" fg:w="1"/><text x="99.9443%" y="975.50"></text></g><g><title>wayland_client::imp::proxy::ProxyInner::is_external (1 samples, 0.03%)</title><rect x="99.6943%" y="949" width="0.0340%" height="15" fill="rgb(228,53,17)" fg:x="2935" fg:w="1"/><text x="99.9443%" y="959.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (1 samples, 0.03%)</title><rect x="99.6943%" y="933" width="0.0340%" height="15" fill="rgb(212,27,27)" fg:x="2935" fg:w="1"/><text x="99.9443%" y="943.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (1 samples, 0.03%)</title><rect x="99.6943%" y="917" width="0.0340%" height="15" fill="rgb(241,50,6)" fg:x="2935" fg:w="1"/><text x="99.9443%" y="927.50"></text></g><g><title>game_render (472 samples, 16.03%)</title><rect x="83.7296%" y="1205" width="16.0326%" height="15" fill="rgb(225,28,51)" fg:x="2465" fg:w="472"/><text x="83.9796%" y="1215.50">game_render</text></g><g><title>_start (1 samples, 0.03%)</title><rect x="99.7283%" y="1189" width="0.0340%" height="15" fill="rgb(215,33,16)" fg:x="2936" fg:w="1"/><text x="99.9783%" y="1199.50"></text></g><g><title>__libc_start_main (1 samples, 0.03%)</title><rect x="99.7283%" y="1173" width="0.0340%" height="15" fill="rgb(243,40,39)" fg:x="2936" fg:w="1"/><text x="99.9783%" y="1183.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="99.7283%" y="1157" width="0.0340%" height="15" fill="rgb(225,11,42)" fg:x="2936" fg:w="1"/><text x="99.9783%" y="1167.50"></text></g><g><title>main (1 samples, 0.03%)</title><rect x="99.7283%" y="1141" width="0.0340%" height="15" fill="rgb(241,220,38)" fg:x="2936" fg:w="1"/><text x="99.9783%" y="1151.50"></text></g><g><title>std::rt::lang_start_internal (1 samples, 0.03%)</title><rect x="99.7283%" y="1125" width="0.0340%" height="15" fill="rgb(244,52,35)" fg:x="2936" fg:w="1"/><text x="99.9783%" y="1135.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.03%)</title><rect x="99.7283%" y="1109" width="0.0340%" height="15" fill="rgb(246,42,46)" fg:x="2936" fg:w="1"/><text x="99.9783%" y="1119.50"></text></g><g><title>std::panicking::try (1 samples, 0.03%)</title><rect x="99.7283%" y="1093" width="0.0340%" height="15" fill="rgb(205,184,13)" fg:x="2936" fg:w="1"/><text x="99.9783%" y="1103.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.03%)</title><rect x="99.7283%" y="1077" width="0.0340%" height="15" fill="rgb(209,48,36)" fg:x="2936" fg:w="1"/><text x="99.9783%" y="1087.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (1 samples, 0.03%)</title><rect x="99.7283%" y="1061" width="0.0340%" height="15" fill="rgb(244,34,51)" fg:x="2936" fg:w="1"/><text x="99.9783%" y="1071.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.03%)</title><rect x="99.7283%" y="1045" width="0.0340%" height="15" fill="rgb(221,107,33)" fg:x="2936" fg:w="1"/><text x="99.9783%" y="1055.50"></text></g><g><title>std::panicking::try (1 samples, 0.03%)</title><rect x="99.7283%" y="1029" width="0.0340%" height="15" fill="rgb(224,203,12)" fg:x="2936" fg:w="1"/><text x="99.9783%" y="1039.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.03%)</title><rect x="99.7283%" y="1013" width="0.0340%" height="15" fill="rgb(230,215,18)" fg:x="2936" fg:w="1"/><text x="99.9783%" y="1023.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1 samples, 0.03%)</title><rect x="99.7283%" y="997" width="0.0340%" height="15" fill="rgb(206,185,35)" fg:x="2936" fg:w="1"/><text x="99.9783%" y="1007.50"></text></g><g><title>std::rt::lang_start::{{closure}} (1 samples, 0.03%)</title><rect x="99.7283%" y="981" width="0.0340%" height="15" fill="rgb(228,140,34)" fg:x="2936" fg:w="1"/><text x="99.9783%" y="991.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.03%)</title><rect x="99.7283%" y="965" width="0.0340%" height="15" fill="rgb(208,93,13)" fg:x="2936" fg:w="1"/><text x="99.9783%" y="975.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.03%)</title><rect x="99.7283%" y="949" width="0.0340%" height="15" fill="rgb(221,193,39)" fg:x="2936" fg:w="1"/><text x="99.9783%" y="959.50"></text></g><g><title>game_render::main (1 samples, 0.03%)</title><rect x="99.7283%" y="933" width="0.0340%" height="15" fill="rgb(241,132,34)" fg:x="2936" fg:w="1"/><text x="99.9783%" y="943.50"></text></g><g><title>bevy_app::app::App::new (1 samples, 0.03%)</title><rect x="99.7283%" y="917" width="0.0340%" height="15" fill="rgb(221,141,10)" fg:x="2936" fg:w="1"/><text x="99.9783%" y="927.50"></text></g><g><title>&lt;bevy_app::app::App as core::default::Default&gt;::default (1 samples, 0.03%)</title><rect x="99.7283%" y="901" width="0.0340%" height="15" fill="rgb(226,90,31)" fg:x="2936" fg:w="1"/><text x="99.9783%" y="911.50"></text></g><g><title>bevy_app::app::App::init_resource (1 samples, 0.03%)</title><rect x="99.7283%" y="885" width="0.0340%" height="15" fill="rgb(243,75,5)" fg:x="2936" fg:w="1"/><text x="99.9783%" y="895.50"></text></g><g><title>bevy_ecs::world::World::init_resource (1 samples, 0.03%)</title><rect x="99.7283%" y="869" width="0.0340%" height="15" fill="rgb(227,156,21)" fg:x="2936" fg:w="1"/><text x="99.9783%" y="879.50"></text></g><g><title>&lt;T as bevy_ecs::world::FromWorld&gt;::from_world (1 samples, 0.03%)</title><rect x="99.7283%" y="853" width="0.0340%" height="15" fill="rgb(250,195,8)" fg:x="2936" fg:w="1"/><text x="99.9783%" y="863.50"></text></g><g><title>&lt;bevy_app::app::AppTypeRegistry as core::default::Default&gt;::default (1 samples, 0.03%)</title><rect x="99.7283%" y="837" width="0.0340%" height="15" fill="rgb(220,134,5)" fg:x="2936" fg:w="1"/><text x="99.9783%" y="847.50"></text></g><g><title>&lt;bevy_reflect::type_registry::TypeRegistryArc as core::default::Default&gt;::default (1 samples, 0.03%)</title><rect x="99.7283%" y="821" width="0.0340%" height="15" fill="rgb(246,106,34)" fg:x="2936" fg:w="1"/><text x="99.9783%" y="831.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::default::Default&gt;::default (1 samples, 0.03%)</title><rect x="99.7283%" y="805" width="0.0340%" height="15" fill="rgb(205,1,4)" fg:x="2936" fg:w="1"/><text x="99.9783%" y="815.50"></text></g><g><title>&lt;lock_api::rwlock::RwLock&lt;R,T&gt; as core::default::Default&gt;::default (1 samples, 0.03%)</title><rect x="99.7283%" y="789" width="0.0340%" height="15" fill="rgb(224,151,29)" fg:x="2936" fg:w="1"/><text x="99.9783%" y="799.50"></text></g><g><title>&lt;bevy_reflect::type_registry::TypeRegistry as core::default::Default&gt;::default (1 samples, 0.03%)</title><rect x="99.7283%" y="773" width="0.0340%" height="15" fill="rgb(251,196,0)" fg:x="2936" fg:w="1"/><text x="99.9783%" y="783.50"></text></g><g><title>bevy_reflect::type_registry::TypeRegistry::new (1 samples, 0.03%)</title><rect x="99.7283%" y="757" width="0.0340%" height="15" fill="rgb(212,127,0)" fg:x="2936" fg:w="1"/><text x="99.9783%" y="767.50"></text></g><g><title>bevy_reflect::type_registry::TypeRegistry::register (1 samples, 0.03%)</title><rect x="99.7283%" y="741" width="0.0340%" height="15" fill="rgb(236,71,53)" fg:x="2936" fg:w="1"/><text x="99.9783%" y="751.50"></text></g><g><title>bevy_reflect::impls::std::&lt;impl bevy_reflect::type_registry::GetTypeRegistration for i32&gt;::get_type_registration (1 samples, 0.03%)</title><rect x="99.7283%" y="725" width="0.0340%" height="15" fill="rgb(227,99,0)" fg:x="2936" fg:w="1"/><text x="99.9783%" y="735.50"></text></g><g><title>bevy_reflect::type_registry::TypeRegistration::insert (1 samples, 0.03%)</title><rect x="99.7283%" y="709" width="0.0340%" height="15" fill="rgb(239,89,21)" fg:x="2936" fg:w="1"/><text x="99.9783%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.03%)</title><rect x="99.7283%" y="693" width="0.0340%" height="15" fill="rgb(243,122,19)" fg:x="2936" fg:w="1"/><text x="99.9783%" y="703.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::insert (1 samples, 0.03%)</title><rect x="99.7283%" y="677" width="0.0340%" height="15" fill="rgb(229,192,45)" fg:x="2936" fg:w="1"/><text x="99.9783%" y="687.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve (1 samples, 0.03%)</title><rect x="99.7283%" y="661" width="0.0340%" height="15" fill="rgb(235,165,35)" fg:x="2936" fg:w="1"/><text x="99.9783%" y="671.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.03%)</title><rect x="99.7283%" y="645" width="0.0340%" height="15" fill="rgb(253,202,0)" fg:x="2936" fg:w="1"/><text x="99.9783%" y="655.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::reserve_rehash_inner (1 samples, 0.03%)</title><rect x="99.7283%" y="629" width="0.0340%" height="15" fill="rgb(235,51,20)" fg:x="2936" fg:w="1"/><text x="99.9783%" y="639.50"></text></g><g><title>[gsettings] (1 samples, 0.03%)</title><rect x="99.7622%" y="1189" width="0.0340%" height="15" fill="rgb(218,95,46)" fg:x="2937" fg:w="1"/><text x="100.0122%" y="1199.50"></text></g><g><title>__libc_start_main (1 samples, 0.03%)</title><rect x="99.7622%" y="1173" width="0.0340%" height="15" fill="rgb(212,81,10)" fg:x="2937" fg:w="1"/><text x="100.0122%" y="1183.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="99.7622%" y="1157" width="0.0340%" height="15" fill="rgb(240,59,0)" fg:x="2937" fg:w="1"/><text x="100.0122%" y="1167.50"></text></g><g><title>[gsettings] (1 samples, 0.03%)</title><rect x="99.7622%" y="1141" width="0.0340%" height="15" fill="rgb(212,191,42)" fg:x="2937" fg:w="1"/><text x="100.0122%" y="1151.50"></text></g><g><title>g_settings_new_full (1 samples, 0.03%)</title><rect x="99.7622%" y="1125" width="0.0340%" height="15" fill="rgb(233,140,3)" fg:x="2937" fg:w="1"/><text x="100.0122%" y="1135.50"></text></g><g><title>g_object_new (1 samples, 0.03%)</title><rect x="99.7622%" y="1109" width="0.0340%" height="15" fill="rgb(215,69,23)" fg:x="2937" fg:w="1"/><text x="100.0122%" y="1119.50"></text></g><g><title>g_object_new_valist (1 samples, 0.03%)</title><rect x="99.7622%" y="1093" width="0.0340%" height="15" fill="rgb(240,202,20)" fg:x="2937" fg:w="1"/><text x="100.0122%" y="1103.50"></text></g><g><title>[libgobject-2.0.so.0.7600.3] (1 samples, 0.03%)</title><rect x="99.7622%" y="1077" width="0.0340%" height="15" fill="rgb(209,146,50)" fg:x="2937" fg:w="1"/><text x="100.0122%" y="1087.50"></text></g><g><title>[libdconfsettings.so] (1 samples, 0.03%)</title><rect x="99.7622%" y="1061" width="0.0340%" height="15" fill="rgb(253,102,54)" fg:x="2937" fg:w="1"/><text x="100.0122%" y="1071.50"></text></g><g><title>[libdconfsettings.so] (1 samples, 0.03%)</title><rect x="99.7622%" y="1045" width="0.0340%" height="15" fill="rgb(250,173,47)" fg:x="2937" fg:w="1"/><text x="100.0122%" y="1055.50"></text></g><g><title>[libdconfsettings.so] (1 samples, 0.03%)</title><rect x="99.7622%" y="1029" width="0.0340%" height="15" fill="rgb(232,142,7)" fg:x="2937" fg:w="1"/><text x="100.0122%" y="1039.50"></text></g><g><title>g_memory_input_stream_get_type (1 samples, 0.03%)</title><rect x="99.7622%" y="1013" width="0.0340%" height="15" fill="rgb(230,157,47)" fg:x="2937" fg:w="1"/><text x="100.0122%" y="1023.50"></text></g><g><title>[libgio-2.0.so.0.7600.3] (1 samples, 0.03%)</title><rect x="99.7622%" y="997" width="0.0340%" height="15" fill="rgb(214,177,35)" fg:x="2937" fg:w="1"/><text x="100.0122%" y="1007.50"></text></g><g><title>g_seekable_get_type (1 samples, 0.03%)</title><rect x="99.7622%" y="981" width="0.0340%" height="15" fill="rgb(234,119,46)" fg:x="2937" fg:w="1"/><text x="100.0122%" y="991.50"></text></g><g><title>g_type_register_static_simple (1 samples, 0.03%)</title><rect x="99.7622%" y="965" width="0.0340%" height="15" fill="rgb(241,180,50)" fg:x="2937" fg:w="1"/><text x="100.0122%" y="975.50"></text></g><g><title>g_type_register_static (1 samples, 0.03%)</title><rect x="99.7622%" y="949" width="0.0340%" height="15" fill="rgb(221,54,25)" fg:x="2937" fg:w="1"/><text x="100.0122%" y="959.50"></text></g><g><title>[libgobject-2.0.so.0.7600.3] (1 samples, 0.03%)</title><rect x="99.7622%" y="933" width="0.0340%" height="15" fill="rgb(209,157,44)" fg:x="2937" fg:w="1"/><text x="100.0122%" y="943.50"></text></g><g><title>g_malloc0 (1 samples, 0.03%)</title><rect x="99.7622%" y="917" width="0.0340%" height="15" fill="rgb(246,115,41)" fg:x="2937" fg:w="1"/><text x="100.0122%" y="927.50"></text></g><g><title>__libc_calloc (1 samples, 0.03%)</title><rect x="99.7622%" y="901" width="0.0340%" height="15" fill="rgb(229,86,1)" fg:x="2937" fg:w="1"/><text x="100.0122%" y="911.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.03%)</title><rect x="99.7962%" y="1189" width="0.0340%" height="15" fill="rgb(240,108,53)" fg:x="2938" fg:w="1"/><text x="100.0462%" y="1199.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.03%)</title><rect x="99.7962%" y="1173" width="0.0340%" height="15" fill="rgb(227,134,2)" fg:x="2938" fg:w="1"/><text x="100.0462%" y="1183.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.03%)</title><rect x="99.7962%" y="1157" width="0.0340%" height="15" fill="rgb(213,129,25)" fg:x="2938" fg:w="1"/><text x="100.0462%" y="1167.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.03%)</title><rect x="99.7962%" y="1141" width="0.0340%" height="15" fill="rgb(226,35,21)" fg:x="2938" fg:w="1"/><text x="100.0462%" y="1151.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.03%)</title><rect x="99.7962%" y="1125" width="0.0340%" height="15" fill="rgb(208,129,26)" fg:x="2938" fg:w="1"/><text x="100.0462%" y="1135.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.03%)</title><rect x="99.7962%" y="1109" width="0.0340%" height="15" fill="rgb(224,83,6)" fg:x="2938" fg:w="1"/><text x="100.0462%" y="1119.50"></text></g><g><title>[libglib-2.0.so.0.7600.3] (3 samples, 0.10%)</title><rect x="99.8302%" y="1157" width="0.1019%" height="15" fill="rgb(227,52,39)" fg:x="2939" fg:w="3"/><text x="100.0802%" y="1167.50"></text></g><g><title>g_private_set (3 samples, 0.10%)</title><rect x="99.8302%" y="1141" width="0.1019%" height="15" fill="rgb(241,30,17)" fg:x="2939" fg:w="3"/><text x="100.0802%" y="1151.50"></text></g><g><title>[libglib-2.0.so.0.7600.3] (2 samples, 0.07%)</title><rect x="99.8641%" y="1125" width="0.0679%" height="15" fill="rgb(246,186,42)" fg:x="2940" fg:w="2"/><text x="100.1141%" y="1135.50"></text></g><g><title>malloc (2 samples, 0.07%)</title><rect x="99.8641%" y="1109" width="0.0679%" height="15" fill="rgb(221,169,15)" fg:x="2940" fg:w="2"/><text x="100.1141%" y="1119.50"></text></g><g><title>[libc.so.6] (2 samples, 0.07%)</title><rect x="99.8641%" y="1093" width="0.0679%" height="15" fill="rgb(235,108,21)" fg:x="2940" fg:w="2"/><text x="100.1141%" y="1103.50"></text></g><g><title>[libc.so.6] (2 samples, 0.07%)</title><rect x="99.8641%" y="1077" width="0.0679%" height="15" fill="rgb(219,148,30)" fg:x="2940" fg:w="2"/><text x="100.1141%" y="1087.50"></text></g><g><title>[libc.so.6] (2 samples, 0.07%)</title><rect x="99.8641%" y="1061" width="0.0679%" height="15" fill="rgb(220,109,5)" fg:x="2940" fg:w="2"/><text x="100.1141%" y="1071.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="99.8981%" y="1045" width="0.0340%" height="15" fill="rgb(213,203,48)" fg:x="2941" fg:w="1"/><text x="100.1481%" y="1055.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="99.8981%" y="1029" width="0.0340%" height="15" fill="rgb(244,71,33)" fg:x="2941" fg:w="1"/><text x="100.1481%" y="1039.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="99.8981%" y="1013" width="0.0340%" height="15" fill="rgb(209,23,2)" fg:x="2941" fg:w="1"/><text x="100.1481%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="99.8981%" y="997" width="0.0340%" height="15" fill="rgb(219,97,7)" fg:x="2941" fg:w="1"/><text x="100.1481%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="99.8981%" y="981" width="0.0340%" height="15" fill="rgb(216,161,23)" fg:x="2941" fg:w="1"/><text x="100.1481%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="99.8981%" y="965" width="0.0340%" height="15" fill="rgb(207,45,42)" fg:x="2941" fg:w="1"/><text x="100.1481%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="99.8981%" y="949" width="0.0340%" height="15" fill="rgb(241,61,4)" fg:x="2941" fg:w="1"/><text x="100.1481%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="99.9321%" y="1157" width="0.0340%" height="15" fill="rgb(236,170,1)" fg:x="2942" fg:w="1"/><text x="100.1821%" y="1167.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="99.9321%" y="1141" width="0.0340%" height="15" fill="rgb(239,72,5)" fg:x="2942" fg:w="1"/><text x="100.1821%" y="1151.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="99.9321%" y="1125" width="0.0340%" height="15" fill="rgb(214,13,50)" fg:x="2942" fg:w="1"/><text x="100.1821%" y="1135.50"></text></g><g><title>all (2,944 samples, 100%)</title><rect x="0.0000%" y="1221" width="100.0000%" height="15" fill="rgb(224,88,9)" fg:x="0" fg:w="2944"/><text x="0.2500%" y="1231.50"></text></g><g><title>gsettings (7 samples, 0.24%)</title><rect x="99.7622%" y="1205" width="0.2378%" height="15" fill="rgb(238,192,34)" fg:x="2937" fg:w="7"/><text x="100.0122%" y="1215.50"></text></g><g><title>[libc.so.6] (5 samples, 0.17%)</title><rect x="99.8302%" y="1189" width="0.1698%" height="15" fill="rgb(217,203,50)" fg:x="2939" fg:w="5"/><text x="100.0802%" y="1199.50"></text></g><g><title>[libc.so.6] (5 samples, 0.17%)</title><rect x="99.8302%" y="1173" width="0.1698%" height="15" fill="rgb(241,123,32)" fg:x="2939" fg:w="5"/><text x="100.0802%" y="1183.50"></text></g><g><title>__ctype_init (1 samples, 0.03%)</title><rect x="99.9660%" y="1157" width="0.0340%" height="15" fill="rgb(248,151,39)" fg:x="2943" fg:w="1"/><text x="100.2160%" y="1167.50"></text></g></svg></svg>